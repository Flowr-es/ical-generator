{
  "stats": {
    "suites": 111,
    "tests": 382,
    "passes": 382,
    "pending": 0,
    "failures": 0,
    "start": "2021-03-26T14:49:36.480Z",
    "end": "2021-03-26T14:49:36.762Z",
    "duration": 282,
    "testsRegistered": 382,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3649f0d0-b272-406c-a7c9-7e5a49879572",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "034c1e81-8106-4d70-9443-d82b8d890e45",
          "title": "ical-generator Alarm",
          "fullFile": "/home/runner/work/ical-generator/ical-generator/test/alarm.ts",
          "file": "/test/alarm.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "e3b99adf-44d2-44e4-969a-375beee11be2",
              "title": "constructor()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/alarm.ts",
              "file": "/test/alarm.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "shouldn't work without event reference",
                  "fullTitle": "ical-generator Alarm constructor() shouldn't work without event reference",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.throws(function () {\n    // @ts-ignore\n    new alarm_1.default({ type: alarm_1.ICalAlarmType.display }, null);\n}, /`event`/);",
                  "err": {},
                  "uuid": "66dfd051-7bc7-482e-9c4f-bb587b87694f",
                  "parentUUID": "e3b99adf-44d2-44e4-969a-375beee11be2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should ignore unknown data attributes",
                  "fullTitle": "ical-generator Alarm constructor() should ignore unknown data attributes",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({\n    // @ts-ignore\n    unknown: true,\n    type: alarm_1.ICalAlarmType.display\n}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.strictEqual(a.type(), 'display');",
                  "err": {},
                  "uuid": "b2cfc80a-7671-46cb-9400-1bfad1c835e0",
                  "parentUUID": "e3b99adf-44d2-44e4-969a-375beee11be2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "66dfd051-7bc7-482e-9c4f-bb587b87694f",
                "b2cfc80a-7671-46cb-9400-1bfad1c835e0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "273f03d7-a88d-4e32-9ed7-00f6445a9443",
              "title": "type()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/alarm.ts",
              "file": "/test/alarm.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Alarm type() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.deepStrictEqual(a, a.type(null));\nassert_1.default.deepStrictEqual(a, a.type(alarm_1.ICalAlarmType.display));",
                  "err": {},
                  "uuid": "50be0bd3-201d-405c-93c2-2bb08a6f40c7",
                  "parentUUID": "273f03d7-a88d-4e32-9ed7-00f6445a9443",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Alarm type() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.strictEqual(a.type(), null);\na.type(alarm_1.ICalAlarmType.display);\nassert_1.default.strictEqual(a.type(), 'display');\na.type(null);\nassert_1.default.strictEqual(a.type(), null);",
                  "err": {},
                  "uuid": "e1e4a6c7-5d2f-42d2-96a6-8390cb75f42d",
                  "parentUUID": "273f03d7-a88d-4e32-9ed7-00f6445a9443",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when type not allowed",
                  "fullTitle": "ical-generator Alarm type() should throw error when type not allowed",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.throws(function () {\n    // @ts-ignore\n    a.type('BANANA');\n}, /`type`/);",
                  "err": {},
                  "uuid": "5a4e6be0-e1a6-4ced-90f9-f1dafae621ae",
                  "parentUUID": "273f03d7-a88d-4e32-9ed7-00f6445a9443",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change something",
                  "fullTitle": "ical-generator Alarm type() should change something",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({\n    type: alarm_1.ICalAlarmType.display,\n    trigger: 60 * 10\n}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.ok(a.toString().indexOf('ACTION:DISPLAY') > -1);",
                  "err": {},
                  "uuid": "e9bd285b-39ab-484d-9190-6bb523bb2b1e",
                  "parentUUID": "273f03d7-a88d-4e32-9ed7-00f6445a9443",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "50be0bd3-201d-405c-93c2-2bb08a6f40c7",
                "e1e4a6c7-5d2f-42d2-96a6-8390cb75f42d",
                "5a4e6be0-e1a6-4ced-90f9-f1dafae621ae",
                "e9bd285b-39ab-484d-9190-6bb523bb2b1e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "1fb8f6c3-b7b4-4a5e-b6b2-70f52cbbbae0",
              "title": "trigger()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/alarm.ts",
              "file": "/test/alarm.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Alarm trigger() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.deepStrictEqual(a, a.trigger(null));\nassert_1.default.deepStrictEqual(a, a.trigger(60 * 10));",
                  "err": {},
                  "uuid": "b5028375-c23c-455d-a5fb-24f4526d6670",
                  "parentUUID": "1fb8f6c3-b7b4-4a5e-b6b2-70f52cbbbae0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Alarm trigger() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default()));\nconst now = new Date();\nassert_1.default.strictEqual(a.trigger(), null);\nassert_1.default.strictEqual(a.triggerAfter(), null);\na.trigger(300);\nassert_1.default.strictEqual(a.trigger(), 300);\nassert_1.default.strictEqual(a.triggerAfter(), -300);\n// Date\na.trigger(now);\nconst dateResult = a.trigger();\nassert_1.default.deepStrictEqual(dateResult, now);\n// Null\na.trigger(null);\nassert_1.default.strictEqual(a.trigger(), null);\nassert_1.default.strictEqual(a.triggerAfter(), null);",
                  "err": {},
                  "uuid": "0345e39a-e995-47c2-a56d-be5c653d58b0",
                  "parentUUID": "1fb8f6c3-b7b4-4a5e-b6b2-70f52cbbbae0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when trigger not allowed",
                  "fullTitle": "ical-generator Alarm trigger() should throw error when trigger not allowed",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.throws(function () {\n    a.trigger(Infinity);\n}, /`trigger`/);\nassert_1.default.throws(function () {\n    // @ts-ignore\n    a.trigger('hi');\n}, /`trigger`/);\nassert_1.default.throws(function () {\n    // @ts-ignore\n    a.trigger(true);\n}, /`trigger`/);",
                  "err": {},
                  "uuid": "a8a37e76-ea73-401b-bd22-600d7dc15e4c",
                  "parentUUID": "1fb8f6c3-b7b4-4a5e-b6b2-70f52cbbbae0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should work with null",
                  "fullTitle": "ical-generator Alarm trigger() setter should work with null",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default()));\na.trigger(60 * 10);\na.trigger(null);\nassert_1.default.strictEqual(a.trigger(), null);",
                  "err": {},
                  "uuid": "f167f393-73f0-43ea-8fe0-3142c3940f8a",
                  "parentUUID": "1fb8f6c3-b7b4-4a5e-b6b2-70f52cbbbae0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should work with date",
                  "fullTitle": "ical-generator Alarm trigger() setter should work with date",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default()));\na.trigger(new Date());\nassert_1.default.ok(a.trigger() instanceof Date);",
                  "err": {},
                  "uuid": "066d1efb-284a-4acf-9765-c2036617d8db",
                  "parentUUID": "1fb8f6c3-b7b4-4a5e-b6b2-70f52cbbbae0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should work with moment instance",
                  "fullTitle": "ical-generator Alarm trigger() setter should work with moment instance",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default()));\na.trigger(moment_timezone_1.default());\nassert_1.default.ok(moment_timezone_1.default.isMoment(a.trigger()));",
                  "err": {},
                  "uuid": "b4a12246-3993-445a-9f9b-7f8c327fb32e",
                  "parentUUID": "1fb8f6c3-b7b4-4a5e-b6b2-70f52cbbbae0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should work with number",
                  "fullTitle": "ical-generator Alarm trigger() setter should work with number",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default()));\na.trigger(2 * 60);\nassert_1.default.strictEqual(a.trigger(), 120);",
                  "err": {},
                  "uuid": "0971b41b-da55-425e-8e45-3eefd961741c",
                  "parentUUID": "1fb8f6c3-b7b4-4a5e-b6b2-70f52cbbbae0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change something",
                  "fullTitle": "ical-generator Alarm trigger() should change something",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const trigger = moment_timezone_1.default('2015-02-01T13:38:45.000Z');\nconst a = new alarm_1.default({ type: alarm_1.ICalAlarmType.display, trigger: 60 * 10 }, new event_1.default({}, new calendar_1.default()));\nassert_1.default.ok(a.toString().indexOf('TRIGGER:-PT10M') > -1);\na.trigger(trigger);\nassert_1.default.ok(a.toString().indexOf('TRIGGER;VALUE=DATE-TIME:20150201T133845Z') > -1);",
                  "err": {},
                  "uuid": "15dc4f60-aad8-4f3b-a9a3-8e53e2d5dc5b",
                  "parentUUID": "1fb8f6c3-b7b4-4a5e-b6b2-70f52cbbbae0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b5028375-c23c-455d-a5fb-24f4526d6670",
                "0345e39a-e995-47c2-a56d-be5c653d58b0",
                "a8a37e76-ea73-401b-bd22-600d7dc15e4c",
                "f167f393-73f0-43ea-8fe0-3142c3940f8a",
                "066d1efb-284a-4acf-9765-c2036617d8db",
                "b4a12246-3993-445a-9f9b-7f8c327fb32e",
                "0971b41b-da55-425e-8e45-3eefd961741c",
                "15dc4f60-aad8-4f3b-a9a3-8e53e2d5dc5b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "409699b9-26f5-4f31-9d45-59a6d19ba169",
              "title": "triggerAfter()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/alarm.ts",
              "file": "/test/alarm.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Alarm triggerAfter() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.deepStrictEqual(a, a.triggerAfter(60 * 10));",
                  "err": {},
                  "uuid": "9074befb-bc64-4a7c-b8e8-ea7b62ac4943",
                  "parentUUID": "409699b9-26f5-4f31-9d45-59a6d19ba169",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Alarm triggerAfter() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default())).triggerAfter(300);\nassert_1.default.strictEqual(a.triggerAfter(), 300);\nassert_1.default.strictEqual(a.trigger(), -300);",
                  "err": {},
                  "uuid": "48ba5f7a-58f5-462b-8078-114dbb872732",
                  "parentUUID": "409699b9-26f5-4f31-9d45-59a6d19ba169",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should work with number",
                  "fullTitle": "ical-generator Alarm triggerAfter() setter should work with number",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default()));\na.triggerAfter(120);\nassert_1.default.strictEqual(a.trigger(), -120);",
                  "err": {},
                  "uuid": "5063d0c5-849c-4887-beb1-b69c8fc0c647",
                  "parentUUID": "409699b9-26f5-4f31-9d45-59a6d19ba169",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should throw error when trigger not allowed",
                  "fullTitle": "ical-generator Alarm triggerAfter() setter should throw error when trigger not allowed",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.throws(function () {\n    a.triggerAfter(Infinity);\n}, /`trigger`/);\nassert_1.default.throws(function () {\n    // @ts-ignore\n    a.triggerAfter('hi');\n}, /`trigger`/);\nassert_1.default.throws(function () {\n    // @ts-ignore\n    a.triggerAfter(true);\n}, /`trigger`/);",
                  "err": {},
                  "uuid": "09d3a884-3d4d-4396-8fad-f312b31ed3cf",
                  "parentUUID": "409699b9-26f5-4f31-9d45-59a6d19ba169",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change something",
                  "fullTitle": "ical-generator Alarm triggerAfter() should change something",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const trigger = moment_timezone_1.default('20150201T133845Z');\nconst a = new alarm_1.default({ type: alarm_1.ICalAlarmType.display, triggerAfter: 60 * 10 }, new event_1.default({}, new calendar_1.default()));\nassert_1.default.ok(a.toString().indexOf('TRIGGER;RELATED=END:PT10M') > -1);\na.triggerAfter(trigger);\nassert_1.default.ok(a.toString().indexOf('TRIGGER;VALUE=DATE-TIME:20150201T133845Z') > -1);",
                  "err": {},
                  "uuid": "6f2fcd96-5904-44e0-ad72-3cbd01d63afb",
                  "parentUUID": "409699b9-26f5-4f31-9d45-59a6d19ba169",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9074befb-bc64-4a7c-b8e8-ea7b62ac4943",
                "48ba5f7a-58f5-462b-8078-114dbb872732",
                "5063d0c5-849c-4887-beb1-b69c8fc0c647",
                "09d3a884-3d4d-4396-8fad-f312b31ed3cf",
                "6f2fcd96-5904-44e0-ad72-3cbd01d63afb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "03847334-5581-4315-9dd0-acb77375212a",
              "title": "triggerBefore()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/alarm.ts",
              "file": "/test/alarm.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Alarm triggerBefore() setter should return this",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.deepStrictEqual(a, a.triggerBefore(null));\nassert_1.default.deepStrictEqual(a, a.triggerBefore(60 * 10));",
                  "err": {},
                  "uuid": "e91320ea-f8ae-4f9d-ace6-818309aff1e6",
                  "parentUUID": "03847334-5581-4315-9dd0-acb77375212a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Alarm triggerBefore() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default()));\nconst now = new Date();\nassert_1.default.strictEqual(a.triggerBefore(), null);\na.trigger(300);\nassert_1.default.strictEqual(a.triggerBefore(), 300);\n// Date\na.trigger(now);\nconst dateResult = a.triggerBefore();\nassert_1.default.deepStrictEqual(dateResult, now);\n// Null\na.trigger(null);\nassert_1.default.strictEqual(a.triggerBefore(), null);",
                  "err": {},
                  "uuid": "722c8127-d011-40e4-8095-d849c7580f81",
                  "parentUUID": "03847334-5581-4315-9dd0-acb77375212a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when trigger not allowed",
                  "fullTitle": "ical-generator Alarm triggerBefore() should throw error when trigger not allowed",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.throws(function () {\n    a.triggerBefore(Infinity);\n}, /`trigger`/);\nassert_1.default.throws(function () {\n    // @ts-ignore\n    a.triggerBefore('hi');\n}, /`trigger`/);\nassert_1.default.throws(function () {\n    // @ts-ignore\n    a.triggerBefore(true);\n}, /`trigger`/);",
                  "err": {},
                  "uuid": "92f6a0db-3ddb-43da-a9ad-acc5e991b55a",
                  "parentUUID": "03847334-5581-4315-9dd0-acb77375212a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should work with null",
                  "fullTitle": "ical-generator Alarm triggerBefore() setter should work with null",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default()));\na.triggerBefore(60 * 10);\na.triggerBefore(null);\nassert_1.default.strictEqual(a.trigger(), null);",
                  "err": {},
                  "uuid": "a7748d74-fdce-41ff-8cf4-ab3685b866a0",
                  "parentUUID": "03847334-5581-4315-9dd0-acb77375212a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should work with date",
                  "fullTitle": "ical-generator Alarm triggerBefore() setter should work with date",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default()));\nconst now = new Date();\na.triggerBefore(now);\nassert_1.default.deepStrictEqual(a.trigger(), now);",
                  "err": {},
                  "uuid": "a20dc75b-bcf9-47a0-aae9-b1537434e295",
                  "parentUUID": "03847334-5581-4315-9dd0-acb77375212a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should work with moment instance",
                  "fullTitle": "ical-generator Alarm triggerBefore() setter should work with moment instance",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default()));\na.triggerBefore(moment_timezone_1.default());\nassert_1.default.ok(moment_timezone_1.default.isMoment(a.trigger()));",
                  "err": {},
                  "uuid": "ce2a53b1-aa34-4b1e-a9cb-dffe4251693a",
                  "parentUUID": "03847334-5581-4315-9dd0-acb77375212a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should work with number",
                  "fullTitle": "ical-generator Alarm triggerBefore() setter should work with number",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default()));\na.triggerBefore(2 * 60);\nassert_1.default.strictEqual(a.trigger(), 120);",
                  "err": {},
                  "uuid": "24fdb72b-48d1-487f-a0ff-b459acaf6bcd",
                  "parentUUID": "03847334-5581-4315-9dd0-acb77375212a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change something",
                  "fullTitle": "ical-generator Alarm triggerBefore() should change something",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const trigger = moment_timezone_1.default('2015-02-01T13:38:45.000Z');\nconst a = new alarm_1.default({ type: alarm_1.ICalAlarmType.display, triggerBefore: 60 * 10 }, new event_1.default({}, new calendar_1.default()));\nassert_1.default.ok(a.toString().indexOf('TRIGGER:-PT10M') > -1);\na.triggerBefore(trigger);\nassert_1.default.ok(a.toString().indexOf('TRIGGER;VALUE=DATE-TIME:20150201T133845Z') > -1);",
                  "err": {},
                  "uuid": "b7c3503f-c0c6-40bd-83fa-3c54c8f6d37b",
                  "parentUUID": "03847334-5581-4315-9dd0-acb77375212a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e91320ea-f8ae-4f9d-ace6-818309aff1e6",
                "722c8127-d011-40e4-8095-d849c7580f81",
                "92f6a0db-3ddb-43da-a9ad-acc5e991b55a",
                "a7748d74-fdce-41ff-8cf4-ab3685b866a0",
                "a20dc75b-bcf9-47a0-aae9-b1537434e295",
                "ce2a53b1-aa34-4b1e-a9cb-dffe4251693a",
                "24fdb72b-48d1-487f-a0ff-b459acaf6bcd",
                "b7c3503f-c0c6-40bd-83fa-3c54c8f6d37b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "0392c49d-a467-487f-a6d5-5cc1c6564f41",
              "title": "repeat()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/alarm.ts",
              "file": "/test/alarm.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Alarm repeat() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.deepStrictEqual(a, a.repeat(null));\nassert_1.default.deepStrictEqual(a, a.repeat(4));",
                  "err": {},
                  "uuid": "ffadfd62-9718-496f-a1e7-a3f9307a1ed8",
                  "parentUUID": "0392c49d-a467-487f-a6d5-5cc1c6564f41",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Alarm repeat() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.strictEqual(a.repeat(), null);\na.repeat(100);\nassert_1.default.strictEqual(a.repeat(), 100);\na.repeat(null);\nassert_1.default.strictEqual(a.repeat(), null);",
                  "err": {},
                  "uuid": "69c5873e-3ce0-4aa2-832e-4659f91fe43e",
                  "parentUUID": "0392c49d-a467-487f-a6d5-5cc1c6564f41",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error if repeat not allowed",
                  "fullTitle": "ical-generator Alarm repeat() should throw error if repeat not allowed",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.throws(function () {\n    a.repeat(Infinity);\n}, /`repeat`/);\nassert_1.default.throws(function () {\n    // @ts-ignore\n    a.repeat('hi');\n}, /`repeat`/);\nassert_1.default.throws(function () {\n    // @ts-ignore\n    a.repeat(true);\n}, /`repeat`/);",
                  "err": {},
                  "uuid": "dc32fb18-4298-4c6d-bc40-60f88f5400e0",
                  "parentUUID": "0392c49d-a467-487f-a6d5-5cc1c6564f41",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change something",
                  "fullTitle": "ical-generator Alarm repeat() should change something",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({\n    type: alarm_1.ICalAlarmType.display,\n    trigger: 300,\n    repeat: 42,\n    interval: 60\n}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.ok(a.toString().indexOf('REPEAT:42') > -1);",
                  "err": {},
                  "uuid": "85a05f90-0d0e-45ed-a544-4e766a3b25db",
                  "parentUUID": "0392c49d-a467-487f-a6d5-5cc1c6564f41",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ffadfd62-9718-496f-a1e7-a3f9307a1ed8",
                "69c5873e-3ce0-4aa2-832e-4659f91fe43e",
                "dc32fb18-4298-4c6d-bc40-60f88f5400e0",
                "85a05f90-0d0e-45ed-a544-4e766a3b25db"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "adfeb558-baf4-4879-aa1d-9bf74b95e2eb",
              "title": "interval()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/alarm.ts",
              "file": "/test/alarm.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Alarm interval() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.deepStrictEqual(a, a.interval(null));\nassert_1.default.deepStrictEqual(a, a.interval(60));",
                  "err": {},
                  "uuid": "6313ade5-4d90-4dda-a29f-87d607bc27e0",
                  "parentUUID": "adfeb558-baf4-4879-aa1d-9bf74b95e2eb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Alarm interval() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.strictEqual(a.interval(), null);\na.interval(30);\nassert_1.default.strictEqual(a.interval(), 30);\na.interval(null);\nassert_1.default.strictEqual(a.interval(), null);",
                  "err": {},
                  "uuid": "15e44aef-62fd-4d54-8459-5fd7be89501e",
                  "parentUUID": "adfeb558-baf4-4879-aa1d-9bf74b95e2eb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error if repeat not allowed",
                  "fullTitle": "ical-generator Alarm interval() should throw error if repeat not allowed",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.throws(function () {\n    a.interval(Infinity);\n}, /`interval`/);\nassert_1.default.throws(function () {\n    // @ts-ignore\n    a.interval('hi');\n}, /`interval`/);\nassert_1.default.throws(function () {\n    // @ts-ignore\n    a.interval(true);\n}, /`interval`/);",
                  "err": {},
                  "uuid": "12a73895-c29a-4c5d-b8c2-5e23d7340bcd",
                  "parentUUID": "adfeb558-baf4-4879-aa1d-9bf74b95e2eb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change something",
                  "fullTitle": "ical-generator Alarm interval() should change something",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({\n    type: alarm_1.ICalAlarmType.display,\n    trigger: 300,\n    repeat: 42,\n    interval: 90\n}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.ok(a.toString().indexOf('DURATION:PT1M30S') > -1);",
                  "err": {},
                  "uuid": "f2b330a4-705f-4be8-ad6e-336e9413037f",
                  "parentUUID": "adfeb558-baf4-4879-aa1d-9bf74b95e2eb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6313ade5-4d90-4dda-a29f-87d607bc27e0",
                "15e44aef-62fd-4d54-8459-5fd7be89501e",
                "12a73895-c29a-4c5d-b8c2-5e23d7340bcd",
                "f2b330a4-705f-4be8-ad6e-336e9413037f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "187ba379-2190-41de-bfdc-1d0d80f3d130",
              "title": "attach()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/alarm.ts",
              "file": "/test/alarm.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Alarm attach() setter should return this",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.deepStrictEqual(a, a.attach(null));\nassert_1.default.deepStrictEqual(a, a.attach('https://sebbo.net/beep.aud'));",
                  "err": {},
                  "uuid": "c3611da1-00e4-4d05-9e6b-354ea8501417",
                  "parentUUID": "187ba379-2190-41de-bfdc-1d0d80f3d130",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Alarm attach() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const t = { uri: 'https://example.com/alarm.aud', mime: 'audio/basic' };\nconst a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.strictEqual(a.attach(), null);\na.attach(t);\nassert_1.default.deepStrictEqual(a.attach(), t);\na.attach('https://www.example.com/beep.aud');\nassert_1.default.deepStrictEqual(a.attach(), {\n    uri: 'https://www.example.com/beep.aud',\n    mime: null\n});\na.attach({\n    uri: 'https://www.example.com/beep.aud'\n});\nassert_1.default.deepStrictEqual(a.attach(), {\n    uri: 'https://www.example.com/beep.aud',\n    mime: null\n});\na.attach(null);\nassert_1.default.strictEqual(a.attach(), null);",
                  "err": {},
                  "uuid": "da3d1767-41a2-4b60-9f9c-ee2f25a2cdfb",
                  "parentUUID": "187ba379-2190-41de-bfdc-1d0d80f3d130",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error withour uri",
                  "fullTitle": "ical-generator Alarm attach() should throw error withour uri",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.throws(function () {\n    // @ts-ignore\n    a.attach({ mime: 'audio/basic' });\n}, /`attach.uri`/);",
                  "err": {},
                  "uuid": "d9d2b8d9-2833-4b1b-bf93-e357457c3e39",
                  "parentUUID": "187ba379-2190-41de-bfdc-1d0d80f3d130",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when unknown format",
                  "fullTitle": "ical-generator Alarm attach() should throw error when unknown format",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.throws(function () {\n    // @ts-ignore\n    a.attach(Infinity);\n}, /`attachment`/);",
                  "err": {},
                  "uuid": "c42e2597-850e-4db7-ad21-94ba86819ab7",
                  "parentUUID": "187ba379-2190-41de-bfdc-1d0d80f3d130",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change something",
                  "fullTitle": "ical-generator Alarm attach() should change something",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({\n    type: alarm_1.ICalAlarmType.audio,\n    trigger: 300\n}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.ok(a.toString().indexOf('\\r\\nATTACH;VALUE=URI:Basso') > -1);\na.attach('https://example.com/beep.aud');\nassert_1.default.ok(a.toString().indexOf('\\r\\nATTACH;VALUE=URI:https://example.com/beep.aud') > -1);\na.attach({\n    uri: 'https://example.com/beep.aud',\n    mime: 'audio/basic'\n});\nassert_1.default.ok(a.toString().indexOf('\\r\\nATTACH;FMTTYPE=audio/basic:https://example.com/beep.aud') > -1);",
                  "err": {},
                  "uuid": "acf8095a-1f25-4fc4-8823-56f37ff6e682",
                  "parentUUID": "187ba379-2190-41de-bfdc-1d0d80f3d130",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c3611da1-00e4-4d05-9e6b-354ea8501417",
                "da3d1767-41a2-4b60-9f9c-ee2f25a2cdfb",
                "d9d2b8d9-2833-4b1b-bf93-e357457c3e39",
                "c42e2597-850e-4db7-ad21-94ba86819ab7",
                "acf8095a-1f25-4fc4-8823-56f37ff6e682"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "77397ed8-9c51-4bc6-a400-4ac399428c11",
              "title": "description()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/alarm.ts",
              "file": "/test/alarm.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Alarm description() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.deepStrictEqual(a, a.description(null));\nassert_1.default.deepStrictEqual(a, a.description('Hey Ho!'));",
                  "err": {},
                  "uuid": "c43151fb-1669-45f7-9392-bf11720c0173",
                  "parentUUID": "77397ed8-9c51-4bc6-a400-4ac399428c11",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Alarm description() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.deepStrictEqual(a.description(), null);\na.description('blablabla');\nassert_1.default.deepStrictEqual(a.description(), 'blablabla');\na.description(null);\nassert_1.default.deepStrictEqual(a.description(), null);",
                  "err": {},
                  "uuid": "9a87a136-6d8c-4f0e-b403-deb8a9a592d1",
                  "parentUUID": "77397ed8-9c51-4bc6-a400-4ac399428c11",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change something",
                  "fullTitle": "ical-generator Alarm description() should change something",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({\n    type: alarm_1.ICalAlarmType.display,\n    trigger: 300,\n    description: 'Huibuh!'\n}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.ok(a.toString().indexOf('\\r\\nDESCRIPTION:Huibuh') > -1);",
                  "err": {},
                  "uuid": "a5b30df0-5df1-403e-8bd9-44f66288d6f4",
                  "parentUUID": "77397ed8-9c51-4bc6-a400-4ac399428c11",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should fallback to event summary",
                  "fullTitle": "ical-generator Alarm description() should fallback to event summary",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({\n    type: alarm_1.ICalAlarmType.display,\n    trigger: 300\n}, new event_1.default({\n    summary: 'Example Event'\n}, new calendar_1.default()));\nassert_1.default.ok(a.toString().indexOf('\\r\\nDESCRIPTION:Example Event') > -1);",
                  "err": {},
                  "uuid": "15b8351d-30f5-436b-ae7c-2e010af8804d",
                  "parentUUID": "77397ed8-9c51-4bc6-a400-4ac399428c11",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c43151fb-1669-45f7-9392-bf11720c0173",
                "9a87a136-6d8c-4f0e-b403-deb8a9a592d1",
                "a5b30df0-5df1-403e-8bd9-44f66288d6f4",
                "15b8351d-30f5-436b-ae7c-2e010af8804d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "6ab3d9d7-27e8-46a0-a275-0441f43ac17f",
              "title": "x()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/alarm.ts",
              "file": "/test/alarm.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is there",
                  "fullTitle": "ical-generator Alarm x() is there",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.deepStrictEqual(a, a.x('X-FOO', 'bar'));",
                  "err": {},
                  "uuid": "09cee76f-1014-498d-896f-562ae8feb625",
                  "parentUUID": "6ab3d9d7-27e8-46a0-a275-0441f43ac17f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "09cee76f-1014-498d-896f-562ae8feb625"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "6ddc1d10-02ee-4c98-a124-5a090c6ddbb5",
              "title": "toJSON()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/alarm.ts",
              "file": "/test/alarm.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "ical-generator Alarm toJSON() should work",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default()));\na.type(alarm_1.ICalAlarmType.display);\na.trigger(120);\nassert_1.default.deepStrictEqual(a.toJSON(), {\n    attach: null,\n    description: null,\n    interval: null,\n    repeat: null,\n    trigger: 120,\n    type: 'display',\n    x: []\n});",
                  "err": {},
                  "uuid": "4057d667-9697-4c18-8cb5-ee5f8e1224a1",
                  "parentUUID": "6ddc1d10-02ee-4c98-a124-5a090c6ddbb5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should be compatible with constructor (type check)",
                  "fullTitle": "ical-generator Alarm toJSON() should be compatible with constructor (type check)",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({}, new event_1.default({}, new calendar_1.default()));\nnew alarm_1.default(a.toJSON(), new event_1.default({}, new calendar_1.default()));",
                  "err": {},
                  "uuid": "b245ab9a-1712-49db-a703-5368edd76236",
                  "parentUUID": "6ddc1d10-02ee-4c98-a124-5a090c6ddbb5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4057d667-9697-4c18-8cb5-ee5f8e1224a1",
                "b245ab9a-1712-49db-a703-5368edd76236"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "557d8bdd-81b9-43cd-a4e0-8db64f3baa6b",
              "title": "generate()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/alarm.ts",
              "file": "/test/alarm.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "shoult throw an error without type",
                  "fullTitle": "ical-generator Alarm generate() shoult throw an error without type",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({ trigger: 300 }, new event_1.default({}, new calendar_1.default()));\nassert_1.default.throws(function () {\n    a.toString();\n}, /`type`/);",
                  "err": {},
                  "uuid": "93003e5b-344a-4a24-a67d-f997c20a00e4",
                  "parentUUID": "557d8bdd-81b9-43cd-a4e0-8db64f3baa6b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "shoult throw an error without trigger",
                  "fullTitle": "ical-generator Alarm generate() shoult throw an error without trigger",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({ type: alarm_1.ICalAlarmType.display }, new event_1.default({}, new calendar_1.default()));\nassert_1.default.throws(function () {\n    a.toString();\n}, /`trigger`/);",
                  "err": {},
                  "uuid": "197d8837-f42f-4097-a0b4-06cda09397bd",
                  "parentUUID": "557d8bdd-81b9-43cd-a4e0-8db64f3baa6b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "shoult throw an error if repeat is set but interval isn't",
                  "fullTitle": "ical-generator Alarm generate() shoult throw an error if repeat is set but interval isn't",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({ type: alarm_1.ICalAlarmType.display, trigger: 300, repeat: 4 }, new event_1.default({}, new calendar_1.default()));\nassert_1.default.throws(function () {\n    a.toString();\n}, /for `interval`/);",
                  "err": {},
                  "uuid": "e1cbfd17-cd36-48ef-91fc-e67ee520c6ad",
                  "parentUUID": "557d8bdd-81b9-43cd-a4e0-8db64f3baa6b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "shoult throw an error if interval is set but repeat isn't",
                  "fullTitle": "ical-generator Alarm generate() shoult throw an error if interval is set but repeat isn't",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new alarm_1.default({\n    type: alarm_1.ICalAlarmType.display,\n    trigger: 300,\n    interval: 60\n}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.throws(function () {\n    a.toString();\n}, /for `repeat`/);",
                  "err": {},
                  "uuid": "efc0a4bc-826a-4283-808e-232155dbf221",
                  "parentUUID": "557d8bdd-81b9-43cd-a4e0-8db64f3baa6b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "93003e5b-344a-4a24-a67d-f997c20a00e4",
                "197d8837-f42f-4097-a0b4-06cda09397bd",
                "e1cbfd17-cd36-48ef-91fc-e67ee520c6ad",
                "efc0a4bc-826a-4283-808e-232155dbf221"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c0db6e63-877a-45a7-916b-105a7560644e",
          "title": "ical-generator Attendee",
          "fullFile": "/home/runner/work/ical-generator/ical-generator/test/attendee.ts",
          "file": "/test/attendee.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "8cabcd08-3035-4ee9-98a9-7b52833d453e",
              "title": "constructor()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/attendee.ts",
              "file": "/test/attendee.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "shouldn't work without event reference",
                  "fullTitle": "ical-generator Attendee constructor() shouldn't work without event reference",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.throws(function () {\n    // @ts-ignore\n    new attendee_1.default({ email: 'foo@bar.com' });\n}, /`event`/);",
                  "err": {},
                  "uuid": "c69521cd-5ba1-4061-9342-2e5b82deb0bf",
                  "parentUUID": "8cabcd08-3035-4ee9-98a9-7b52833d453e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c69521cd-5ba1-4061-9342-2e5b82deb0bf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "aab5b70d-b62a-4db0-a772-b772b1c86f8c",
              "title": "name()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/attendee.ts",
              "file": "/test/attendee.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Attendee name() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.strictEqual(a.name(), null);\na.name('Sebastian');\nassert_1.default.strictEqual(a.name(), 'Sebastian');",
                  "err": {},
                  "uuid": "310816b8-fb09-4209-869b-eac1dcb2a1d0",
                  "parentUUID": "aab5b70d-b62a-4db0-a772-b772b1c86f8c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Attendee name() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.deepStrictEqual(a, a.name(null));\nassert_1.default.deepStrictEqual(a, a.name('Sebastian'));",
                  "err": {},
                  "uuid": "ed58dc79-141a-4068-9f62-4fc7b11a4546",
                  "parentUUID": "aab5b70d-b62a-4db0-a772-b772b1c86f8c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should change something",
                  "fullTitle": "ical-generator Attendee name() setter should change something",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({}, new event_1.default({}, new calendar_1.default()));\na.name('Sebastian');\nassert_1.default.strictEqual(a.name(), 'Sebastian');\na.name(null);\nassert_1.default.strictEqual(a.name(), null);",
                  "err": {},
                  "uuid": "2564c3fc-c119-46fe-8ff0-31471b1351ff",
                  "parentUUID": "aab5b70d-b62a-4db0-a772-b772b1c86f8c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "310816b8-fb09-4209-869b-eac1dcb2a1d0",
                "ed58dc79-141a-4068-9f62-4fc7b11a4546",
                "2564c3fc-c119-46fe-8ff0-31471b1351ff"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "529566b4-c3dd-4381-b7d9-3e1eed047cc2",
              "title": "email()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/attendee.ts",
              "file": "/test/attendee.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Attendee email() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({}, new event_1.default({}, new calendar_1.default())).email('foo@example.com');\nassert_1.default.strictEqual(a.email(), 'foo@example.com');",
                  "err": {},
                  "uuid": "6d50303b-20e1-4e4f-9dce-22fee0a79383",
                  "parentUUID": "529566b4-c3dd-4381-b7d9-3e1eed047cc2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Attendee email() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.deepStrictEqual(a, a.email('foo@example.com'));",
                  "err": {},
                  "uuid": "976ce4e8-8060-4dde-bb1e-9dde15cd9bb6",
                  "parentUUID": "529566b4-c3dd-4381-b7d9-3e1eed047cc2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change something",
                  "fullTitle": "ical-generator Attendee email() should change something",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({ email: 'mail@example.com' }, new event_1.default({}, new calendar_1.default()));\nassert_1.default.ok(a.toString().indexOf('mail@example.com') > -1);",
                  "err": {},
                  "uuid": "89bd2871-c9d7-445e-af6f-1692eacc9110",
                  "parentUUID": "529566b4-c3dd-4381-b7d9-3e1eed047cc2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6d50303b-20e1-4e4f-9dce-22fee0a79383",
                "976ce4e8-8060-4dde-bb1e-9dde15cd9bb6",
                "89bd2871-c9d7-445e-af6f-1692eacc9110"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "da34191b-78e7-4ac9-b01f-dd2902571f1f",
              "title": "mailto()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/attendee.ts",
              "file": "/test/attendee.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Attendee mailto() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.strictEqual(a.mailto(), null);\na.mailto('foo@example.com');\nassert_1.default.strictEqual(a.mailto(), 'foo@example.com');",
                  "err": {},
                  "uuid": "c1be290d-1e3c-487e-b43c-4d03470e629a",
                  "parentUUID": "da34191b-78e7-4ac9-b01f-dd2902571f1f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Attendee mailto() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.deepStrictEqual(a, a.mailto(null));\nassert_1.default.deepStrictEqual(a, a.mailto('foo@example.com'));",
                  "err": {},
                  "uuid": "d2e5271e-122d-479e-a632-2c27df50519f",
                  "parentUUID": "da34191b-78e7-4ac9-b01f-dd2902571f1f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change mailto and keep email if present",
                  "fullTitle": "ical-generator Attendee mailto() should change mailto and keep email if present",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({ email: 'mail@example.com' }, new event_1.default({}, new calendar_1.default()));\na.mailto('mail2@example2.com');\nassert_1.default.ok(a.toString().indexOf('EMAIL=mail@example.com') > -1 &&\n    a.toString().indexOf('MAILTO:mail2@example2.com') > -1);",
                  "err": {},
                  "uuid": "802cdb05-d2f0-42e9-b434-33d5f2bfc570",
                  "parentUUID": "da34191b-78e7-4ac9-b01f-dd2902571f1f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c1be290d-1e3c-487e-b43c-4d03470e629a",
                "d2e5271e-122d-479e-a632-2c27df50519f",
                "802cdb05-d2f0-42e9-b434-33d5f2bfc570"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "8ef3bd40-af94-4f19-8afd-b682a4a2a477",
              "title": "role()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/attendee.ts",
              "file": "/test/attendee.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Attendee role() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.deepStrictEqual(a, a.role(attendee_1.ICalAttendeeRole.REQ));",
                  "err": {},
                  "uuid": "11680e6e-d4ce-49f5-951e-1082cd7a587b",
                  "parentUUID": "8ef3bd40-af94-4f19-8afd-b682a4a2a477",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Attendee role() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({}, new event_1.default({}, new calendar_1.default())).role(attendee_1.ICalAttendeeRole.REQ);\nassert_1.default.strictEqual(a.role(), 'REQ-PARTICIPANT');",
                  "err": {},
                  "uuid": "58c98a08-7f8f-4611-afeb-254c75de4c79",
                  "parentUUID": "8ef3bd40-af94-4f19-8afd-b682a4a2a477",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when method empty",
                  "fullTitle": "ical-generator Attendee role() should throw error when method empty",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.throws(function () {\n    // @ts-ignore\n    a.role('');\n}, /Input must be one of the following: CHAIR, REQ-PARTICIPANT, OPT-PARTICIPANT, NON-PARTICIPANT/);",
                  "err": {},
                  "uuid": "233300de-a606-497e-9c89-4e960df26504",
                  "parentUUID": "8ef3bd40-af94-4f19-8afd-b682a4a2a477",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when method not allowed",
                  "fullTitle": "ical-generator Attendee role() should throw error when method not allowed",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.throws(function () {\n    // @ts-ignore\n    a.role('COOKING');\n}, /must be one of the following/);",
                  "err": {},
                  "uuid": "6ff7be15-7f4e-4a32-9896-0278b245e991",
                  "parentUUID": "8ef3bd40-af94-4f19-8afd-b682a4a2a477",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change something",
                  "fullTitle": "ical-generator Attendee role() should change something",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({\n    email: 'mail@example.com',\n    role: attendee_1.ICalAttendeeRole.NON\n}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.ok(a.toString().indexOf('NON-PARTICIPANT') > -1);",
                  "err": {},
                  "uuid": "ef0273e2-29ad-4d89-ab93-33d4b6e47d01",
                  "parentUUID": "8ef3bd40-af94-4f19-8afd-b682a4a2a477",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "11680e6e-d4ce-49f5-951e-1082cd7a587b",
                "58c98a08-7f8f-4611-afeb-254c75de4c79",
                "233300de-a606-497e-9c89-4e960df26504",
                "6ff7be15-7f4e-4a32-9896-0278b245e991",
                "ef0273e2-29ad-4d89-ab93-33d4b6e47d01"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "44d34fb9-e7ed-433e-a639-f0597e7556f4",
              "title": "rsvp()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/attendee.ts",
              "file": "/test/attendee.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Attendee rsvp() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.deepStrictEqual(a, a.rsvp(null));\nassert_1.default.deepStrictEqual(a, a.rsvp(true));",
                  "err": {},
                  "uuid": "5ebae478-b1a0-4566-8af3-c408336e5489",
                  "parentUUID": "44d34fb9-e7ed-433e-a639-f0597e7556f4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should also work with booleans",
                  "fullTitle": "ical-generator Attendee rsvp() setter should also work with booleans",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({}, new event_1.default({}, new calendar_1.default()));\na.rsvp(true);\nassert_1.default.strictEqual(a.rsvp(), true);\na.rsvp(false);\nassert_1.default.strictEqual(a.rsvp(), false);",
                  "err": {},
                  "uuid": "ea648133-a06d-4fbd-86a4-c9555a9640b3",
                  "parentUUID": "44d34fb9-e7ed-433e-a639-f0597e7556f4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Attendee rsvp() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.strictEqual(a.rsvp(), null);\na.rsvp(false);\nassert_1.default.strictEqual(a.rsvp(), false);\na.rsvp(null);\nassert_1.default.strictEqual(a.rsvp(), null);",
                  "err": {},
                  "uuid": "8c82240f-71bc-42bf-b06a-3fd782a35fe0",
                  "parentUUID": "44d34fb9-e7ed-433e-a639-f0597e7556f4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change something",
                  "fullTitle": "ical-generator Attendee rsvp() should change something",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({ email: 'mail@example.com', rsvp: true }, new event_1.default({}, new calendar_1.default()));\nassert_1.default.ok(a.toString().indexOf(';RSVP=TRUE') > -1);",
                  "err": {},
                  "uuid": "c0b2b56a-c54a-44df-bd0f-3e9952f4fbfa",
                  "parentUUID": "44d34fb9-e7ed-433e-a639-f0597e7556f4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5ebae478-b1a0-4566-8af3-c408336e5489",
                "ea648133-a06d-4fbd-86a4-c9555a9640b3",
                "8c82240f-71bc-42bf-b06a-3fd782a35fe0",
                "c0b2b56a-c54a-44df-bd0f-3e9952f4fbfa"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "7640f1cb-1cae-4967-92d4-6672f873aacc",
              "title": "status()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/attendee.ts",
              "file": "/test/attendee.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Attendee status() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.deepStrictEqual(a, a.status(null));\nassert_1.default.deepStrictEqual(a, a.status(attendee_1.ICalAttendeeStatus.ACCEPTED));",
                  "err": {},
                  "uuid": "5bba6cd4-fc99-40d0-981b-f32606ce4c4e",
                  "parentUUID": "7640f1cb-1cae-4967-92d4-6672f873aacc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Attendee status() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.strictEqual(a.status(), null);\na.status(attendee_1.ICalAttendeeStatus.ACCEPTED);\nassert_1.default.strictEqual(a.status(), 'ACCEPTED');\na.status(null);\nassert_1.default.strictEqual(a.status(), null);",
                  "err": {},
                  "uuid": "d78af5e3-4d19-410f-9145-4babe69ecc2d",
                  "parentUUID": "7640f1cb-1cae-4967-92d4-6672f873aacc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when method not allowed",
                  "fullTitle": "ical-generator Attendee status() should throw error when method not allowed",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.throws(function () {\n    // @ts-ignore\n    a.status('DRINKING');\n}, /must be one of the following/);",
                  "err": {},
                  "uuid": "adee8ced-c6b2-4334-8397-1d616e0e65b9",
                  "parentUUID": "7640f1cb-1cae-4967-92d4-6672f873aacc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change something",
                  "fullTitle": "ical-generator Attendee status() should change something",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({ email: 'mail@example.com', status: attendee_1.ICalAttendeeStatus.DECLINED }, new event_1.default({}, new calendar_1.default()));\nassert_1.default.ok(a.toString().indexOf('DECLINED') > -1);",
                  "err": {},
                  "uuid": "df9fa291-b778-4959-a09f-7659e764e940",
                  "parentUUID": "7640f1cb-1cae-4967-92d4-6672f873aacc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change something too",
                  "fullTitle": "ical-generator Attendee status() should change something too",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({ email: 'mail@example.com', status: attendee_1.ICalAttendeeStatus.NEEDSACTION }, new event_1.default({}, new calendar_1.default()));\nassert_1.default.ok(a.toString().indexOf('NEEDS-ACTION') > -1);",
                  "err": {},
                  "uuid": "6015b2cc-f6a5-41d0-ba5e-edde4fb073de",
                  "parentUUID": "7640f1cb-1cae-4967-92d4-6672f873aacc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5bba6cd4-fc99-40d0-981b-f32606ce4c4e",
                "d78af5e3-4d19-410f-9145-4babe69ecc2d",
                "adee8ced-c6b2-4334-8397-1d616e0e65b9",
                "df9fa291-b778-4959-a09f-7659e764e940",
                "6015b2cc-f6a5-41d0-ba5e-edde4fb073de"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d14fd36e-a490-404f-aad5-1d6eac9325ec",
              "title": "type()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/attendee.ts",
              "file": "/test/attendee.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Attendee type() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.deepStrictEqual(a.type(null), a);\nassert_1.default.deepStrictEqual(a.type(attendee_1.ICalAttendeeType.INDIVIDUAL), a);",
                  "err": {},
                  "uuid": "9d466a23-ed3a-4f46-b547-38b7895bce41",
                  "parentUUID": "d14fd36e-a490-404f-aad5-1d6eac9325ec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Attendee type() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.strictEqual(a.type(), null);\na.type(attendee_1.ICalAttendeeType.ROOM);\nassert_1.default.strictEqual(a.type(), 'ROOM');\na.type(null);\nassert_1.default.strictEqual(a.type(), null);",
                  "err": {},
                  "uuid": "edca3ea3-5921-4764-b3e9-88bcdfecd03d",
                  "parentUUID": "d14fd36e-a490-404f-aad5-1d6eac9325ec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when method not allowed",
                  "fullTitle": "ical-generator Attendee type() should throw error when method not allowed",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.throws(function () {\n    // @ts-ignore\n    a.type('DRINKING');\n}, /must be one of the following/);",
                  "err": {},
                  "uuid": "1b64bfa7-d8f8-45ba-9335-e7b96c73c61b",
                  "parentUUID": "d14fd36e-a490-404f-aad5-1d6eac9325ec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change something",
                  "fullTitle": "ical-generator Attendee type() should change something",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({\n    email: 'mailing-list@example.com',\n    type: attendee_1.ICalAttendeeType.GROUP\n}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.ok(a.toString().indexOf('GROUP') > -1);",
                  "err": {},
                  "uuid": "5dada1c3-c451-48f2-b021-c08302dba9cf",
                  "parentUUID": "d14fd36e-a490-404f-aad5-1d6eac9325ec",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9d466a23-ed3a-4f46-b547-38b7895bce41",
                "edca3ea3-5921-4764-b3e9-88bcdfecd03d",
                "1b64bfa7-d8f8-45ba-9335-e7b96c73c61b",
                "5dada1c3-c451-48f2-b021-c08302dba9cf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "86e4e33d-611e-4d93-b282-4bb8545395c8",
              "title": "delegatedTo()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/attendee.ts",
              "file": "/test/attendee.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Attendee delegatedTo() setter should return this",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.deepStrictEqual(a, a.delegatedTo(null));\nassert_1.default.deepStrictEqual(a, a.delegatedTo('foo@example.com'));",
                  "err": {},
                  "uuid": "a8ef9d80-791e-4d40-b817-ec8e69399793",
                  "parentUUID": "86e4e33d-611e-4d93-b282-4bb8545395c8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Attendee delegatedTo() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.strictEqual(a.delegatedTo(), null);\na.delegatedTo('foo@example.com');\nconst result = a.delegatedTo();\nassert_1.default.ok(result);\nassert_1.default.strictEqual(result.email(), 'foo@example.com');\na.delegatedTo(null);\nassert_1.default.strictEqual(a.delegatedTo(), null);",
                  "err": {},
                  "uuid": "459b3c42-f4c9-43df-a721-8f15ebd0122c",
                  "parentUUID": "86e4e33d-611e-4d93-b282-4bb8545395c8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change something",
                  "fullTitle": "ical-generator Attendee delegatedTo() should change something",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({\n    email: 'mail@example.com',\n    delegatedTo: 'foo@example.com'\n}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.ok(a.toString().indexOf('foo@example') > -1);",
                  "err": {},
                  "uuid": "38805448-ccfa-48a6-9038-94bc07ec2dc0",
                  "parentUUID": "86e4e33d-611e-4d93-b282-4bb8545395c8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a8ef9d80-791e-4d40-b817-ec8e69399793",
                "459b3c42-f4c9-43df-a721-8f15ebd0122c",
                "38805448-ccfa-48a6-9038-94bc07ec2dc0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "47a38b52-0353-485d-a46d-bfe36d4cb0a6",
              "title": "delegatedFrom()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/attendee.ts",
              "file": "/test/attendee.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Attendee delegatedFrom() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.deepStrictEqual(a, a.delegatedFrom(null));\nassert_1.default.deepStrictEqual(a, a.delegatedFrom('foo@example.com'));",
                  "err": {},
                  "uuid": "9763f895-6773-48ce-b043-ab2d163c2484",
                  "parentUUID": "47a38b52-0353-485d-a46d-bfe36d4cb0a6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Attendee delegatedFrom() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.strictEqual(a.delegatedFrom(), null);\na.delegatedFrom('foo@example.com');\nconst result = a.delegatedFrom();\nassert_1.default.ok(result);\nassert_1.default.strictEqual(result.email(), 'foo@example.com');\na.delegatedFrom(null);\nassert_1.default.strictEqual(a.delegatedFrom(), null);",
                  "err": {},
                  "uuid": "e167dbcb-1c70-48db-bfaa-0aad5626a9b8",
                  "parentUUID": "47a38b52-0353-485d-a46d-bfe36d4cb0a6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change something",
                  "fullTitle": "ical-generator Attendee delegatedFrom() should change something",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({ email: 'mail@example.com', delegatedFrom: 'foo@example.com' }, new event_1.default({}, new calendar_1.default()));\nassert_1.default.ok(a.toString().indexOf('foo@example.com') > -1);",
                  "err": {},
                  "uuid": "b14d3ea5-6fcd-444a-b5e8-115b5a1230b7",
                  "parentUUID": "47a38b52-0353-485d-a46d-bfe36d4cb0a6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9763f895-6773-48ce-b043-ab2d163c2484",
                "e167dbcb-1c70-48db-bfaa-0aad5626a9b8",
                "b14d3ea5-6fcd-444a-b5e8-115b5a1230b7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "8f5b74df-1866-4007-af36-cded62c1022e",
              "title": "delegatesTo()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/attendee.ts",
              "file": "/test/attendee.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a new ICalAttendee instance by default",
                  "fullTitle": "ical-generator Attendee delegatesTo() should return a new ICalAttendee instance by default",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.ok(a.delegatesTo({}) instanceof attendee_1.default);",
                  "err": {},
                  "uuid": "2b563d7c-0809-4483-adec-ed49d98307c9",
                  "parentUUID": "8f5b74df-1866-4007-af36-cded62c1022e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should reuse the same ICalAttendee instance if passed",
                  "fullTitle": "ical-generator Attendee delegatesTo() should reuse the same ICalAttendee instance if passed",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nconst attendee = new attendee_1.default({ name: 'Muh' }, event);\nassert_1.default.deepStrictEqual(new attendee_1.default({}, event).delegatesTo(attendee), attendee);",
                  "err": {},
                  "uuid": "f10f8d3c-df66-4142-b417-1d28069e8a7f",
                  "parentUUID": "8f5b74df-1866-4007-af36-cded62c1022e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should pass data to instance",
                  "fullTitle": "ical-generator Attendee delegatesTo() should pass data to instance",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const attendee = new attendee_1.default({ name: 'Zac' }, new event_1.default({}, new calendar_1.default()))\n    .delegatesTo({ name: 'Cody' });\nassert_1.default.strictEqual(attendee.name(), 'Cody');",
                  "err": {},
                  "uuid": "2156c3cc-096f-491b-9cba-a2b1f160ce6f",
                  "parentUUID": "8f5b74df-1866-4007-af36-cded62c1022e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2b563d7c-0809-4483-adec-ed49d98307c9",
                "f10f8d3c-df66-4142-b417-1d28069e8a7f",
                "2156c3cc-096f-491b-9cba-a2b1f160ce6f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a65a0fb2-fa70-4c79-9f75-f329005c0dd6",
              "title": "delegatesFrom()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/attendee.ts",
              "file": "/test/attendee.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a new ICalAttendee instance by default",
                  "fullTitle": "ical-generator Attendee delegatesFrom() should return a new ICalAttendee instance by default",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({}, new event_1.default({}, new calendar_1.default()));\nassert_1.default.ok(a.delegatesFrom({}) instanceof attendee_1.default);",
                  "err": {},
                  "uuid": "d0194572-53e9-45da-b18f-9890e720389b",
                  "parentUUID": "a65a0fb2-fa70-4c79-9f75-f329005c0dd6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should reuse the same ICalAttendee instance if passed",
                  "fullTitle": "ical-generator Attendee delegatesFrom() should reuse the same ICalAttendee instance if passed",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nconst attendee = new attendee_1.default({ name: 'Muh' }, event);\nassert_1.default.deepStrictEqual(new attendee_1.default({}, event).delegatesFrom(attendee), attendee);",
                  "err": {},
                  "uuid": "1a169d70-4de1-496f-98cb-77e96bdec41a",
                  "parentUUID": "a65a0fb2-fa70-4c79-9f75-f329005c0dd6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should pass data to instance",
                  "fullTitle": "ical-generator Attendee delegatesFrom() should pass data to instance",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({ name: 'Zac' }, new event_1.default({}, new calendar_1.default())).delegatesFrom({ name: 'Cody' });\nassert_1.default.strictEqual(a.name(), 'Cody');",
                  "err": {},
                  "uuid": "07eeebb4-843f-461e-ac15-cf9a53926546",
                  "parentUUID": "a65a0fb2-fa70-4c79-9f75-f329005c0dd6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d0194572-53e9-45da-b18f-9890e720389b",
                "1a169d70-4de1-496f-98cb-77e96bdec41a",
                "07eeebb4-843f-461e-ac15-cf9a53926546"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "fca50a72-5d81-463f-9af9-f50cab702c7b",
              "title": "x()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/attendee.ts",
              "file": "/test/attendee.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "works as expected",
                  "fullTitle": "ical-generator Attendee x() works as expected",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({ email: 'foo@example.org' }, new event_1.default({}, new calendar_1.default()));\nassert_1.default.deepStrictEqual(a, a.x('X-NUM-GUESTS', '5'));\nassert_1.default.ok(a.toString().includes('ATTENDEE;ROLE=REQ-PARTICIPANT;X-NUM-GUESTS=5:MAILTO:foo@example.org'));",
                  "err": {},
                  "uuid": "476d5f3b-8343-4090-80e8-3414566a4d42",
                  "parentUUID": "fca50a72-5d81-463f-9af9-f50cab702c7b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "476d5f3b-8343-4090-80e8-3414566a4d42"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d0ba10e6-3bd8-4e20-be84-6c19c332b01d",
              "title": "toJSON()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/attendee.ts",
              "file": "/test/attendee.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "ical-generator Attendee toJSON() should work",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({}, new event_1.default({}, new calendar_1.default()));\na.name('Max Mustermann');\na.delegatesTo('Moritz <moritz@example.com>');\nassert_1.default.deepStrictEqual(a.toJSON(), {\n    delegatedFrom: null,\n    delegatedTo: 'moritz@example.com',\n    email: null,\n    mailto: null,\n    name: 'Max Mustermann',\n    role: 'REQ-PARTICIPANT',\n    rsvp: null,\n    status: 'DELEGATED',\n    type: null,\n    x: []\n});",
                  "err": {},
                  "uuid": "477aab0a-1225-43d9-8942-4a832b022696",
                  "parentUUID": "d0ba10e6-3bd8-4e20-be84-6c19c332b01d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should be compatible with constructor (type check)",
                  "fullTitle": "ical-generator Attendee toJSON() should be compatible with constructor (type check)",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({}, new event_1.default({}, new calendar_1.default()));\nnew attendee_1.default(a.toJSON(), new event_1.default({}, new calendar_1.default()));",
                  "err": {},
                  "uuid": "b1607a8c-f992-4568-b585-8ad21f40587b",
                  "parentUUID": "d0ba10e6-3bd8-4e20-be84-6c19c332b01d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "477aab0a-1225-43d9-8942-4a832b022696",
                "b1607a8c-f992-4568-b585-8ad21f40587b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "35fb8c4f-ddf1-4ab8-8fbe-0ae09fb8cc7b",
              "title": "generate()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/attendee.ts",
              "file": "/test/attendee.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should throw an error without email",
                  "fullTitle": "ical-generator Attendee generate() should throw an error without email",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new attendee_1.default({ name: 'Testuser' }, new event_1.default({}, new calendar_1.default()));\nassert_1.default.throws(function () {\n    a.toString();\n}, /`email`/);",
                  "err": {},
                  "uuid": "63cef3d5-e747-474c-bfb6-e6a7d7685be0",
                  "parentUUID": "35fb8c4f-ddf1-4ab8-8fbe-0ae09fb8cc7b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "63cef3d5-e747-474c-bfb6-e6a7d7685be0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "264ce553-c003-42c3-965b-6fb0cee28b43",
          "title": "ical-generator Calendar",
          "fullFile": "/home/runner/work/ical-generator/ical-generator/test/calendar.ts",
          "file": "/test/calendar.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "989a08b7-8f31-4219-98c4-274e1950be4f",
              "title": "constructor()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/calendar.ts",
              "file": "/test/calendar.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "shoud load json export",
                  "fullTitle": "ical-generator Calendar constructor() shoud load json export",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default({ name: 'hello-world' });\nassert_1.default.strictEqual(cal.name(), 'hello-world');",
                  "err": {},
                  "uuid": "907a00f4-d58e-40e4-a172-6d0e616f0943",
                  "parentUUID": "989a08b7-8f31-4219-98c4-274e1950be4f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "907a00f4-d58e-40e4-a172-6d0e616f0943"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "db3b577a-404b-4631-948f-7d8fbb045111",
              "title": "prodId()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/calendar.ts",
              "file": "/test/calendar.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Calendar prodId() getter should return value",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\ncal.prodId('//loremipsum.de//ical-tests//EN');\nassert_1.default.strictEqual(cal.prodId(), '//loremipsum.de//ical-tests//EN');",
                  "err": {},
                  "uuid": "fbd84df2-f340-4f3e-a849-d9a2789dd94a",
                  "parentUUID": "db3b577a-404b-4631-948f-7d8fbb045111",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Calendar prodId() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\nassert_1.default.deepStrictEqual(cal, cal.prodId('//loremipsum.de//ical-tests//EN'));",
                  "err": {},
                  "uuid": "cfa49a45-5149-4dbe-baa5-a2a8c368dd7a",
                  "parentUUID": "db3b577a-404b-4631-948f-7d8fbb045111",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when string misformed",
                  "fullTitle": "ical-generator Calendar prodId() should throw error when string misformed",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\nassert_1.default.throws(function () {\n    cal.prodId('enemenemuh!');\n}, /`prodId`/);",
                  "err": {},
                  "uuid": "449e4889-b1b7-4dfa-aa97-4fbec074b506",
                  "parentUUID": "db3b577a-404b-4631-948f-7d8fbb045111",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when not string/object",
                  "fullTitle": "ical-generator Calendar prodId() should throw error when not string/object",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\nassert_1.default.throws(function () {\n    // @ts-ignore\n    cal.prodId(256);\n}, /`prodid`/);",
                  "err": {},
                  "uuid": "0e8a9beb-a178-4c58-95ba-f590701bbf80",
                  "parentUUID": "db3b577a-404b-4631-948f-7d8fbb045111",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when no company given",
                  "fullTitle": "ical-generator Calendar prodId() should throw error when no company given",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\nassert_1.default.throws(function () {\n    // @ts-ignore\n    cal.prodId({\n        product: 'ical-tests'\n    });\n}, /`prodid\\.company`/);",
                  "err": {},
                  "uuid": "dc804db6-aeb6-447f-b5a0-80db9c6d7c6f",
                  "parentUUID": "db3b577a-404b-4631-948f-7d8fbb045111",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when no product given",
                  "fullTitle": "ical-generator Calendar prodId() should throw error when no product given",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\nassert_1.default.throws(function () {\n    // @ts-ignore\n    cal.prodId({\n        company: 'sebbo.net'\n    });\n}, /`prodid\\.product`/);",
                  "err": {},
                  "uuid": "eb93db50-a809-4051-88ad-637a6ccf73fe",
                  "parentUUID": "db3b577a-404b-4631-948f-7d8fbb045111",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change something #1",
                  "fullTitle": "ical-generator Calendar prodId() should change something #1",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default().prodId({\n    company: 'loremipsum.com',\n    product: 'awesome-unit-tests'\n});\nassert_1.default.strictEqual(cal.prodId(), '//loremipsum.com//awesome-unit-tests//EN');",
                  "err": {},
                  "uuid": "f29f2950-59e4-48cb-b2aa-568a86e38ff2",
                  "parentUUID": "db3b577a-404b-4631-948f-7d8fbb045111",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change something #2",
                  "fullTitle": "ical-generator Calendar prodId() should change something #2",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default().prodId({\n    company: 'loremipsum.com',\n    product: 'awesome-unit-tests',\n    language: 'DE'\n});\nassert_1.default.strictEqual(cal.prodId(), '//loremipsum.com//awesome-unit-tests//DE');",
                  "err": {},
                  "uuid": "e03edd02-b8f2-44b6-86ce-2a64e467aa63",
                  "parentUUID": "db3b577a-404b-4631-948f-7d8fbb045111",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fbd84df2-f340-4f3e-a849-d9a2789dd94a",
                "cfa49a45-5149-4dbe-baa5-a2a8c368dd7a",
                "449e4889-b1b7-4dfa-aa97-4fbec074b506",
                "0e8a9beb-a178-4c58-95ba-f590701bbf80",
                "dc804db6-aeb6-447f-b5a0-80db9c6d7c6f",
                "eb93db50-a809-4051-88ad-637a6ccf73fe",
                "f29f2950-59e4-48cb-b2aa-568a86e38ff2",
                "e03edd02-b8f2-44b6-86ce-2a64e467aa63"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d5ce5731-1d1c-429b-8874-673cf3c8a65f",
              "title": "method()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/calendar.ts",
              "file": "/test/calendar.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Calendar method() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const c = new calendar_1.default();\nassert_1.default.deepStrictEqual(c, c.method(null), 'method(null)');\nassert_1.default.deepStrictEqual(c, c.method(calendar_1.ICalCalendarMethod.PUBLISH), 'method(enum)');",
                  "err": {},
                  "uuid": "528fe7c1-6b61-4647-a9ad-05192d0bc3f4",
                  "parentUUID": "d5ce5731-1d1c-429b-8874-673cf3c8a65f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Calendar method() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const c = new calendar_1.default();\nassert_1.default.strictEqual(c.method(), null);\nc.method(null);\nassert_1.default.strictEqual(c.method(), null);\nc.method(calendar_1.ICalCalendarMethod.PUBLISH);\nassert_1.default.strictEqual(c.method(), 'PUBLISH');\nc.method(null);\nassert_1.default.strictEqual(c.method(), null);",
                  "err": {},
                  "uuid": "d74ffae6-8452-42c2-9421-1c1800cf87e0",
                  "parentUUID": "d5ce5731-1d1c-429b-8874-673cf3c8a65f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when method not allowed",
                  "fullTitle": "ical-generator Calendar method() should throw error when method not allowed",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const c = new calendar_1.default();\nassert_1.default.throws(function () {\n    // @ts-ignore\n    c.method('KICK ASS');\n}, /Input must be one of the following: PUBLISH, REQUEST, REPLY, ADD, CANCEL, REFRESH, COUNTER, DECLINECOUNTER/);",
                  "err": {},
                  "uuid": "8f495b22-2a5a-4aa8-bc0f-fd9a6358c8a0",
                  "parentUUID": "d5ce5731-1d1c-429b-8874-673cf3c8a65f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change something",
                  "fullTitle": "ical-generator Calendar method() should change something",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const c = new calendar_1.default({ method: calendar_1.ICalCalendarMethod.PUBLISH });\nassert_1.default.strictEqual(c.method(), 'PUBLISH');\nc.method(calendar_1.ICalCalendarMethod.ADD);\nassert_1.default.strictEqual(c.method(), 'ADD');",
                  "err": {},
                  "uuid": "f1ca2ac3-6717-4160-96c3-5438389e65de",
                  "parentUUID": "d5ce5731-1d1c-429b-8874-673cf3c8a65f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "528fe7c1-6b61-4647-a9ad-05192d0bc3f4",
                "d74ffae6-8452-42c2-9421-1c1800cf87e0",
                "8f495b22-2a5a-4aa8-bc0f-fd9a6358c8a0",
                "f1ca2ac3-6717-4160-96c3-5438389e65de"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "cdc92845-25f8-4e35-bc61-8b0687332120",
              "title": "name()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/calendar.ts",
              "file": "/test/calendar.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Calendar name() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\nassert_1.default.deepStrictEqual(cal, cal.name(null));\nassert_1.default.deepStrictEqual(cal, cal.name('Testevents'));",
                  "err": {},
                  "uuid": "e50385ec-5456-4d82-8b61-c2f4078f0b7c",
                  "parentUUID": "cdc92845-25f8-4e35-bc61-8b0687332120",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Calendar name() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\nassert_1.default.strictEqual(cal.name(), null);\ncal.name('Testevents');\nassert_1.default.strictEqual(cal.name(), 'Testevents');\ncal.name(null);\nassert_1.default.strictEqual(cal.name(), null);",
                  "err": {},
                  "uuid": "fec9ad09-d06d-40c9-b400-1361d90d6c3a",
                  "parentUUID": "cdc92845-25f8-4e35-bc61-8b0687332120",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change something",
                  "fullTitle": "ical-generator Calendar name() should change something",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default().name('Testevents');\ncal.createEvent({\n    start: new Date(),\n    summary: 'Example Event'\n});\nassert_1.default.strictEqual(cal.name(), 'Testevents');",
                  "err": {},
                  "uuid": "157139c9-8d3c-4edb-a7b2-0a9afe34dc9e",
                  "parentUUID": "cdc92845-25f8-4e35-bc61-8b0687332120",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e50385ec-5456-4d82-8b61-c2f4078f0b7c",
                "fec9ad09-d06d-40c9-b400-1361d90d6c3a",
                "157139c9-8d3c-4edb-a7b2-0a9afe34dc9e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e56f981e-8bdb-469b-af90-9b39e2bfb787",
              "title": "description()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/calendar.ts",
              "file": "/test/calendar.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Calendar description() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\nassert_1.default.deepStrictEqual(cal, cal.description(null));\nassert_1.default.deepStrictEqual(cal, cal.description('Testbeschreibung'));",
                  "err": {},
                  "uuid": "3baca3e9-2e14-432c-8c31-5c0c60b8025e",
                  "parentUUID": "e56f981e-8bdb-469b-af90-9b39e2bfb787",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Calendar description() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\nassert_1.default.strictEqual(cal.description(), null);\ncal.description('Testbeschreibung');\nassert_1.default.strictEqual(cal.description(), 'Testbeschreibung');\ncal.description(null);\nassert_1.default.strictEqual(cal.description(), null);",
                  "err": {},
                  "uuid": "440d3722-0c75-4616-9646-0b1ce4e6f039",
                  "parentUUID": "e56f981e-8bdb-469b-af90-9b39e2bfb787",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change something",
                  "fullTitle": "ical-generator Calendar description() should change something",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default().description('Testbeschreibung');\ncal.createEvent({\n    start: new Date(),\n    summary: 'Example Event'\n});\nassert_1.default.ok(cal.description(), 'Testbeschreibung');",
                  "err": {},
                  "uuid": "4b11dcf7-9422-4a92-b436-0acc9f7d568f",
                  "parentUUID": "e56f981e-8bdb-469b-af90-9b39e2bfb787",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3baca3e9-2e14-432c-8c31-5c0c60b8025e",
                "440d3722-0c75-4616-9646-0b1ce4e6f039",
                "4b11dcf7-9422-4a92-b436-0acc9f7d568f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "760d09be-21f5-4183-b9fa-8e623d41e0bb",
              "title": "timezone()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/calendar.ts",
              "file": "/test/calendar.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Calendar timezone() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\nassert_1.default.deepStrictEqual(cal, cal.timezone('Europe/Berlin'));",
                  "err": {},
                  "uuid": "018ea439-2e4b-44bd-ab6a-95fd45434211",
                  "parentUUID": "760d09be-21f5-4183-b9fa-8e623d41e0bb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Calendar timezone() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default().timezone('Europe/Berlin');\nassert_1.default.strictEqual(cal.timezone(), 'Europe/Berlin');\ncal.timezone(null);\nassert_1.default.strictEqual(cal.timezone(), null);",
                  "err": {},
                  "uuid": "4dc32da1-a4eb-4ef0-8a22-ef429e4b5bf7",
                  "parentUUID": "760d09be-21f5-4183-b9fa-8e623d41e0bb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should make a difference to iCal output",
                  "fullTitle": "ical-generator Calendar timezone() should make a difference to iCal output",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default().timezone('Europe/London');\ncal.createEvent({\n    start: new Date(),\n    end: new Date(new Date().getTime() + 3600000),\n    summary: 'Example Event'\n});\nassert_1.default.strictEqual(cal.timezone(), 'Europe/London');",
                  "err": {},
                  "uuid": "3854f681-a4db-488d-abed-79e64c9b79b6",
                  "parentUUID": "760d09be-21f5-4183-b9fa-8e623d41e0bb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "018ea439-2e4b-44bd-ab6a-95fd45434211",
                "4dc32da1-a4eb-4ef0-8a22-ef429e4b5bf7",
                "3854f681-a4db-488d-abed-79e64c9b79b6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "1a1f1aaa-2612-4a75-b4a1-c5215d5fb399",
              "title": "ttl()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/calendar.ts",
              "file": "/test/calendar.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Calendar ttl() setter should return this",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\nassert_1.default.deepStrictEqual(cal.ttl(60 * 60 * 24), cal);\nassert_1.default.deepStrictEqual(cal.ttl(moment_1.default.duration(2, 'days')), cal);\nassert_1.default.deepStrictEqual(cal.ttl(null), cal);",
                  "err": {},
                  "uuid": "e1e64323-b189-4f91-9f77-224f0c40e195",
                  "parentUUID": "1a1f1aaa-2612-4a75-b4a1-c5215d5fb399",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Calendar ttl() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\nassert_1.default.strictEqual(cal.ttl(), null);\ncal.ttl(86400);\nassert_1.default.strictEqual(cal.ttl(), 86400);",
                  "err": {},
                  "uuid": "48f62208-4d70-4af7-b0f4-8dc1b21b36c3",
                  "parentUUID": "1a1f1aaa-2612-4a75-b4a1-c5215d5fb399",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change something",
                  "fullTitle": "ical-generator Calendar ttl() should change something",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default().ttl(86400);\nassert_1.default.strictEqual(cal.ttl(), 86400);",
                  "err": {},
                  "uuid": "edd664be-a2fd-47af-a86d-c40adecfb532",
                  "parentUUID": "1a1f1aaa-2612-4a75-b4a1-c5215d5fb399",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e1e64323-b189-4f91-9f77-224f0c40e195",
                "48f62208-4d70-4af7-b0f4-8dc1b21b36c3",
                "edd664be-a2fd-47af-a86d-c40adecfb532"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "0af9280d-309c-442c-bea6-e907b3416755",
              "title": "url()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/calendar.ts",
              "file": "/test/calendar.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Calendar url() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\nassert_1.default.deepStrictEqual(cal, cal.url('https://example.com/calendar.ical'));",
                  "err": {},
                  "uuid": "56e36a71-d338-4466-845c-992343983d11",
                  "parentUUID": "0af9280d-309c-442c-bea6-e907b3416755",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Calendar url() getter should return value",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\nassert_1.default.strictEqual(cal.url(), null);\ncal.url('https://example.com/calendar.ical');\nassert_1.default.strictEqual(cal.url(), 'https://example.com/calendar.ical');\ncal.url(null);\nassert_1.default.strictEqual(cal.url(), null);",
                  "err": {},
                  "uuid": "6d5d71d1-388e-4885-97f4-1fe88689beac",
                  "parentUUID": "0af9280d-309c-442c-bea6-e907b3416755",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change something",
                  "fullTitle": "ical-generator Calendar url() should change something",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default().url('https://example.com/calendar.ical');\ncal.createEvent({\n    start: new Date(),\n    end: new Date(new Date().getTime() + 3600000),\n    summary: 'Example Event'\n});\nassert_1.default.ok(cal.url(), 'https://example.com/calendar.ical');",
                  "err": {},
                  "uuid": "c65c3b02-f0bc-448e-964b-421934818eb9",
                  "parentUUID": "0af9280d-309c-442c-bea6-e907b3416755",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "56e36a71-d338-4466-845c-992343983d11",
                "6d5d71d1-388e-4885-97f4-1fe88689beac",
                "c65c3b02-f0bc-448e-964b-421934818eb9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e91c6c69-4251-4135-bb39-0f127b6d405b",
              "title": "scale()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/calendar.ts",
              "file": "/test/calendar.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Calendar scale() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\nassert_1.default.deepStrictEqual(cal, cal.scale('gregorian'));",
                  "err": {},
                  "uuid": "22cf4963-edd4-41c1-b911-cce3993c04c2",
                  "parentUUID": "e91c6c69-4251-4135-bb39-0f127b6d405b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Calendar scale() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\nassert_1.default.strictEqual(cal.scale(), null);\ncal.scale('GREGORIAN');\nassert_1.default.strictEqual(cal.scale(), 'GREGORIAN');\ncal.scale(null);\nassert_1.default.strictEqual(cal.scale(), null);",
                  "err": {},
                  "uuid": "b44685ec-809c-4e1b-97d4-57fd1a9c2ede",
                  "parentUUID": "e91c6c69-4251-4135-bb39-0f127b6d405b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change something",
                  "fullTitle": "ical-generator Calendar scale() should change something",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default().scale('gregorian');\ncal.createEvent({\n    start: new Date(),\n    end: new Date(new Date().getTime() + 3600000),\n    summary: 'Example Event'\n});\nassert_1.default.ok(cal.scale(), 'GREGORIAN');",
                  "err": {},
                  "uuid": "63f03c50-11f8-4fc0-967c-df963b264f61",
                  "parentUUID": "e91c6c69-4251-4135-bb39-0f127b6d405b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "22cf4963-edd4-41c1-b911-cce3993c04c2",
                "b44685ec-809c-4e1b-97d4-57fd1a9c2ede",
                "63f03c50-11f8-4fc0-967c-df963b264f61"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "15d6b262-d2fb-4d99-9f49-a0e6736cc80d",
              "title": "createEvent()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/calendar.ts",
              "file": "/test/calendar.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a ICalEvent instance",
                  "fullTitle": "ical-generator Calendar createEvent() should return a ICalEvent instance",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\nassert_1.default.ok(cal.createEvent({}) instanceof event_1.default);",
                  "err": {},
                  "uuid": "706e27d3-858d-4d96-b3df-5820371e083f",
                  "parentUUID": "15d6b262-d2fb-4d99-9f49-a0e6736cc80d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should pass data to instance",
                  "fullTitle": "ical-generator Calendar createEvent() should pass data to instance",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\nconst event = cal.createEvent({ summary: 'Patch-Day' });\nassert_1.default.strictEqual(event.summary(), 'Patch-Day');",
                  "err": {},
                  "uuid": "ce9dfb4e-8d8b-4f61-b4c9-dca5687b7b2d",
                  "parentUUID": "15d6b262-d2fb-4d99-9f49-a0e6736cc80d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not require optional parameters",
                  "fullTitle": "ical-generator Calendar createEvent() should not require optional parameters",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.doesNotThrow(function () {\n    new calendar_1.default().createEvent({\n        start: new Date(),\n        summary: 'Patch-Day'\n    });\n}, Error);",
                  "err": {},
                  "uuid": "4b40f4d6-dd07-4e2c-b79b-88425316f2b1",
                  "parentUUID": "15d6b262-d2fb-4d99-9f49-a0e6736cc80d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "706e27d3-858d-4d96-b3df-5820371e083f",
                "ce9dfb4e-8d8b-4f61-b4c9-dca5687b7b2d",
                "4b40f4d6-dd07-4e2c-b79b-88425316f2b1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f8fa4be1-a949-446a-86e0-2b9a1a7f7c6f",
              "title": "events()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/calendar.ts",
              "file": "/test/calendar.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getter should return an array of events…",
                  "fullTitle": "ical-generator Calendar events() getter should return an array of events…",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\nassert_1.default.strictEqual(cal.events().length, 0);\nconst event = cal.createEvent({});\nassert_1.default.strictEqual(cal.events().length, 1);\nassert_1.default.deepStrictEqual(cal.events()[0], event);",
                  "err": {},
                  "uuid": "65acfa59-2fd7-4fa9-95a4-8fc826aa4779",
                  "parentUUID": "f8fa4be1-a949-446a-86e0-2b9a1a7f7c6f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should add events and return this",
                  "fullTitle": "ical-generator Calendar events() setter should add events and return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\nassert_1.default.strictEqual(cal.length(), 0);\nconst cal2 = cal.events([{ summary: 'Event A' }, { summary: 'Event B' }]);\nassert_1.default.strictEqual(cal.length(), 2);\nassert_1.default.deepStrictEqual(cal2, cal);",
                  "err": {},
                  "uuid": "1e0dd1e1-616d-402f-be73-b3b24f7527ca",
                  "parentUUID": "f8fa4be1-a949-446a-86e0-2b9a1a7f7c6f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "65acfa59-2fd7-4fa9-95a4-8fc826aa4779",
                "1e0dd1e1-616d-402f-be73-b3b24f7527ca"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "fdff33ea-34aa-45e2-9b3e-ec40930ab01f",
              "title": "clear()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/calendar.ts",
              "file": "/test/calendar.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should do the job",
                  "fullTitle": "ical-generator Calendar clear() should do the job",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\ncal.createEvent({});\nassert_1.default.strictEqual(cal.events().length, 1);\nassert_1.default.deepStrictEqual(cal.clear(), cal);\nassert_1.default.strictEqual(cal.events().length, 0);",
                  "err": {},
                  "uuid": "2a8feba7-3f35-4cc6-9d17-14a56bef1a66",
                  "parentUUID": "fdff33ea-34aa-45e2-9b3e-ec40930ab01f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2a8feba7-3f35-4cc6-9d17-14a56bef1a66"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "29880a3a-c11d-47b2-81fa-5a1cae841c9f",
              "title": "save()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/calendar.ts",
              "file": "/test/calendar.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return all public methods and save it",
                  "fullTitle": "ical-generator Calendar save() should return all public methods and save it",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const file = path_1.join(__dirname, 'save.ical');\nconst cal = new calendar_1.default();\nassert_1.default.deepStrictEqual(cal, cal.save(file, function () {\n    assert_1.default.ok(fs_1.existsSync(file));\n    fs_1.unlinkSync(file);\n    assert_1.default.deepStrictEqual(cal, cal.save(file, function () {\n        assert_1.default.ok(fs_1.existsSync(file));\n        fs_1.unlinkSync(file);\n        done();\n    }));\n}));",
                  "err": {},
                  "uuid": "444b64e8-7741-463c-9f3d-b8efab3709a5",
                  "parentUUID": "29880a3a-c11d-47b2-81fa-5a1cae841c9f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should be usable with promises",
                  "fullTitle": "ical-generator Calendar save() should be usable with promises",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return __awaiter(this, void 0, void 0, function* () {\n    const file = path_1.join(__dirname, 'save.ical');\n    const cal = new calendar_1.default();\n    yield cal.save(file);\n    assert_1.default.ok(fs_1.existsSync(file));\n    fs_1.unlinkSync(file);\n});",
                  "err": {},
                  "uuid": "092c972e-2df6-44e3-a764-16a4dedbc2e6",
                  "parentUUID": "29880a3a-c11d-47b2-81fa-5a1cae841c9f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when event invalid",
                  "fullTitle": "ical-generator Calendar save() should throw error when event invalid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const file = path_1.join(__dirname, 'save.ical');\nconst cal = new calendar_1.default();\ncal.createEvent({});\nassert_1.default.throws(function () {\n    cal.save(file);\n}, /`start`/);",
                  "err": {},
                  "uuid": "903957ee-f829-4615-a8bd-ed75920fac43",
                  "parentUUID": "29880a3a-c11d-47b2-81fa-5a1cae841c9f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "444b64e8-7741-463c-9f3d-b8efab3709a5",
                "092c972e-2df6-44e3-a764-16a4dedbc2e6",
                "903957ee-f829-4615-a8bd-ed75920fac43"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "cfb8cffe-5902-4288-bdf7-2baaa631bf82",
              "title": "saveSync()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/calendar.ts",
              "file": "/test/calendar.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should save it",
                  "fullTitle": "ical-generator Calendar saveSync() should save it",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const file = path_1.join(__dirname, 'save_sync.ical');\nconst cal = new calendar_1.default();\ncal.saveSync(file);\nassert_1.default.ok(fs_1.existsSync(file));\nfs_1.unlinkSync(file);\ncal.saveSync(file);\nassert_1.default.ok(fs_1.existsSync(file));\nfs_1.unlinkSync(file);",
                  "err": {},
                  "uuid": "1cb8ee5f-42f0-48c8-91f3-b2ccc918da27",
                  "parentUUID": "cfb8cffe-5902-4288-bdf7-2baaa631bf82",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when event invalid",
                  "fullTitle": "ical-generator Calendar saveSync() should throw error when event invalid",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const file = path_1.join(__dirname, 'save_sync.ical');\nconst cal = new calendar_1.default();\ncal.createEvent({});\nassert_1.default.throws(function () {\n    cal.saveSync(file);\n}, /`start`/);",
                  "err": {},
                  "uuid": "1c29dd3b-60d9-42dc-ac73-8b4599238478",
                  "parentUUID": "cfb8cffe-5902-4288-bdf7-2baaa631bf82",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1cb8ee5f-42f0-48c8-91f3-b2ccc918da27",
                "1c29dd3b-60d9-42dc-ac73-8b4599238478"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "be229b83-0f9a-4587-af5f-ca1086b924e5",
              "title": "serve()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/calendar.ts",
              "file": "/test/calendar.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "ical-generator Calendar serve() should work",
                  "timedOut": false,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return __awaiter(this, void 0, void 0, function* () {\n    const cal = new calendar_1.default();\n    cal.createEvent({\n        start: new Date(),\n        end: new Date(new Date().getTime() + (1000 * 60 * 60)),\n        summary: 'HTTP Calendar Event'\n    });\n    const port = yield portfinder_1.getPortPromise();\n    return new Promise(done => {\n        const server = http.createServer((req, res) => {\n            cal.serve(res);\n        }).listen(port, function () {\n            function request(cb) {\n                // make request\n                const req = http.request({ port }, function (res) {\n                    let file = '';\n                    assert_1.default.strictEqual(res.headers['content-type'], 'text/calendar; charset=utf-8', 'Header: text/calendar; charset=utf-8');\n                    assert_1.default.strictEqual(res.headers['content-disposition'], 'attachment; filename=\"calendar.ics\"', 'Content-Disposition');\n                    res.setEncoding('utf8');\n                    res.on('data', function (chunk) {\n                        file += chunk;\n                    });\n                    res.on('end', function () {\n                        assert_1.default.strictEqual(file, cal.toString());\n                        cb();\n                    });\n                });\n                req.on('error', function (err) {\n                    assert_1.default.fail(err);\n                });\n                req.end();\n            }\n            request(() => {\n                request(() => {\n                    server.close(() => done());\n                });\n            });\n        });\n    });\n});",
                  "err": {},
                  "uuid": "b530aaf2-70ba-407d-b5f6-e26d84bbbbc6",
                  "parentUUID": "be229b83-0f9a-4587-af5f-ca1086b924e5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b530aaf2-70ba-407d-b5f6-e26d84bbbbc6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 17,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "9049d961-c19a-457f-aae7-c2a1a79ee0ee",
              "title": "x()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/calendar.ts",
              "file": "/test/calendar.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Calendar x() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\nassert_1.default.deepStrictEqual(cal, cal.x('X-FOO', 'bar'));",
                  "err": {},
                  "uuid": "097912e7-099d-4bd7-baee-89809b846203",
                  "parentUUID": "9049d961-c19a-457f-aae7-c2a1a79ee0ee",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should work with key and value strings",
                  "fullTitle": "ical-generator Calendar x() setter should work with key and value strings",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\nassert_1.default.deepStrictEqual(cal, cal.x('X-FOO', 'bar'));\nassert_1.default.deepEqual(cal.x(), [{\n        key: 'X-FOO',\n        value: 'bar'\n    }]);\nassert_1.default.deepStrictEqual(cal, cal.x('X-LOREM', 'ipsum'));\nassert_1.default.deepEqual(cal.x(), [\n    { key: 'X-FOO', value: 'bar' },\n    { key: 'X-LOREM', value: 'ipsum' }\n]);\nassert_1.default.throws(() => {\n    cal.x('LOREM', 'ipsum');\n});\nassert_1.default.throws(() => {\n    // @ts-ignore\n    cal.x('X-LOREM', 1337);\n});\nassert_1.default.throws(() => {\n    // @ts-ignore\n    cal.x(5, 'ipsum');\n});",
                  "err": {},
                  "uuid": "3e6acaef-58d9-4545-b794-6d4912f91842",
                  "parentUUID": "9049d961-c19a-457f-aae7-c2a1a79ee0ee",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should work with key and value array",
                  "fullTitle": "ical-generator Calendar x() setter should work with key and value array",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\nassert_1.default.deepStrictEqual(cal, cal.x([{ key: 'X-FOO', value: 'bar' }]));\nassert_1.default.deepEqual(cal.x(), [{ key: 'X-FOO', value: 'bar' }]);\nassert_1.default.deepStrictEqual(cal, cal.x([{ key: 'X-LOREM', value: 'ipsum' }]));\nassert_1.default.deepEqual(cal.x(), [{ key: 'X-LOREM', value: 'ipsum' }]);\nassert_1.default.throws(() => {\n    cal.x([{ key: 'LOREM', value: 'ipsum' }]);\n});\nassert_1.default.throws(() => {\n    // @ts-ignore\n    cal.x([{ key: 'X-LOREM', value: 1337 }]);\n});\nassert_1.default.throws(() => {\n    // @ts-ignore\n    cal.x([{ key: 5, value: 'ipsum' }]);\n});",
                  "err": {},
                  "uuid": "62d9b74a-799b-4a47-a888-79bd85cf9284",
                  "parentUUID": "9049d961-c19a-457f-aae7-c2a1a79ee0ee",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should work with key and value object",
                  "fullTitle": "ical-generator Calendar x() setter should work with key and value object",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\nassert_1.default.deepStrictEqual(cal, cal.x({ 'X-FOO': 'bar' }));\nassert_1.default.deepEqual(cal.x(), [{ key: 'X-FOO', value: 'bar' }]);\nassert_1.default.deepStrictEqual(cal, cal.x({ 'X-LOREM': 'ipsum' }));\nassert_1.default.deepEqual(cal.x(), [{ key: 'X-LOREM', value: 'ipsum' }]);\nassert_1.default.throws(() => {\n    cal.x({ 'LOREM': 'ipsum' });\n});\nassert_1.default.throws(() => {\n    // @ts-ignore\n    cal.x({ 'X-LOREM': 1337 });\n});\nassert_1.default.throws(() => {\n    cal.x({ 5: 'ipsum' });\n});",
                  "err": {},
                  "uuid": "54289244-374a-48f6-ad06-37b50f9ec7ee",
                  "parentUUID": "9049d961-c19a-457f-aae7-c2a1a79ee0ee",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Calendar x() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\nassert_1.default.deepEqual(cal.x(), []);\ncal.x('X-FOO', 'BAR');\nassert_1.default.deepEqual(cal.x(), [{ key: 'X-FOO', value: 'BAR' }]);\ncal.x({});\nassert_1.default.deepEqual(cal.x().length, 0);",
                  "err": {},
                  "uuid": "c6fe9e55-642c-42bc-bb97-34e1a66ee83b",
                  "parentUUID": "9049d961-c19a-457f-aae7-c2a1a79ee0ee",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change something",
                  "fullTitle": "ical-generator Calendar x() should change something",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default().x('X-FOO', 'BAR');\ncal.createEvent({\n    start: new Date(),\n    end: new Date(new Date().getTime() + 3600000),\n    summary: 'Example Event'\n});\nassert_1.default.ok(cal.toString().includes('X-FOO'));",
                  "err": {},
                  "uuid": "9212f418-1346-408f-893d-688ff7e6686a",
                  "parentUUID": "9049d961-c19a-457f-aae7-c2a1a79ee0ee",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "097912e7-099d-4bd7-baee-89809b846203",
                "3e6acaef-58d9-4545-b794-6d4912f91842",
                "62d9b74a-799b-4a47-a888-79bd85cf9284",
                "54289244-374a-48f6-ad06-37b50f9ec7ee",
                "c6fe9e55-642c-42bc-bb97-34e1a66ee83b",
                "9212f418-1346-408f-893d-688ff7e6686a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "986bc797-1d0a-4b5d-b788-1db33e19fd3c",
              "title": "toJSON()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/calendar.ts",
              "file": "/test/calendar.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "ical-generator Calendar toJSON() should work",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _a;\nconst cal = new calendar_1.default();\nconst prodId = cal.toJSON().prodId;\nassert_1.default.strictEqual(typeof prodId, 'string');\nassert_1.default.ok(prodId.length > 0);\nassert_1.default.strictEqual((_a = cal.toJSON().events) === null || _a === void 0 ? void 0 : _a.length, 0);",
                  "err": {},
                  "uuid": "c34a561e-b2d2-40b5-953c-fcf03fc75698",
                  "parentUUID": "986bc797-1d0a-4b5d-b788-1db33e19fd3c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should work with params",
                  "fullTitle": "ical-generator Calendar toJSON() should work with params",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\ncal.createEvent({\n    start: new Date(),\n    end: new Date(new Date().getTime() + (1000 * 60 * 60)),\n    summary: 'HTTP Calendar Event',\n    x: [\n        { key: 'X-FOO', value: 'bar' },\n        { key: 'X-LOREM', value: 'ipsum' }\n    ]\n});\nconst prodId = cal.toJSON().prodId;\nassert_1.default.strictEqual(typeof prodId, 'string');\nassert_1.default.ok(prodId.length > 0);\nconst events = cal.toJSON().events;\nassert_1.default.strictEqual(events === null || events === void 0 ? void 0 : events.length, 1);\nassert_1.default.deepEqual(events[0].x, [\n    { 'key': 'X-FOO', 'value': 'bar' },\n    { 'key': 'X-LOREM', 'value': 'ipsum' }\n]);",
                  "err": {},
                  "uuid": "8a619396-cabf-4cb9-a968-8b83db3ee8ee",
                  "parentUUID": "986bc797-1d0a-4b5d-b788-1db33e19fd3c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should be compatible with constructor (type check)",
                  "fullTitle": "ical-generator Calendar toJSON() should be compatible with constructor (type check)",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new calendar_1.default();\nnew calendar_1.default(a.toJSON());",
                  "err": {},
                  "uuid": "376915ea-1871-4bef-8900-4b7b43cf8a3d",
                  "parentUUID": "986bc797-1d0a-4b5d-b788-1db33e19fd3c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c34a561e-b2d2-40b5-953c-fcf03fc75698",
                "8a619396-cabf-4cb9-a968-8b83db3ee8ee",
                "376915ea-1871-4bef-8900-4b7b43cf8a3d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f169cc45-1843-470b-87d8-91326f4feda2",
              "title": "length()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/calendar.ts",
              "file": "/test/calendar.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "ical-generator Calendar length() should work",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\nassert_1.default.strictEqual(cal.length(), 0);\ncal.createEvent({\n    start: new Date(),\n    end: new Date(new Date().getTime() + 3600000),\n    summary: 'Example Event'\n});\nassert_1.default.strictEqual(cal.length(), 1);",
                  "err": {},
                  "uuid": "e99a2beb-8f5a-4985-a61b-e7f3e679d63d",
                  "parentUUID": "f169cc45-1843-470b-87d8-91326f4feda2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e99a2beb-8f5a-4985-a61b-e7f3e679d63d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ef96cf58-d1e2-4208-9fdc-683ee1949d32",
              "title": "toString()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/calendar.ts",
              "file": "/test/calendar.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include the URL",
                  "fullTitle": "ical-generator Calendar toString() should include the URL",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\ncal.url('https://sebbo.net/foo');\nassert_1.default.ok(cal.toString().indexOf('URL:https://sebbo.net/foo') > -1);",
                  "err": {},
                  "uuid": "a6b8be57-0f86-4c5b-b801-38dd5c98c22a",
                  "parentUUID": "ef96cf58-d1e2-4208-9fdc-683ee1949d32",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should include the method",
                  "fullTitle": "ical-generator Calendar toString() should include the method",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\ncal.method(calendar_1.ICalCalendarMethod.REFRESH);\nassert_1.default.ok(cal.toString().indexOf('METHOD:REFRESH') > -1);",
                  "err": {},
                  "uuid": "5f91279f-c403-4ccc-aba3-2bd90376dc17",
                  "parentUUID": "ef96cf58-d1e2-4208-9fdc-683ee1949d32",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should include the name",
                  "fullTitle": "ical-generator Calendar toString() should include the name",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\ncal.name('TEST');\nassert_1.default.ok(cal.toString().indexOf('NAME:TEST') > -1);\nassert_1.default.ok(cal.toString().indexOf('X-WR-CALNAME:TEST') > -1);",
                  "err": {},
                  "uuid": "88109b2f-d8ea-4dd8-9583-d0e7846037d1",
                  "parentUUID": "ef96cf58-d1e2-4208-9fdc-683ee1949d32",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should include the description",
                  "fullTitle": "ical-generator Calendar toString() should include the description",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\ncal.description('TEST');\nassert_1.default.ok(cal.toString().indexOf('X-WR-CALDESC:TEST') > -1);",
                  "err": {},
                  "uuid": "7b9b7305-5494-4d1f-b804-7914764a0b34",
                  "parentUUID": "ef96cf58-d1e2-4208-9fdc-683ee1949d32",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should include the timezone",
                  "fullTitle": "ical-generator Calendar toString() should include the timezone",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\ncal.timezone('TEST');\nassert_1.default.ok(cal.toString().indexOf('TIMEZONE-ID:TEST') > -1);\nassert_1.default.ok(cal.toString().indexOf('X-WR-TIMEZONE:TEST') > -1);",
                  "err": {},
                  "uuid": "27df4c3f-e09d-4f60-928b-77949299fba6",
                  "parentUUID": "ef96cf58-d1e2-4208-9fdc-683ee1949d32",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should include the timezone",
                  "fullTitle": "ical-generator Calendar toString() should include the timezone",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\ncal.ttl(moment_1.default.duration(3, 'days'));\nassert_1.default.ok(cal.toString().indexOf('REFRESH-INTERVAL;VALUE=DURATION:P3D') > -1);\nassert_1.default.ok(cal.toString().indexOf('X-PUBLISHED-TTL:P3D') > -1);",
                  "err": {},
                  "uuid": "3805f933-bd11-4f56-b802-3e3b3a4dcd31",
                  "parentUUID": "ef96cf58-d1e2-4208-9fdc-683ee1949d32",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a6b8be57-0f86-4c5b-b801-38dd5c98c22a",
                "5f91279f-c403-4ccc-aba3-2bd90376dc17",
                "88109b2f-d8ea-4dd8-9583-d0e7846037d1",
                "7b9b7305-5494-4d1f-b804-7914764a0b34",
                "27df4c3f-e09d-4f60-928b-77949299fba6",
                "3805f933-bd11-4f56-b802-3e3b3a4dcd31"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "98f25b99-3741-4c89-ab69-8304a7f1e147",
          "title": "ical-generator Cases",
          "fullFile": "/home/runner/work/ical-generator/ical-generator/test/cases.ts",
          "file": "/test/cases.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "case #1",
              "fullTitle": "ical-generator Cases case #1",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    const cal = src_1.default({ prodId: '//sebbo.net//ical-generator.tests//EN' });\n    cal.createEvent({\n        id: '123',\n        start: new Date('Fr Oct 04 2013 22:39:30 UTC'),\n        end: new Date('Fr Oct 04 2013 23:15:00 UTC'),\n        stamp: new Date('Fr Oct 04 2013 23:34:53 UTC'),\n        created: new Date('Fr Oct 04 2013 23:34:53 UTC'),\n        lastModified: new Date('Fr Oct 04 2013 23:34:53 UTC'),\n        summary: 'Simple Event'\n    });\n    const string = cal.toString();\n    assert_1.default.strictEqual(string, yield fs_1.promises.readFile(__dirname + '/results/generate_01.ics', 'utf8'));\n    assert_1.default.strictEqual(src_1.default(cal.toJSON()).toString(), string);\n});",
              "err": {},
              "uuid": "47b3131d-72ce-43c7-8408-8383ed314401",
              "parentUUID": "98f25b99-3741-4c89-ab69-8304a7f1e147",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "case #2",
              "fullTitle": "ical-generator Cases case #2",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    const cal = src_1.default({ prodId: '//sebbo.net//ical-generator.tests//EN' });\n    cal.createEvent({\n        id: '123',\n        start: new Date('Fr Oct 04 2013 22:39:30 UTC'),\n        end: new Date('Fr Oct 04 2013 23:15:00 UTC'),\n        stamp: new Date('Fr Oct 04 2013 23:34:53 UTC'),\n        summary: 'Sample Event',\n        location: 'localhost',\n        description: {\n            plain: 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua.\\nbeep boop',\n            html: '<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua.\\nbeep boop</p>'\n        }\n    });\n    const string = cal.toString();\n    assert_1.default.strictEqual(string, yield fs_1.promises.readFile(__dirname + '/results/generate_02.ics', 'utf8'));\n    assert_1.default.strictEqual(src_1.default(cal.toJSON()).toString(), string);\n});",
              "err": {},
              "uuid": "87e54d02-19c3-4c94-adda-7a786b06eaeb",
              "parentUUID": "98f25b99-3741-4c89-ab69-8304a7f1e147",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "case #3",
              "fullTitle": "ical-generator Cases case #3",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    const cal = src_1.default({\n        method: calendar_1.ICalCalendarMethod.ADD,\n        prodId: '//sebbo.net//ical-generator.tests//EN'\n    });\n    cal.createEvent({\n        id: '123',\n        start: new Date('Fr Oct 04 2013 22:39:30 UTC'),\n        end: new Date('Fr Oct 06 2013 23:15:00 UTC'),\n        allDay: true,\n        stamp: new Date('Fr Oct 04 2013 23:34:53 UTC'),\n        summary: 'Sample Event',\n        location: {\n            title: 'Apple Store Kurfürstendamm',\n            address: 'Kurfürstendamm 26, 10719 Berlin, Deutschland',\n            radius: 141.1751386318387,\n            geo: { lat: 52.503630, lon: 13.328650 }\n        },\n        organizer: 'Sebastian Pekarek <mail@sebbo.net>',\n        status: event_1.ICalEventStatus.CONFIRMED,\n        categories: [{ name: 'WORK' }],\n        url: 'http://sebbo.net/'\n    });\n    const string = cal.toString();\n    assert_1.default.strictEqual(string, yield fs_1.promises.readFile(__dirname + '/results/generate_03.ics', 'utf8'), 'toString');\n    assert_1.default.strictEqual(src_1.default(cal.toJSON()).toString(), string, 'toJSON / toString()');\n});",
              "err": {},
              "uuid": "dbf33c0d-5331-4950-b28e-a4093c85f3e4",
              "parentUUID": "98f25b99-3741-4c89-ab69-8304a7f1e147",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "case #4 (repeating)",
              "fullTitle": "ical-generator Cases case #4 (repeating)",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    const cal = src_1.default({ prodId: '//sebbo.net//ical-generator.tests//EN' });\n    cal.events([\n        {\n            id: '1',\n            start: new Date('Fr Oct 04 2013 22:39:30 UTC'),\n            end: new Date('Fr Oct 06 2013 23:15:00 UTC'),\n            stamp: new Date('Fr Oct 04 2013 23:34:53 UTC'),\n            summary: 'repeating by month',\n            repeating: {\n                freq: types_1.ICalEventRepeatingFreq.MONTHLY,\n                exclude: new Date('Fr Oct 06 2013 23:15:00 UTC')\n            }\n        },\n        {\n            id: '2',\n            start: new Date('Fr Oct 04 2013 22:39:30 UTC'),\n            end: new Date('Fr Oct 06 2013 23:15:00 UTC'),\n            stamp: new Date('Fr Oct 04 2013 23:34:53 UTC'),\n            summary: 'repeating by day, twice',\n            repeating: {\n                freq: types_1.ICalEventRepeatingFreq.DAILY,\n                count: 2\n            }\n        },\n        {\n            id: '3',\n            start: new Date('Fr Oct 04 2013 22:39:30 UTC'),\n            end: new Date('Fr Oct 06 2013 23:15:00 UTC'),\n            stamp: new Date('Fr Oct 04 2013 23:34:53 UTC'),\n            summary: 'repeating by 3 weeks, until 2014',\n            repeating: {\n                freq: types_1.ICalEventRepeatingFreq.WEEKLY,\n                interval: 3,\n                until: new Date('We Jan 01 2014 00:00:00 UTC')\n            }\n        }\n    ]);\n    const string = cal.toString();\n    assert_1.default.strictEqual(string, yield fs_1.promises.readFile(__dirname + '/results/generate_04.ics', 'utf8'));\n    assert_1.default.strictEqual(src_1.default(cal.toJSON()).toString(), string);\n});",
              "err": {},
              "uuid": "e69061bb-0d10-4966-bad9-1416dd00d5e6",
              "parentUUID": "98f25b99-3741-4c89-ab69-8304a7f1e147",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "case #5 (floating)",
              "fullTitle": "ical-generator Cases case #5 (floating)",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    const cal = src_1.default({ prodId: '//sebbo.net//ical-generator.tests//EN' });\n    cal.createEvent({\n        id: '1',\n        start: new Date('Fr Oct 04 2013 22:39:30 UTC'),\n        end: new Date('Fr Oct 06 2013 23:15:00 UTC'),\n        stamp: new Date('Fr Oct 04 2013 23:34:53 UTC'),\n        summary: 'floating',\n        floating: true\n    });\n    const string = cal.toString();\n    assert_1.default.strictEqual(string, yield fs_1.promises.readFile(__dirname + '/results/generate_05.ics', 'utf8'));\n    assert_1.default.strictEqual(src_1.default(cal.toJSON()).toString(), string);\n});",
              "err": {},
              "uuid": "fc565a81-1b14-421f-bcf0-cd8a89fe3271",
              "parentUUID": "98f25b99-3741-4c89-ab69-8304a7f1e147",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "case #6 (attendee with simple delegation and alarm)",
              "fullTitle": "ical-generator Cases case #6 (attendee with simple delegation and alarm)",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    const cal = src_1.default({ prodId: '//sebbo.net//ical-generator.tests//EN', method: calendar_1.ICalCalendarMethod.PUBLISH });\n    cal.createEvent({\n        id: '123',\n        start: new Date('Fr Oct 04 2013 22:39:30 UTC'),\n        allDay: true,\n        stamp: new Date('Fr Oct 04 2013 23:34:53 UTC'),\n        summary: 'Sample Event',\n        organizer: 'Sebastian Pekarek <mail@sebbo.net>',\n        attendees: [\n            {\n                name: 'Matt',\n                email: 'matt@example.com',\n                delegatesTo: {\n                    name: 'John',\n                    email: 'john@example.com',\n                    status: attendee_1.ICalAttendeeStatus.ACCEPTED\n                }\n            }\n        ],\n        alarms: [\n            {\n                type: alarm_1.ICalAlarmType.display,\n                trigger: 60 * 10,\n                repeat: 2,\n                interval: 60\n            },\n            {\n                type: alarm_1.ICalAlarmType.display,\n                trigger: 60 * 60,\n                description: 'I\\'m a reminder :)'\n            }\n        ],\n        status: event_1.ICalEventStatus.CONFIRMED,\n        url: 'http://sebbo.net/'\n    });\n    const string = cal.toString();\n    assert_1.default.strictEqual(string, yield fs_1.promises.readFile(__dirname + '/results/generate_06.ics', 'utf8'));\n    assert_1.default.strictEqual(src_1.default(cal.toJSON()).toString(), string);\n});",
              "err": {},
              "uuid": "a11b7a14-1ee2-480a-8af3-44a303d7a98f",
              "parentUUID": "98f25b99-3741-4c89-ab69-8304a7f1e147",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "case #7 (repeating: byDay, byMonth, byMonthDay)",
              "fullTitle": "ical-generator Cases case #7 (repeating: byDay, byMonth, byMonthDay)",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    const cal = src_1.default({ prodId: '//sebbo.net//ical-generator.tests//EN' });\n    cal.events([\n        {\n            id: '1',\n            start: new Date('Fr Oct 04 2013 22:39:30 UTC'),\n            end: new Date('Fr Oct 06 2013 23:15:00 UTC'),\n            stamp: new Date('Fr Oct 04 2013 23:34:53 UTC'),\n            summary: 'repeating by month',\n            repeating: {\n                freq: types_1.ICalEventRepeatingFreq.MONTHLY,\n                byMonth: [1, 4, 7, 10]\n            }\n        },\n        {\n            id: '2',\n            start: new Date('Fr Oct 04 2013 22:39:30 UTC'),\n            stamp: new Date('Fr Oct 04 2013 23:34:53 UTC'),\n            summary: 'repeating on Mo/We/Fr, twice',\n            repeating: {\n                freq: types_1.ICalEventRepeatingFreq.DAILY,\n                count: 2,\n                byDay: [types_1.ICalWeekday.MO, types_1.ICalWeekday.WE, types_1.ICalWeekday.FR]\n            }\n        },\n        {\n            id: '3',\n            start: new Date('Fr Oct 04 2013 22:39:30 UTC'),\n            end: new Date('Fr Oct 06 2013 23:15:00 UTC'),\n            stamp: new Date('Fr Oct 04 2013 23:34:53 UTC'),\n            summary: 'repeating on 1st and 15th',\n            repeating: {\n                freq: types_1.ICalEventRepeatingFreq.DAILY,\n                interval: 1,\n                byMonthDay: [1, 15]\n            }\n        }\n    ]);\n    const string = cal.toString();\n    assert_1.default.strictEqual(string, yield fs_1.promises.readFile(__dirname + '/results/generate_07.ics', 'utf8'));\n    assert_1.default.strictEqual(src_1.default(cal.toJSON()).toString(), string);\n});",
              "err": {},
              "uuid": "51e1cf64-ff5e-404e-9139-efd3caf63911",
              "parentUUID": "98f25b99-3741-4c89-ab69-8304a7f1e147",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "case #8",
              "fullTitle": "ical-generator Cases case #8",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    const cal = src_1.default({ prodId: '//sebbo.net//ical-generator.tests//EN' });\n    cal.createEvent({\n        id: '123',\n        start: new Date('Fr Oct 04 2013 22:39:30 UTC'),\n        end: new Date('Fr Oct 04 2013 23:15:00 UTC'),\n        stamp: new Date('Fr Oct 04 2013 23:34:53 UTC'),\n        created: new Date('Fr Oct 04 2013 23:34:53 UTC'),\n        lastModified: new Date('Fr Oct 04 2013 23:34:53 UTC'),\n        summary: 'Simple Event',\n        attendees: [{\n                type: attendee_1.ICalAttendeeType.INDIVIDUAL,\n                role: attendee_1.ICalAttendeeRole.REQ,\n                status: attendee_1.ICalAttendeeStatus.NEEDSACTION,\n                email: 'mail@example.com',\n                rsvp: true\n            }]\n    });\n    const string = cal.toString();\n    assert_1.default.strictEqual(string, yield fs_1.promises.readFile(__dirname + '/results/generate_08.ics', 'utf8'));\n    assert_1.default.strictEqual(src_1.default(cal.toJSON()).toString(), string);\n});",
              "err": {},
              "uuid": "feed5386-1af3-46af-aa23-c65e4521a447",
              "parentUUID": "98f25b99-3741-4c89-ab69-8304a7f1e147",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "case #9 (organizer with mailto)",
              "fullTitle": "ical-generator Cases case #9 (organizer with mailto)",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    const cal = src_1.default({ method: calendar_1.ICalCalendarMethod.REQUEST, prodId: '//sebbo.net//ical-generator.tests//EN' });\n    cal.createEvent({\n        id: '123',\n        start: new Date('Fr Oct 04 2013 22:39:30 UTC'),\n        end: new Date('Fr Oct 04 2013 23:15:00 UTC'),\n        stamp: new Date('Fr Oct 04 2013 23:34:53 UTC'),\n        summary: 'Sample Event',\n        organizer: {\n            name: 'Sebastian Pekarek',\n            email: 'mail@sebbo.net',\n            mailto: 'mail2@example2.com'\n        },\n        attendees: [{\n                type: attendee_1.ICalAttendeeType.INDIVIDUAL,\n                role: attendee_1.ICalAttendeeRole.REQ,\n                status: attendee_1.ICalAttendeeStatus.NEEDSACTION,\n                email: 'mail@example.com',\n                rsvp: true\n            }]\n    });\n    const string = cal.toString();\n    assert_1.default.strictEqual(string, yield fs_1.promises.readFile(__dirname + '/results/generate_09.ics', 'utf8'), 'toString');\n    assert_1.default.strictEqual(src_1.default(cal.toJSON()).toString(), string, 'toJSON / toString()');\n});",
              "err": {},
              "uuid": "d63ebbb6-fbc0-458e-b89a-bcf30aac3967",
              "parentUUID": "98f25b99-3741-4c89-ab69-8304a7f1e147",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "47b3131d-72ce-43c7-8408-8383ed314401",
            "87e54d02-19c3-4c94-adda-7a786b06eaeb",
            "dbf33c0d-5331-4950-b28e-a4093c85f3e4",
            "e69061bb-0d10-4966-bad9-1416dd00d5e6",
            "fc565a81-1b14-421f-bcf0-cd8a89fe3271",
            "a11b7a14-1ee2-480a-8af3-44a303d7a98f",
            "51e1cf64-ff5e-404e-9139-efd3caf63911",
            "feed5386-1af3-46af-aa23-c65e4521a447",
            "d63ebbb6-fbc0-458e-b89a-bcf30aac3967"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 29,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "42c6c84a-1b11-47b3-aebd-bc351f2eb10a",
          "title": "ical-generator Category",
          "fullFile": "/home/runner/work/ical-generator/ical-generator/test/category.ts",
          "file": "/test/category.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "742bd007-e3ee-4fb6-89e1-a9fc1c615b4e",
              "title": "constructor()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/category.ts",
              "file": "/test/category.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should ignore unknown data attributes",
                  "fullTitle": "ical-generator Category constructor() should ignore unknown data attributes",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new category_1.default({\n    // @ts-ignore\n    unknown: true,\n    name: 'FOO'\n});\nassert_1.default.strictEqual(a.name(), 'FOO');",
                  "err": {},
                  "uuid": "e49c532a-6ac2-4e24-a25f-7ddcd1f5f567",
                  "parentUUID": "742bd007-e3ee-4fb6-89e1-a9fc1c615b4e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e49c532a-6ac2-4e24-a25f-7ddcd1f5f567"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "2026febd-5376-45a1-ab8f-619d11aa551a",
              "title": "name()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/category.ts",
              "file": "/test/category.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Category name() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const c = new category_1.default({});\nassert_1.default.deepStrictEqual(c, c.name('FOO'));",
                  "err": {},
                  "uuid": "50cb8e09-51cd-4362-a2cf-bebc8e1c0e94",
                  "parentUUID": "2026febd-5376-45a1-ab8f-619d11aa551a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Category name() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const c = new category_1.default({});\nassert_1.default.strictEqual(c.name(), null);\nc.name('HELLO-WORLD');\nassert_1.default.strictEqual(c.name(), 'HELLO-WORLD');",
                  "err": {},
                  "uuid": "66ddc660-b1bb-420b-a382-b9c38e8b85a3",
                  "parentUUID": "2026febd-5376-45a1-ab8f-619d11aa551a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change something",
                  "fullTitle": "ical-generator Category name() should change something",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const c = new category_1.default({ name: 'BANANA' });\nassert_1.default.ok(c.toString().indexOf('BANANA') > -1);",
                  "err": {},
                  "uuid": "1a24d0aa-f5bb-4d17-b770-f7f7e9418c67",
                  "parentUUID": "2026febd-5376-45a1-ab8f-619d11aa551a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "50cb8e09-51cd-4362-a2cf-bebc8e1c0e94",
                "66ddc660-b1bb-420b-a382-b9c38e8b85a3",
                "1a24d0aa-f5bb-4d17-b770-f7f7e9418c67"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "636c6d10-28e3-459f-b5a1-692f9b2dbef3",
              "title": "toJSON()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/category.ts",
              "file": "/test/category.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should contain valued previously set",
                  "fullTitle": "ical-generator Category toJSON() should contain valued previously set",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const c = new category_1.default({ name: 'FOOBAR' });\nassert_1.default.deepStrictEqual(c.toJSON(), { name: 'FOOBAR' });",
                  "err": {},
                  "uuid": "1af21351-159b-427e-b272-6d6b73232466",
                  "parentUUID": "636c6d10-28e3-459f-b5a1-692f9b2dbef3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1af21351-159b-427e-b272-6d6b73232466"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "983ee875-35a1-40a0-9c25-48aa072d337b",
              "title": "generate()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/category.ts",
              "file": "/test/category.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "shoult throw an error without name",
                  "fullTitle": "ical-generator Category generate() shoult throw an error without name",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const c = new category_1.default({});\nassert_1.default.throws(function () {\n    c.toString();\n}, /`name`/);",
                  "err": {},
                  "uuid": "4f43a109-5aaf-4b20-befa-14b4c583b4d0",
                  "parentUUID": "983ee875-35a1-40a0-9c25-48aa072d337b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4f43a109-5aaf-4b20-befa-14b4c583b4d0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "46a3c1a9-a099-4e88-bee4-6338e98d3dd4",
          "title": "ical-generator Event",
          "fullFile": "/home/runner/work/ical-generator/ical-generator/test/event.ts",
          "file": "/test/event.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "93493c85-109b-4303-8206-9b1f76435692",
              "title": "constructor()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/event.ts",
              "file": "/test/event.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "shoud set _data",
                  "fullTitle": "ical-generator Event constructor() shoud set _data",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nassert_1.default.ok(event.id(), 'data.id set');\nassert_1.default.ok(event.stamp(), 'data.stamp set');",
                  "err": {},
                  "uuid": "bbbb45db-c795-4dcb-8466-78ab86fdf077",
                  "parentUUID": "93493c85-109b-4303-8206-9b1f76435692",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "shouldn't work without calendar reference",
                  "fullTitle": "ical-generator Event constructor() shouldn't work without calendar reference",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.throws(function () {\n    // @ts-ignore\n    new event_1.default({ summary: 'Testevent' }, null);\n}, /`calendar`/);",
                  "err": {},
                  "uuid": "1cc67a16-9967-4bc2-8373-6b4053389fac",
                  "parentUUID": "93493c85-109b-4303-8206-9b1f76435692",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bbbb45db-c795-4dcb-8466-78ab86fdf077",
                "1cc67a16-9967-4bc2-8373-6b4053389fac"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "87472fc4-79f8-423c-b4ed-0bcb27980720",
              "title": "id()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/event.ts",
              "file": "/test/event.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Event id() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nassert_1.default.deepStrictEqual(event, event.id(1048));",
                  "err": {},
                  "uuid": "4ee987d0-50f1-4a4d-a57c-a0d5c2ce5269",
                  "parentUUID": "87472fc4-79f8-423c-b4ed-0bcb27980720",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Event id() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default()).id(512);\nassert_1.default.strictEqual(event.id(), '512');\nevent.id('xyz');\nassert_1.default.strictEqual(event.id(), 'xyz');",
                  "err": {},
                  "uuid": "a2625052-5174-4d1a-a4ff-7bf4a0661874",
                  "parentUUID": "87472fc4-79f8-423c-b4ed-0bcb27980720",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4ee987d0-50f1-4a4d-a57c-a0d5c2ce5269",
                "a2625052-5174-4d1a-a4ff-7bf4a0661874"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "9982504f-e073-4d38-9fe5-6df47a173e9b",
              "title": "uid()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/event.ts",
              "file": "/test/event.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Event uid() setter should return this",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nassert_1.default.deepStrictEqual(event, event.uid(1048));",
                  "err": {},
                  "uuid": "a9f7b5d0-0558-4dd7-8085-378f1f14ef66",
                  "parentUUID": "9982504f-e073-4d38-9fe5-6df47a173e9b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Event uid() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default()).uid(512);\nassert_1.default.strictEqual(event.uid(), '512');\nevent.id('xyz');\nassert_1.default.strictEqual(event.uid(), 'xyz');",
                  "err": {},
                  "uuid": "0d31eef8-7e3e-4325-962e-f87364fc2a21",
                  "parentUUID": "9982504f-e073-4d38-9fe5-6df47a173e9b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a9f7b5d0-0558-4dd7-8085-378f1f14ef66",
                "0d31eef8-7e3e-4325-962e-f87364fc2a21"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "0c427cdd-3c06-4673-8b4d-9b50674fe469",
              "title": "sequence()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/event.ts",
              "file": "/test/event.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Event sequence() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nassert_1.default.deepStrictEqual(event, event.sequence(1));",
                  "err": {},
                  "uuid": "34216e45-9b9c-472f-a917-d7d142ffc3ba",
                  "parentUUID": "0c427cdd-3c06-4673-8b4d-9b50674fe469",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Event sequence() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default()).sequence(1048);\nassert_1.default.strictEqual(event.sequence(), 1048);",
                  "err": {},
                  "uuid": "8eebc929-44ee-4f34-becc-14f1b8ec1850",
                  "parentUUID": "0c427cdd-3c06-4673-8b4d-9b50674fe469",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should throw error when sequence is not valid",
                  "fullTitle": "ical-generator Event sequence() setter should throw error when sequence is not valid",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nassert_1.default.throws(function () {\n    // @ts-ignore\n    event.sequence('hello');\n}, /`sequence`/);",
                  "err": {},
                  "uuid": "191c4a57-d1a5-4bb3-8667-408a9cde9565",
                  "parentUUID": "0c427cdd-3c06-4673-8b4d-9b50674fe469",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should work with 0",
                  "fullTitle": "ical-generator Event sequence() setter should work with 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default()).sequence(12);\nassert_1.default.strictEqual(event.sequence(), 12);\nevent.sequence(0);\nassert_1.default.strictEqual(event.sequence(), 0);",
                  "err": {},
                  "uuid": "5f10d062-90d2-4d63-9c7e-03bf26f0b223",
                  "parentUUID": "0c427cdd-3c06-4673-8b4d-9b50674fe469",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "34216e45-9b9c-472f-a917-d7d142ffc3ba",
                "8eebc929-44ee-4f34-becc-14f1b8ec1850",
                "191c4a57-d1a5-4bb3-8667-408a9cde9565",
                "5f10d062-90d2-4d63-9c7e-03bf26f0b223"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "81378537-0c1b-441f-92b1-2ba991f87f8b",
              "title": "start()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/event.ts",
              "file": "/test/event.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Event start() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const now = moment_timezone_1.default();\nconst event = new event_1.default({}, new calendar_1.default());\nevent.start(now);\nassert_1.default.strictEqual(event.start(), now);",
                  "err": {},
                  "uuid": "ad97097f-f254-4212-9d59-a8a04794f938",
                  "parentUUID": "81378537-0c1b-441f-92b1-2ba991f87f8b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should parse string if required",
                  "fullTitle": "ical-generator Event start() setter should parse string if required",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nconst date = moment_timezone_1.default().add(1, 'week').toJSON();\nassert_1.default.deepStrictEqual(event, event.start(date));\nassert_1.default.deepStrictEqual(event.start(), date);",
                  "err": {},
                  "uuid": "ee0dc158-babb-4472-91bf-6a20e190d527",
                  "parentUUID": "81378537-0c1b-441f-92b1-2ba991f87f8b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should handle Dates if required",
                  "fullTitle": "ical-generator Event start() setter should handle Dates if required",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nconst date = moment_timezone_1.default().add(1, 'week').toDate();\nassert_1.default.deepStrictEqual(event, event.start(date));\nassert_1.default.deepStrictEqual(event.start(), date);",
                  "err": {},
                  "uuid": "54c83a83-2d48-426a-a5cc-35f8aeca42c5",
                  "parentUUID": "81378537-0c1b-441f-92b1-2ba991f87f8b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should throw error when start time is not a Date",
                  "fullTitle": "ical-generator Event start() setter should throw error when start time is not a Date",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nassert_1.default.throws(function () {\n    // @ts-ignore\n    event.start(3);\n}, /`start`/, 'Number');\nassert_1.default.throws(function () {\n    // @ts-ignore\n    event.start(null);\n}, /`start`/, 'null');\nassert_1.default.throws(function () {\n    // @ts-ignore\n    event.start(NaN);\n}, /`start`/, 'NaN');\nassert_1.default.throws(function () {\n    event.start(new Date('hallo'));\n}, /`start`/, 'Invalid Date');",
                  "err": {},
                  "uuid": "81aeb4dc-af5d-4e83-a866-9cd904f52ea9",
                  "parentUUID": "81378537-0c1b-441f-92b1-2ba991f87f8b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should flip start and end if necessary",
                  "fullTitle": "ical-generator Event start() setter should flip start and end if necessary",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const start = moment_timezone_1.default().add(5, 'minutes');\nconst end = moment_timezone_1.default();\nconst event = new event_1.default({}, new calendar_1.default())\n    .end(end)\n    .start(start);\nassert_1.default.deepStrictEqual(event.start(), end);\nassert_1.default.deepStrictEqual(event.end(), start);",
                  "err": {},
                  "uuid": "260791e2-dab9-405e-9571-7151e4d736c7",
                  "parentUUID": "81378537-0c1b-441f-92b1-2ba991f87f8b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Event start() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nassert_1.default.deepStrictEqual(event, event.start(moment_timezone_1.default()));\nassert_1.default.deepStrictEqual(event, event.start(new Date()));",
                  "err": {},
                  "uuid": "13b70e03-3a19-49d8-9aa7-0aba54d5f598",
                  "parentUUID": "81378537-0c1b-441f-92b1-2ba991f87f8b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ad97097f-f254-4212-9d59-a8a04794f938",
                "ee0dc158-babb-4472-91bf-6a20e190d527",
                "54c83a83-2d48-426a-a5cc-35f8aeca42c5",
                "81aeb4dc-af5d-4e83-a866-9cd904f52ea9",
                "260791e2-dab9-405e-9571-7151e4d736c7",
                "13b70e03-3a19-49d8-9aa7-0aba54d5f598"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "62598f5e-9704-4bf2-adf6-48da40ff99d6",
              "title": "end()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/event.ts",
              "file": "/test/event.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Event end() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const now = moment_timezone_1.default();\nconst event = new event_1.default({}, new calendar_1.default());\nevent.end(now);\nassert_1.default.deepStrictEqual(event.end(), now);",
                  "err": {},
                  "uuid": "dc07d192-5434-4814-8c08-e9aff1c94b9d",
                  "parentUUID": "62598f5e-9704-4bf2-adf6-48da40ff99d6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should parse string if required",
                  "fullTitle": "ical-generator Event end() setter should parse string if required",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nconst date = moment_timezone_1.default().add(1, 'week').toJSON();\nassert_1.default.deepStrictEqual(event, event.end(date));\nassert_1.default.deepStrictEqual(event.end(), date);",
                  "err": {},
                  "uuid": "4c1dd925-257c-4bc7-a2e0-5e4ee0210daa",
                  "parentUUID": "62598f5e-9704-4bf2-adf6-48da40ff99d6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should handle Dates if required",
                  "fullTitle": "ical-generator Event end() setter should handle Dates if required",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nconst date = moment_timezone_1.default().add(1, 'week').toDate();\nassert_1.default.deepStrictEqual(event, event.end(date));\nassert_1.default.deepStrictEqual(event.end(), date);",
                  "err": {},
                  "uuid": "3923be6f-a87d-4f52-815a-ae2e9ed65d97",
                  "parentUUID": "62598f5e-9704-4bf2-adf6-48da40ff99d6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should throw error when time is not a Date",
                  "fullTitle": "ical-generator Event end() setter should throw error when time is not a Date",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nassert_1.default.throws(function () {\n    // @ts-ignore\n    event.end(3);\n}, /`end`/, 'Number');\nassert_1.default.throws(function () {\n    // @ts-ignore\n    event.end(NaN);\n}, /`end`/, 'NaN');\nassert_1.default.throws(function () {\n    event.end(new Date('hallo'));\n}, /`end`/, 'Invalid Date');",
                  "err": {},
                  "uuid": "de8e1ba4-cdf7-447e-a8fb-0ac2f4a887e2",
                  "parentUUID": "62598f5e-9704-4bf2-adf6-48da40ff99d6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should flip start and end if necessary",
                  "fullTitle": "ical-generator Event end() setter should flip start and end if necessary",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const start = moment_timezone_1.default().add(5, 'minutes');\nconst end = moment_timezone_1.default();\nconst event = new event_1.default({}, new calendar_1.default())\n    .start(start)\n    .end(end);\nassert_1.default.deepStrictEqual(event.start(), end);\nassert_1.default.deepStrictEqual(event.end(), start);",
                  "err": {},
                  "uuid": "b48e5ef3-bed5-45cb-b72d-e833e0e24cee",
                  "parentUUID": "62598f5e-9704-4bf2-adf6-48da40ff99d6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Event end() setter should return this",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nassert_1.default.deepStrictEqual(event, event.end(moment_timezone_1.default()));\nassert_1.default.deepStrictEqual(event, event.end(new Date()));",
                  "err": {},
                  "uuid": "14cc1841-574e-4b4b-8ff8-5bfca07390bf",
                  "parentUUID": "62598f5e-9704-4bf2-adf6-48da40ff99d6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dc07d192-5434-4814-8c08-e9aff1c94b9d",
                "4c1dd925-257c-4bc7-a2e0-5e4ee0210daa",
                "3923be6f-a87d-4f52-815a-ae2e9ed65d97",
                "de8e1ba4-cdf7-447e-a8fb-0ac2f4a887e2",
                "b48e5ef3-bed5-45cb-b72d-e833e0e24cee",
                "14cc1841-574e-4b4b-8ff8-5bfca07390bf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "18ea6adb-9a48-4a24-9731-6524ecf382cd",
              "title": "recurrenceId()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/event.ts",
              "file": "/test/event.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Event recurrenceId() getter should return value",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const now = moment_timezone_1.default();\nconst event = new event_1.default({}, new calendar_1.default());\nevent.recurrenceId(now);\nassert_1.default.deepStrictEqual(event.recurrenceId(), now);",
                  "err": {},
                  "uuid": "a50e2f47-2573-48f4-80e3-4eea2c96a854",
                  "parentUUID": "18ea6adb-9a48-4a24-9731-6524ecf382cd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should parse string if required",
                  "fullTitle": "ical-generator Event recurrenceId() setter should parse string if required",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nconst date = moment_timezone_1.default().add(1, 'week').toJSON();\nassert_1.default.deepStrictEqual(event, event.recurrenceId(date));\nassert_1.default.deepStrictEqual(event.recurrenceId(), date);",
                  "err": {},
                  "uuid": "dc317172-fe0c-4aff-b858-81c608b866ac",
                  "parentUUID": "18ea6adb-9a48-4a24-9731-6524ecf382cd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should handle Dates if required",
                  "fullTitle": "ical-generator Event recurrenceId() setter should handle Dates if required",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nconst date = moment_timezone_1.default().add(1, 'week').toDate();\nassert_1.default.deepStrictEqual(event, event.recurrenceId(date));\nassert_1.default.deepStrictEqual(event.recurrenceId(), date);",
                  "err": {},
                  "uuid": "cd600986-d4e5-460f-9b7f-73b3210fcb94",
                  "parentUUID": "18ea6adb-9a48-4a24-9731-6524ecf382cd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should throw error when time is not a Date",
                  "fullTitle": "ical-generator Event recurrenceId() setter should throw error when time is not a Date",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nassert_1.default.throws(function () {\n    // @ts-ignore\n    event.recurrenceId(3);\n}, /`recurrenceId`/, 'Number');\nassert_1.default.throws(function () {\n    // @ts-ignore\n    event.recurrenceId(NaN);\n}, /`recurrenceId`/, 'NaN');\nassert_1.default.throws(function () {\n    event.recurrenceId(new Date('hallo'));\n}, /`recurrenceId`/, 'Invalid Date');",
                  "err": {},
                  "uuid": "eb973cc4-bf37-4b5d-b741-c40dbee658de",
                  "parentUUID": "18ea6adb-9a48-4a24-9731-6524ecf382cd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Event recurrenceId() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nassert_1.default.deepStrictEqual(event, event.recurrenceId(moment_timezone_1.default()));\nassert_1.default.deepStrictEqual(event, event.recurrenceId(new Date()));",
                  "err": {},
                  "uuid": "e2fea963-6f9f-4b4e-ad83-a506c4d011b4",
                  "parentUUID": "18ea6adb-9a48-4a24-9731-6524ecf382cd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a50e2f47-2573-48f4-80e3-4eea2c96a854",
                "dc317172-fe0c-4aff-b858-81c608b866ac",
                "cd600986-d4e5-460f-9b7f-73b3210fcb94",
                "eb973cc4-bf37-4b5d-b741-c40dbee658de",
                "e2fea963-6f9f-4b4e-ad83-a506c4d011b4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3b552779-8e80-4335-965f-d9e20bd9b5c4",
              "title": "timezone()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/event.ts",
              "file": "/test/event.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Event timezone() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default()).timezone('Europe/Berlin');\nassert_1.default.strictEqual(e.timezone(), 'Europe/Berlin');",
                  "err": {},
                  "uuid": "4a2526d8-5691-4ecc-9dae-0dd041833a6c",
                  "parentUUID": "3b552779-8e80-4335-965f-d9e20bd9b5c4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "getter should inherit from calendar",
                  "fullTitle": "ical-generator Event timezone() getter should inherit from calendar",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\nconst e = new event_1.default({\n    start: moment_timezone_1.default(),\n    summary: 'Example Event'\n}, cal);\nassert_1.default.strictEqual(cal.timezone(), null);\nassert_1.default.strictEqual(e.timezone(), null);\ncal.timezone('Europe/London');\nassert_1.default.strictEqual(cal.timezone(), 'Europe/London');\nassert_1.default.strictEqual(e.timezone(), 'Europe/London');\ne.timezone('Europe/Berlin');\nassert_1.default.strictEqual(cal.timezone(), 'Europe/London');\nassert_1.default.strictEqual(e.timezone(), 'Europe/Berlin');\ncal.timezone(null);\nassert_1.default.strictEqual(cal.timezone(), null);\nassert_1.default.strictEqual(e.timezone(), 'Europe/Berlin');\ne.timezone(null);\nassert_1.default.strictEqual(cal.timezone(), null);\nassert_1.default.strictEqual(e.timezone(), null);",
                  "err": {},
                  "uuid": "71132999-5d35-49f5-875e-12884cd833f1",
                  "parentUUID": "3b552779-8e80-4335-965f-d9e20bd9b5c4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Event timezone() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\nassert_1.default.deepStrictEqual(e, e.timezone('Europe/Berlin'));",
                  "err": {},
                  "uuid": "9969ef1a-55f8-45d7-a050-3f141949604d",
                  "parentUUID": "3b552779-8e80-4335-965f-d9e20bd9b5c4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should update timezone",
                  "fullTitle": "ical-generator Event timezone() should update timezone",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({\n    start: moment_timezone_1.default(),\n    end: new Date(new Date().getTime() + 3600000),\n    summary: 'Example Event'\n}, new calendar_1.default());\ne.timezone('Europe/London');\nassert_1.default.strictEqual(e.timezone(), 'Europe/London');",
                  "err": {},
                  "uuid": "5a06ec73-30f6-42ef-9a5f-1e193abb40a4",
                  "parentUUID": "3b552779-8e80-4335-965f-d9e20bd9b5c4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should disable floating when truthy",
                  "fullTitle": "ical-generator Event timezone() should disable floating when truthy",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({\n    start: moment_timezone_1.default(),\n    summary: 'Example Event'\n}, new calendar_1.default());\ne.floating(true);\ne.timezone('Europe/London');\nassert_1.default.strictEqual(e.floating(), false);",
                  "err": {},
                  "uuid": "0e9abf57-5c7e-4341-87fb-b6936bbb3b4d",
                  "parentUUID": "3b552779-8e80-4335-965f-d9e20bd9b5c4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not disable floating when falsy",
                  "fullTitle": "ical-generator Event timezone() should not disable floating when falsy",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({\n    start: moment_timezone_1.default(),\n    summary: 'Example Event'\n}, new calendar_1.default());\ne.floating(true);\ne.timezone(null);\nassert_1.default.strictEqual(e.floating(), true);",
                  "err": {},
                  "uuid": "21354b07-00af-4a5c-aba9-0df6a5af2d70",
                  "parentUUID": "3b552779-8e80-4335-965f-d9e20bd9b5c4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4a2526d8-5691-4ecc-9dae-0dd041833a6c",
                "71132999-5d35-49f5-875e-12884cd833f1",
                "9969ef1a-55f8-45d7-a050-3f141949604d",
                "5a06ec73-30f6-42ef-9a5f-1e193abb40a4",
                "0e9abf57-5c7e-4341-87fb-b6936bbb3b4d",
                "21354b07-00af-4a5c-aba9-0df6a5af2d70"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "7c0a89fd-65cd-4074-85d7-01414bb7ece4",
              "title": "stamp()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/event.ts",
              "file": "/test/event.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Event stamp() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const now = moment_timezone_1.default().add(1, 'day');\nconst e = new event_1.default({}, new calendar_1.default()).stamp(now);\nassert_1.default.deepStrictEqual(e.stamp(), now);",
                  "err": {},
                  "uuid": "a8cf5c41-bb9e-46a3-8cec-8b25fe1cefeb",
                  "parentUUID": "7c0a89fd-65cd-4074-85d7-01414bb7ece4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should parse string if required",
                  "fullTitle": "ical-generator Event stamp() setter should parse string if required",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nconst date = moment_timezone_1.default().add(1, 'week').toJSON();\nassert_1.default.deepStrictEqual(event, event.stamp(date));\nassert_1.default.deepStrictEqual(event.stamp(), date);",
                  "err": {},
                  "uuid": "88d493b1-d71f-429c-8aa0-6734f860e6ff",
                  "parentUUID": "7c0a89fd-65cd-4074-85d7-01414bb7ece4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should handle Dates if required",
                  "fullTitle": "ical-generator Event stamp() setter should handle Dates if required",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nconst date = moment_timezone_1.default().add(1, 'week').toDate();\nassert_1.default.deepStrictEqual(event, event.stamp(date));\nassert_1.default.deepStrictEqual(event.stamp(), date);",
                  "err": {},
                  "uuid": "58c013dc-977e-490b-a7d7-62a2d3971003",
                  "parentUUID": "7c0a89fd-65cd-4074-85d7-01414bb7ece4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should throw error when time is not a Date",
                  "fullTitle": "ical-generator Event stamp() setter should throw error when time is not a Date",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nassert_1.default.throws(function () {\n    // @ts-ignore\n    event.stamp(3);\n}, /`stamp`/, 'Number');\nassert_1.default.throws(function () {\n    // @ts-ignore\n    event.stamp(null);\n}, /`stamp`/, 'null');\nassert_1.default.throws(function () {\n    // @ts-ignore\n    event.stamp(NaN);\n}, /`stamp`/, 'NaN');\nassert_1.default.throws(function () {\n    event.stamp(new Date('hallo'));\n}, /`stamp`/, 'Invalid Date');",
                  "err": {},
                  "uuid": "15f235f9-ca70-4c46-b142-eb834bad168b",
                  "parentUUID": "7c0a89fd-65cd-4074-85d7-01414bb7ece4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Event stamp() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\nassert_1.default.deepStrictEqual(e, e.stamp(new Date()));",
                  "err": {},
                  "uuid": "de3ced54-ecf8-40f3-84fa-55a47762a3fd",
                  "parentUUID": "7c0a89fd-65cd-4074-85d7-01414bb7ece4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a8cf5c41-bb9e-46a3-8cec-8b25fe1cefeb",
                "88d493b1-d71f-429c-8aa0-6734f860e6ff",
                "58c013dc-977e-490b-a7d7-62a2d3971003",
                "15f235f9-ca70-4c46-b142-eb834bad168b",
                "de3ced54-ecf8-40f3-84fa-55a47762a3fd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f8963fd2-17ca-46e6-99f3-3e0137d6ff11",
              "title": "timestamp()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/event.ts",
              "file": "/test/event.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Event timestamp() getter should return value",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const now = moment_timezone_1.default().add(1, 'day');\nconst e = new event_1.default({}, new calendar_1.default()).timestamp(now);\nassert_1.default.deepStrictEqual(e.timestamp(), now);",
                  "err": {},
                  "uuid": "2d1eca3c-67fa-4742-ab6e-3131557d3427",
                  "parentUUID": "f8963fd2-17ca-46e6-99f3-3e0137d6ff11",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should parse string if required",
                  "fullTitle": "ical-generator Event timestamp() setter should parse string if required",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nconst date = moment_timezone_1.default().add(1, 'week').toJSON();\nassert_1.default.deepStrictEqual(event, event.timestamp(date));\nassert_1.default.deepStrictEqual(event.stamp(), date);",
                  "err": {},
                  "uuid": "d580b685-9183-4f45-8af0-9745a7de8906",
                  "parentUUID": "f8963fd2-17ca-46e6-99f3-3e0137d6ff11",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should handle Dates if required",
                  "fullTitle": "ical-generator Event timestamp() setter should handle Dates if required",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nconst date = moment_timezone_1.default().add(1, 'week').toDate();\nassert_1.default.deepStrictEqual(event, event.timestamp(date));\nassert_1.default.deepStrictEqual(event.stamp(), date);",
                  "err": {},
                  "uuid": "6b1e58b9-00d4-44b8-ad81-7366d2d83d9e",
                  "parentUUID": "f8963fd2-17ca-46e6-99f3-3e0137d6ff11",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should throw error when time is not a Date",
                  "fullTitle": "ical-generator Event timestamp() setter should throw error when time is not a Date",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nassert_1.default.throws(function () {\n    // @ts-ignore\n    event.timestamp(3);\n}, /`stamp`/, 'Number');\nassert_1.default.throws(function () {\n    // @ts-ignore\n    event.timestamp(null);\n}, /`stamp`/, 'null');\nassert_1.default.throws(function () {\n    // @ts-ignore\n    event.timestamp(NaN);\n}, /`stamp`/, 'NaN');\nassert_1.default.throws(function () {\n    event.timestamp(new Date('hallo'));\n}, /`stamp`/, 'Invalid Date');",
                  "err": {},
                  "uuid": "97bec91d-b039-41b1-8180-50958716a9d5",
                  "parentUUID": "f8963fd2-17ca-46e6-99f3-3e0137d6ff11",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Event timestamp() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\nassert_1.default.deepStrictEqual(e, e.timestamp(new Date()));",
                  "err": {},
                  "uuid": "6d015a49-545e-4661-b0fb-83c507270096",
                  "parentUUID": "f8963fd2-17ca-46e6-99f3-3e0137d6ff11",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2d1eca3c-67fa-4742-ab6e-3131557d3427",
                "d580b685-9183-4f45-8af0-9745a7de8906",
                "6b1e58b9-00d4-44b8-ad81-7366d2d83d9e",
                "97bec91d-b039-41b1-8180-50958716a9d5",
                "6d015a49-545e-4661-b0fb-83c507270096"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "76dd6870-8fa3-42e6-8a4b-e0bca9f3a4c2",
              "title": "allDay()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/event.ts",
              "file": "/test/event.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Event allDay() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\ne.allDay(true);\nassert_1.default.strictEqual(e.allDay(), true);",
                  "err": {},
                  "uuid": "004f85a9-8362-4cf5-9f4e-9212dbcbb0b0",
                  "parentUUID": "76dd6870-8fa3-42e6-8a4b-e0bca9f3a4c2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Event allDay() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\nassert_1.default.deepStrictEqual(e, e.allDay(true));",
                  "err": {},
                  "uuid": "16654122-1504-41bb-bab0-36c8ef4d933c",
                  "parentUUID": "76dd6870-8fa3-42e6-8a4b-e0bca9f3a4c2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change something",
                  "fullTitle": "ical-generator Event allDay() should change something",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({\n    start: moment_timezone_1.default(),\n    summary: 'Example Event'\n}, new calendar_1.default());\nevent.allDay(true);\nassert_1.default.strictEqual(event.allDay(), true);",
                  "err": {},
                  "uuid": "ee718fd1-3c85-4370-b4da-65ebca909c4a",
                  "parentUUID": "76dd6870-8fa3-42e6-8a4b-e0bca9f3a4c2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "004f85a9-8362-4cf5-9f4e-9212dbcbb0b0",
                "16654122-1504-41bb-bab0-36c8ef4d933c",
                "ee718fd1-3c85-4370-b4da-65ebca909c4a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "8b50e499-e390-42df-9294-b290757c0aa7",
              "title": "floating()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/event.ts",
              "file": "/test/event.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Event floating() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default()).floating(true);\nassert_1.default.strictEqual(e.floating(), true);",
                  "err": {},
                  "uuid": "49a0848e-5e1b-4512-8e65-c1d40d419a5d",
                  "parentUUID": "8b50e499-e390-42df-9294-b290757c0aa7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Event floating() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\nassert_1.default.deepStrictEqual(e, e.floating(false));\nassert_1.default.deepStrictEqual(e, e.floating(true));",
                  "err": {},
                  "uuid": "a6764919-0ebc-4a94-ae6c-3b1d13447b70",
                  "parentUUID": "8b50e499-e390-42df-9294-b290757c0aa7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should update floating",
                  "fullTitle": "ical-generator Event floating() should update floating",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({\n    start: moment_timezone_1.default(),\n    summary: 'Example Event'\n}, new calendar_1.default());\nevent.floating(true);\nassert_1.default.strictEqual(event.floating(), true);",
                  "err": {},
                  "uuid": "0b6c8226-8c57-4c98-a0ea-8d3fca4a2bc7",
                  "parentUUID": "8b50e499-e390-42df-9294-b290757c0aa7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should remove timezone when truthy",
                  "fullTitle": "ical-generator Event floating() should remove timezone when truthy",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({\n    start: moment_timezone_1.default(),\n    summary: 'Example Event'\n}, new calendar_1.default());\ne.timezone('Europe/London');\ne.floating(true);\nassert_1.default.strictEqual(e.timezone(), null);",
                  "err": {},
                  "uuid": "464f8b5a-4d25-46b8-a809-6d3aa7c1225b",
                  "parentUUID": "8b50e499-e390-42df-9294-b290757c0aa7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not remove timezone when falsy",
                  "fullTitle": "ical-generator Event floating() should not remove timezone when falsy",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({\n    start: moment_timezone_1.default(),\n    summary: 'Example Event'\n}, new calendar_1.default());\ne.timezone('Europe/London');\ne.floating(false);\nassert_1.default.strictEqual(e.timezone(), 'Europe/London');",
                  "err": {},
                  "uuid": "616b9620-7607-44ce-9670-9dcc5df2f38f",
                  "parentUUID": "8b50e499-e390-42df-9294-b290757c0aa7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "49a0848e-5e1b-4512-8e65-c1d40d419a5d",
                "a6764919-0ebc-4a94-ae6c-3b1d13447b70",
                "0b6c8226-8c57-4c98-a0ea-8d3fca4a2bc7",
                "464f8b5a-4d25-46b8-a809-6d3aa7c1225b",
                "616b9620-7607-44ce-9670-9dcc5df2f38f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4b2e11ef-682c-4e31-94a5-e244dec80764",
              "title": "repeating()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/event.ts",
              "file": "/test/event.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Event repeating() getter should return value",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const options = {\n    freq: types_1.ICalEventRepeatingFreq.MONTHLY,\n    count: 5,\n    interval: 2,\n    until: moment_timezone_1.default(),\n    exclude: [moment_timezone_1.default()]\n};\nconst e = new event_1.default({}, new calendar_1.default());\nassert_1.default.deepStrictEqual(e.repeating(), null);\ne.repeating(options);\nassert_1.default.strictEqual(JSON.stringify(e.repeating(), null, '  '), JSON.stringify(options, null, '  '));\ne.repeating(null);\nassert_1.default.deepStrictEqual(e.repeating(), null);",
                  "err": {},
                  "uuid": "a06d9821-3d1c-4513-b2ed-b0e3279b2b04",
                  "parentUUID": "4b2e11ef-682c-4e31-94a5-e244dec80764",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should handle null",
                  "fullTitle": "ical-generator Event repeating() setter should handle null",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\nassert_1.default.deepStrictEqual(e, e.repeating(null));\nassert_1.default.deepStrictEqual(e.repeating(), null);",
                  "err": {},
                  "uuid": "1491679d-43d5-4f67-b48a-01b00f2dc50c",
                  "parentUUID": "4b2e11ef-682c-4e31-94a5-e244dec80764",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Event repeating() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\nassert_1.default.deepStrictEqual(e, e.repeating(null), 'repeating(null)');\nassert_1.default.deepStrictEqual(e, e.repeating({\n    freq: types_1.ICalEventRepeatingFreq.MONTHLY\n}), 'repeating({freq: \\'MONTHLY\\'})');",
                  "err": {},
                  "uuid": "8e13aef3-9b69-45f6-8d04-978c9f314673",
                  "parentUUID": "4b2e11ef-682c-4e31-94a5-e244dec80764",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should throw error when repeating without freq",
                  "fullTitle": "ical-generator Event repeating() setter should throw error when repeating without freq",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.throws(function () {\n    new event_1.default({\n        start: moment_timezone_1.default(),\n        summary: 'test',\n        // @ts-ignore\n        repeating: {}\n    }, new calendar_1.default());\n}, /Input must be one of the following: SECONDLY, MINUTELY, HOURLY, DAILY, WEEKLY, MONTHLY, YEARLY/);",
                  "err": {},
                  "uuid": "27f251ae-b98d-4c34-bb42-25b60b9d85d4",
                  "parentUUID": "4b2e11ef-682c-4e31-94a5-e244dec80764",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should throw error when repeating when freq is not allowed",
                  "fullTitle": "ical-generator Event repeating() setter should throw error when repeating when freq is not allowed",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.throws(function () {\n    new event_1.default({\n        start: moment_timezone_1.default(),\n        summary: 'test',\n        repeating: {\n            // @ts-ignore\n            freq: 'hello'\n        }\n    }, new calendar_1.default());\n}, /must be one of the following/);",
                  "err": {},
                  "uuid": "9288cef1-974c-487e-9482-3de58d7ee8f2",
                  "parentUUID": "4b2e11ef-682c-4e31-94a5-e244dec80764",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should update freq",
                  "fullTitle": "ical-generator Event repeating() setter should update freq",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\ne.repeating({ freq: types_1.ICalEventRepeatingFreq.MONTHLY });\nconst result = e.repeating();\nassert_1.default.ok(result && !tools_1.isRRule(result) && typeof result !== 'string');\nassert_1.default.strictEqual(result.freq, 'MONTHLY');",
                  "err": {},
                  "uuid": "8a8ecc36-0383-420d-a8f3-ba40bd2c51d5",
                  "parentUUID": "4b2e11ef-682c-4e31-94a5-e244dec80764",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should throw error when repeating.count is not a number",
                  "fullTitle": "ical-generator Event repeating() setter should throw error when repeating.count is not a number",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.throws(function () {\n    new event_1.default({\n        start: moment_timezone_1.default(),\n        summary: 'test',\n        repeating: {\n            freq: types_1.ICalEventRepeatingFreq.DAILY,\n            count: Infinity\n        }\n    }, new calendar_1.default());\n}, /`repeating.count` must be a finite number!/);\nassert_1.default.throws(function () {\n    new event_1.default({\n        start: moment_timezone_1.default(),\n        summary: 'test',\n        repeating: {\n            freq: types_1.ICalEventRepeatingFreq.DAILY,\n            // @ts-ignore\n            count: 'abc'\n        }\n    }, new calendar_1.default());\n}, /`repeating\\.count` must be a finite number!/);",
                  "err": {},
                  "uuid": "ed8b18a5-5c01-471e-ab21-f3306d5531f6",
                  "parentUUID": "4b2e11ef-682c-4e31-94a5-e244dec80764",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should update count",
                  "fullTitle": "ical-generator Event repeating() setter should update count",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\ne.repeating({ freq: types_1.ICalEventRepeatingFreq.MONTHLY, count: 5 });\nconst result = e.repeating();\nassert_1.default.ok(result && !tools_1.isRRule(result) && typeof result !== 'string');\nassert_1.default.strictEqual(result.count, 5);",
                  "err": {},
                  "uuid": "af1dd71f-f8d3-4127-86ce-3ba7cd9c26ca",
                  "parentUUID": "4b2e11ef-682c-4e31-94a5-e244dec80764",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when repeating.interval is not a number",
                  "fullTitle": "ical-generator Event repeating() should throw error when repeating.interval is not a number",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.throws(function () {\n    new event_1.default({\n        start: moment_timezone_1.default(),\n        summary: 'test',\n        repeating: {\n            freq: types_1.ICalEventRepeatingFreq.DAILY,\n            interval: Infinity\n        }\n    }, new calendar_1.default());\n}, /`repeating.interval` must be a finite number!/);\nassert_1.default.throws(function () {\n    new event_1.default({\n        start: moment_timezone_1.default(),\n        summary: 'test',\n        repeating: {\n            freq: types_1.ICalEventRepeatingFreq.DAILY,\n            // @ts-ignore\n            interval: 'abc'\n        }\n    }, new calendar_1.default());\n}, /`repeating.interval` must be a finite number!/);",
                  "err": {},
                  "uuid": "bedf7fca-c5e1-4433-afa4-d534ca290c21",
                  "parentUUID": "4b2e11ef-682c-4e31-94a5-e244dec80764",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should update interval",
                  "fullTitle": "ical-generator Event repeating() setter should update interval",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\ne.repeating({ freq: types_1.ICalEventRepeatingFreq.MONTHLY, interval: 5 });\nconst result = e.repeating();\nassert_1.default.ok(result && !tools_1.isRRule(result) && typeof result !== 'string');\nassert_1.default.strictEqual(result.interval, 5);",
                  "err": {},
                  "uuid": "d0fdc301-9fcc-47a8-9795-b78eb5b295e2",
                  "parentUUID": "4b2e11ef-682c-4e31-94a5-e244dec80764",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when repeating.until is not a date",
                  "fullTitle": "ical-generator Event repeating() should throw error when repeating.until is not a date",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.throws(function () {\n    new event_1.default({\n        start: moment_timezone_1.default(),\n        summary: 'test',\n        repeating: {\n            freq: types_1.ICalEventRepeatingFreq.DAILY,\n            // @ts-ignore\n            until: null\n        }\n    }, new calendar_1.default());\n}, /Error: `repeating\\.until` has to be a valid date!/);",
                  "err": {},
                  "uuid": "970fbe4d-4f95-420a-8ca1-44a625b8f1ef",
                  "parentUUID": "4b2e11ef-682c-4e31-94a5-e244dec80764",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should parse repeating.until string if required",
                  "fullTitle": "ical-generator Event repeating() setter should parse repeating.until string if required",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nconst date = moment_timezone_1.default().add(1, 'week').toJSON();\nevent.repeating({ freq: types_1.ICalEventRepeatingFreq.MONTHLY, until: date });\nconst result = event.repeating();\nassert_1.default.ok(result && !tools_1.isRRule(result) && typeof result !== 'string');\nassert_1.default.deepStrictEqual(result.until, date);",
                  "err": {},
                  "uuid": "80f2dfaf-a965-4777-a33e-8f6929cb32fc",
                  "parentUUID": "4b2e11ef-682c-4e31-94a5-e244dec80764",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should handle repeating.until Dates if required",
                  "fullTitle": "ical-generator Event repeating() setter should handle repeating.until Dates if required",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nconst date = moment_timezone_1.default().add(1, 'week').toDate();\nevent.repeating({ freq: types_1.ICalEventRepeatingFreq.MONTHLY, until: date });\nconst result = event.repeating();\nassert_1.default.ok(result && !tools_1.isRRule(result) && typeof result !== 'string');\nassert_1.default.deepStrictEqual(result.until, date);",
                  "err": {},
                  "uuid": "4a64a49d-02b8-4514-9483-f155f0926647",
                  "parentUUID": "4b2e11ef-682c-4e31-94a5-e244dec80764",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should handle repeating.until moments",
                  "fullTitle": "ical-generator Event repeating() setter should handle repeating.until moments",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nconst date = moment_timezone_1.default().add(1, 'week');\nevent.repeating({ freq: types_1.ICalEventRepeatingFreq.MONTHLY, until: date });\nconst result = event.repeating();\nassert_1.default.ok(result && !tools_1.isRRule(result) && typeof result !== 'string');\nassert_1.default.deepStrictEqual(result.until, date);",
                  "err": {},
                  "uuid": "4223743d-f050-4ee7-afc6-45f4fcd2812d",
                  "parentUUID": "4b2e11ef-682c-4e31-94a5-e244dec80764",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should throw error when repeating.until is not a Date",
                  "fullTitle": "ical-generator Event repeating() setter should throw error when repeating.until is not a Date",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nassert_1.default.throws(function () {\n    // @ts-ignore\n    event.repeating({ freq: types_1.ICalEventRepeatingFreq.MONTHLY, until: 3 });\n}, /`repeating.until`/, 'Number');\nassert_1.default.throws(function () {\n    // @ts-ignore\n    event.repeating({ freq: types_1.ICalEventRepeatingFreq.MONTHLY, until: null });\n}, /`repeating.until`/, 'null');\nassert_1.default.throws(function () {\n    // @ts-ignore\n    event.repeating({ freq: types_1.ICalEventRepeatingFreq.MONTHLY, until: NaN });\n}, /`repeating.until`/, 'NaN');\nassert_1.default.throws(function () {\n    event.repeating({ freq: types_1.ICalEventRepeatingFreq.MONTHLY, until: new Date('foo') });\n}, /`repeating.until`/, 'Invalid Date');",
                  "err": {},
                  "uuid": "511c285a-911b-4938-a4ec-eb094df86f8d",
                  "parentUUID": "4b2e11ef-682c-4e31-94a5-e244dec80764",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when repeating.byDay is not valid",
                  "fullTitle": "ical-generator Event repeating() should throw error when repeating.byDay is not valid",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.throws(function () {\n    new event_1.default({\n        start: moment_timezone_1.default(),\n        summary: 'test',\n        repeating: {\n            freq: types_1.ICalEventRepeatingFreq.DAILY,\n            interval: 2,\n            // @ts-ignore\n            byDay: 'FOO'\n        }\n    }, new calendar_1.default());\n}, /Input must be one of the following: SU, MO, TU, WE, TH, FR, SA/);\nassert_1.default.throws(function () {\n    new event_1.default({\n        start: moment_timezone_1.default(),\n        summary: 'test',\n        repeating: {\n            freq: types_1.ICalEventRepeatingFreq.DAILY,\n            interval: 2,\n            // @ts-ignore\n            byDay: ['SU', 'BAR', 'th']\n        }\n    }, new calendar_1.default());\n}, /Input must be one of the following: SU, MO, TU, WE, TH, FR, SA/);\nassert_1.default.throws(function () {\n    new event_1.default({\n        start: moment_timezone_1.default(),\n        summary: 'test',\n        repeating: {\n            freq: types_1.ICalEventRepeatingFreq.DAILY,\n            interval: 2,\n            // @ts-ignore\n            byDay: ['SU', Infinity, 'th']\n        }\n    }, new calendar_1.default());\n}, /Input must be one of the following: SU, MO, TU, WE, TH, FR, SA/);",
                  "err": {},
                  "uuid": "ce9534b9-fd80-43b0-8486-416a92d2180f",
                  "parentUUID": "4b2e11ef-682c-4e31-94a5-e244dec80764",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should update repeating.byDay",
                  "fullTitle": "ical-generator Event repeating() setter should update repeating.byDay",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\ne.repeating({\n    freq: types_1.ICalEventRepeatingFreq.MONTHLY,\n    byDay: [types_1.ICalWeekday.SU, types_1.ICalWeekday.WE, types_1.ICalWeekday.TH]\n});\nconst result = e.repeating();\nassert_1.default.ok(result && !tools_1.isRRule(result) && typeof result !== 'string');\nassert_1.default.deepStrictEqual(result.byDay, ['SU', 'WE', 'TH']);",
                  "err": {},
                  "uuid": "cffc1173-76cd-4b05-8228-540b83d562a6",
                  "parentUUID": "4b2e11ef-682c-4e31-94a5-e244dec80764",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when repeating.byMonth is not valid",
                  "fullTitle": "ical-generator Event repeating() should throw error when repeating.byMonth is not valid",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.throws(function () {\n    new event_1.default({\n        start: moment_timezone_1.default(),\n        summary: 'test',\n        repeating: {\n            freq: types_1.ICalEventRepeatingFreq.DAILY,\n            interval: 2,\n            // @ts-ignore\n            byMonth: 'FOO'\n        }\n    }, new calendar_1.default());\n}, /`repeating\\.byMonth` contains invalid value `FOO`/);\nassert_1.default.throws(function () {\n    new event_1.default({\n        start: moment_timezone_1.default(),\n        summary: 'test',\n        repeating: {\n            freq: types_1.ICalEventRepeatingFreq.DAILY,\n            interval: 2,\n            byMonth: [1, 14, 7]\n        }\n    }, new calendar_1.default());\n}, /`repeating\\.byMonth` contains invalid value `14`/);",
                  "err": {},
                  "uuid": "29888c57-7f99-400b-96e5-46caea9cbf0a",
                  "parentUUID": "4b2e11ef-682c-4e31-94a5-e244dec80764",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should update repeating.byMonth",
                  "fullTitle": "ical-generator Event repeating() setter should update repeating.byMonth",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\ne.repeating({ freq: types_1.ICalEventRepeatingFreq.MONTHLY, byMonth: [1, 12, 7] });\nconst result = e.repeating();\nassert_1.default.ok(result && !tools_1.isRRule(result) && typeof result !== 'string');\nassert_1.default.deepStrictEqual(result.byMonth, [1, 12, 7]);",
                  "err": {},
                  "uuid": "f988e955-f7b5-4e97-aee7-831103129cfb",
                  "parentUUID": "4b2e11ef-682c-4e31-94a5-e244dec80764",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when repeating.byMonthDay is not valid",
                  "fullTitle": "ical-generator Event repeating() should throw error when repeating.byMonthDay is not valid",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.throws(function () {\n    new event_1.default({\n        start: moment_timezone_1.default(),\n        end: moment_timezone_1.default(),\n        summary: 'test',\n        repeating: {\n            freq: types_1.ICalEventRepeatingFreq.DAILY,\n            interval: 2,\n            // @ts-ignore\n            byMonthDay: 'FOO'\n        }\n    }, new calendar_1.default());\n}, /`repeating\\.byMonthDay` contains invalid value `FOO`/);\nassert_1.default.throws(function () {\n    new event_1.default({\n        start: moment_timezone_1.default(),\n        end: moment_timezone_1.default(),\n        summary: 'test',\n        repeating: {\n            freq: types_1.ICalEventRepeatingFreq.DAILY,\n            interval: 2,\n            byMonthDay: [1, 32, 15]\n        }\n    }, new calendar_1.default());\n}, /`repeating\\.byMonthDay` contains invalid value `32`/);",
                  "err": {},
                  "uuid": "7b1eab4d-59ac-436c-b3ae-2e6150ee3596",
                  "parentUUID": "4b2e11ef-682c-4e31-94a5-e244dec80764",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should update repeating.byMonthDay",
                  "fullTitle": "ical-generator Event repeating() setter should update repeating.byMonthDay",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\ne.repeating({ freq: types_1.ICalEventRepeatingFreq.MONTHLY, byMonthDay: [1, 15] });\nconst result = e.repeating();\nassert_1.default.ok(result && !tools_1.isRRule(result) && typeof result !== 'string');\nassert_1.default.deepStrictEqual(result.byMonthDay, [1, 15]);",
                  "err": {},
                  "uuid": "9035a3e8-a9c8-4ab4-aa61-85487cb59992",
                  "parentUUID": "4b2e11ef-682c-4e31-94a5-e244dec80764",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when repeating.bySetPos is not valid",
                  "fullTitle": "ical-generator Event repeating() should throw error when repeating.bySetPos is not valid",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.throws(function () {\n    new event_1.default({\n        start: moment_timezone_1.default(),\n        end: moment_timezone_1.default(),\n        summary: 'test',\n        repeating: {\n            freq: types_1.ICalEventRepeatingFreq.MONTHLY,\n            interval: 2,\n            byDay: [types_1.ICalWeekday.SU],\n            bySetPos: 6\n        }\n    }, new calendar_1.default());\n}, /`repeating\\.bySetPos` contains invalid value `6`/);\nassert_1.default.throws(function () {\n    new event_1.default({\n        start: moment_timezone_1.default(),\n        end: moment_timezone_1.default(),\n        summary: 'test',\n        repeating: {\n            freq: types_1.ICalEventRepeatingFreq.MONTHLY,\n            interval: 2,\n            byDay: [types_1.ICalWeekday.SU],\n            // @ts-ignore\n            bySetPos: 'FOO'\n        }\n    }, new calendar_1.default());\n}, /`repeating\\.bySetPos` contains invalid value `FOO`/);",
                  "err": {},
                  "uuid": "207f735b-3857-44b3-96cb-191f53fd6af7",
                  "parentUUID": "4b2e11ef-682c-4e31-94a5-e244dec80764",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when repeating.byDay is not present with repeating.bySetPos",
                  "fullTitle": "ical-generator Event repeating() should throw error when repeating.byDay is not present with repeating.bySetPos",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.throws(function () {\n    new event_1.default({\n        start: moment_timezone_1.default(),\n        end: moment_timezone_1.default(),\n        summary: 'test',\n        repeating: {\n            freq: types_1.ICalEventRepeatingFreq.MONTHLY,\n            interval: 2,\n            bySetPos: 6\n        }\n    }, new calendar_1.default());\n}, /`repeating\\.bySetPos` must be used along with `repeating\\.byDay`/);",
                  "err": {},
                  "uuid": "a636d76f-5768-414b-88c2-06a1b623206a",
                  "parentUUID": "4b2e11ef-682c-4e31-94a5-e244dec80764",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should update repeating.bySetPos",
                  "fullTitle": "ical-generator Event repeating() setter should update repeating.bySetPos",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _a;\nconst e = new event_1.default({}, new calendar_1.default());\ne.repeating({\n    freq: types_1.ICalEventRepeatingFreq.MONTHLY,\n    byDay: [types_1.ICalWeekday.SU],\n    bySetPos: 2\n});\nconst result = e.repeating();\nassert_1.default.ok(result && !tools_1.isRRule(result) && typeof result !== 'string');\nassert_1.default.strictEqual((_a = result.byDay) === null || _a === void 0 ? void 0 : _a.length, 1);\nassert_1.default.strictEqual(result.bySetPos, 2);",
                  "err": {},
                  "uuid": "7d418604-0f9e-4a16-8f76-bbb660a84164",
                  "parentUUID": "4b2e11ef-682c-4e31-94a5-e244dec80764",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when repeating.exclude is not valid",
                  "fullTitle": "ical-generator Event repeating() should throw error when repeating.exclude is not valid",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.throws(function () {\n    new event_1.default({\n        start: moment_timezone_1.default(),\n        end: moment_timezone_1.default(),\n        summary: 'test',\n        repeating: {\n            freq: types_1.ICalEventRepeatingFreq.DAILY,\n            interval: 2,\n            byDay: [types_1.ICalWeekday.SU],\n            exclude: new Date('FOO')\n        }\n    }, new calendar_1.default());\n}, /has to be a valid date/);",
                  "err": {},
                  "uuid": "e363fa86-d791-4a72-8b4f-ef3a6b5f329e",
                  "parentUUID": "4b2e11ef-682c-4e31-94a5-e244dec80764",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when repeating.exclude is not valid (should throw on first err value",
                  "fullTitle": "ical-generator Event repeating() should throw error when repeating.exclude is not valid (should throw on first err value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.throws(function () {\n    new event_1.default({\n        start: moment_timezone_1.default(),\n        end: moment_timezone_1.default(),\n        summary: 'test',\n        repeating: {\n            freq: types_1.ICalEventRepeatingFreq.DAILY,\n            interval: 2,\n            byDay: [types_1.ICalWeekday.SU],\n            exclude: [moment_timezone_1.default(), new Date('BAR'), 'FOO']\n        }\n    }, new calendar_1.default());\n}, /has to be a valid date/);",
                  "err": {},
                  "uuid": "ee4f5d5d-464a-4f12-ae1a-1b9d419f3f1b",
                  "parentUUID": "4b2e11ef-682c-4e31-94a5-e244dec80764",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when repeating.exclude is not a valid type",
                  "fullTitle": "ical-generator Event repeating() should throw error when repeating.exclude is not a valid type",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.throws(function () {\n    new event_1.default({\n        start: moment_timezone_1.default(),\n        end: moment_timezone_1.default(),\n        summary: 'test',\n        repeating: {\n            freq: types_1.ICalEventRepeatingFreq.DAILY,\n            interval: 2,\n            byDay: [types_1.ICalWeekday.SU],\n            // @ts-ignore\n            exclude: 42\n        }\n    }, new calendar_1.default());\n}, /`repeating.exclude\\[0\\]` has to be a valid date!/);",
                  "err": {},
                  "uuid": "3922c239-b43a-404f-a73f-44f6dde8705a",
                  "parentUUID": "4b2e11ef-682c-4e31-94a5-e244dec80764",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should update repeating.exclude",
                  "fullTitle": "ical-generator Event repeating() setter should update repeating.exclude",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\nconst date = moment_timezone_1.default().add(1, 'week');\ne.repeating({\n    freq: types_1.ICalEventRepeatingFreq.MONTHLY,\n    exclude: [\n        date.toJSON(),\n        date.toDate(),\n        date\n    ]\n});\nconst result = e.repeating();\nassert_1.default.ok(result && !tools_1.isRRule(result) && typeof result !== 'string');\nassert_1.default.ok(Array.isArray(result.exclude));\nassert_1.default.strictEqual(result.exclude.length, 3);\nassert_1.default.deepStrictEqual(result.exclude[0], date.toJSON(), 'String');\nassert_1.default.deepStrictEqual(result.exclude[1], date.toDate(), 'Date');\nassert_1.default.deepStrictEqual(result.exclude[2], date, 'Moment');",
                  "err": {},
                  "uuid": "3a93a94e-0aca-4777-92ed-f91cb98a421d",
                  "parentUUID": "4b2e11ef-682c-4e31-94a5-e244dec80764",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when repeating.startOfWeek is not valid",
                  "fullTitle": "ical-generator Event repeating() should throw error when repeating.startOfWeek is not valid",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.throws(function () {\n    new event_1.default({\n        start: moment_timezone_1.default(),\n        summary: 'test',\n        repeating: {\n            freq: types_1.ICalEventRepeatingFreq.DAILY,\n            interval: 2,\n            // @ts-ignore\n            startOfWeek: 'FOO'\n        }\n    }, new calendar_1.default());\n}, /Input must be one of the following: SU, MO, TU, WE, TH, FR, SA/);",
                  "err": {},
                  "uuid": "942cdbe5-9b01-4c23-8dce-3ef3bbd80357",
                  "parentUUID": "4b2e11ef-682c-4e31-94a5-e244dec80764",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should update repeating.wkst",
                  "fullTitle": "ical-generator Event repeating() setter should update repeating.wkst",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\ne.repeating({\n    freq: types_1.ICalEventRepeatingFreq.MONTHLY,\n    startOfWeek: types_1.ICalWeekday.SU\n});\nconst result = e.repeating();\nassert_1.default.ok(result && !tools_1.isRRule(result) && typeof result !== 'string');\nassert_1.default.deepStrictEqual(result.startOfWeek, 'SU');",
                  "err": {},
                  "uuid": "a8d93a7d-eb13-4386-bc55-f89e3e60c67f",
                  "parentUUID": "4b2e11ef-682c-4e31-94a5-e244dec80764",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should support RRules",
                  "fullTitle": "ical-generator Event repeating() should support RRules",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const start = new Date(Date.UTC(2012, 1, 1, 10, 30));\nconst e = new event_1.default({ start }, new calendar_1.default());\nconst rule = new rrule_1.RRule({\n    freq: rrule_1.RRule.WEEKLY,\n    interval: 5,\n    byweekday: [rrule_1.RRule.MO, rrule_1.RRule.FR],\n    dtstart: start,\n    until: new Date(Date.UTC(2012, 12, 31))\n});\ne.repeating(rule);\nconst result = e.repeating();\nassert_1.default.ok(tools_1.isRRule(result));\nassert_1.default.deepStrictEqual(result, rule);\nassert_1.default.ok(e.toString().includes('RRULE:FREQ=WEEKLY;INTERVAL=5;BYDAY=MO,FR;UNTIL=20130131T000000Z'));",
                  "err": {},
                  "uuid": "8c1b382f-9900-4863-b33e-0bad9911212c",
                  "parentUUID": "4b2e11ef-682c-4e31-94a5-e244dec80764",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should support strings",
                  "fullTitle": "ical-generator Event repeating() should support strings",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({ start: new Date() }, new calendar_1.default());\nconst rule = 'RRULE:FREQ=WEEKLY;INTERVAL=5;BYDAY=MO,FR;UNTIL=20130131T000000Z';\ne.repeating(rule);\nconst result = e.repeating();\nassert_1.default.deepStrictEqual(result, rule);\nassert_1.default.ok(e.toString().includes('RRULE:FREQ=WEEKLY;INTERVAL=5;BYDAY=MO,FR;UNTIL=20130131T000000Z'));",
                  "err": {},
                  "uuid": "9fd486c6-3473-4c32-b5cf-0b35326a2471",
                  "parentUUID": "4b2e11ef-682c-4e31-94a5-e244dec80764",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a06d9821-3d1c-4513-b2ed-b0e3279b2b04",
                "1491679d-43d5-4f67-b48a-01b00f2dc50c",
                "8e13aef3-9b69-45f6-8d04-978c9f314673",
                "27f251ae-b98d-4c34-bb42-25b60b9d85d4",
                "9288cef1-974c-487e-9482-3de58d7ee8f2",
                "8a8ecc36-0383-420d-a8f3-ba40bd2c51d5",
                "ed8b18a5-5c01-471e-ab21-f3306d5531f6",
                "af1dd71f-f8d3-4127-86ce-3ba7cd9c26ca",
                "bedf7fca-c5e1-4433-afa4-d534ca290c21",
                "d0fdc301-9fcc-47a8-9795-b78eb5b295e2",
                "970fbe4d-4f95-420a-8ca1-44a625b8f1ef",
                "80f2dfaf-a965-4777-a33e-8f6929cb32fc",
                "4a64a49d-02b8-4514-9483-f155f0926647",
                "4223743d-f050-4ee7-afc6-45f4fcd2812d",
                "511c285a-911b-4938-a4ec-eb094df86f8d",
                "ce9534b9-fd80-43b0-8486-416a92d2180f",
                "cffc1173-76cd-4b05-8228-540b83d562a6",
                "29888c57-7f99-400b-96e5-46caea9cbf0a",
                "f988e955-f7b5-4e97-aee7-831103129cfb",
                "7b1eab4d-59ac-436c-b3ae-2e6150ee3596",
                "9035a3e8-a9c8-4ab4-aa61-85487cb59992",
                "207f735b-3857-44b3-96cb-191f53fd6af7",
                "a636d76f-5768-414b-88c2-06a1b623206a",
                "7d418604-0f9e-4a16-8f76-bbb660a84164",
                "e363fa86-d791-4a72-8b4f-ef3a6b5f329e",
                "ee4f5d5d-464a-4f12-ae1a-1b9d419f3f1b",
                "3922c239-b43a-404f-a73f-44f6dde8705a",
                "3a93a94e-0aca-4777-92ed-f91cb98a421d",
                "942cdbe5-9b01-4c23-8dce-3ef3bbd80357",
                "a8d93a7d-eb13-4386-bc55-f89e3e60c67f",
                "8c1b382f-9900-4863-b33e-0bad9911212c",
                "9fd486c6-3473-4c32-b5cf-0b35326a2471"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "1bd6c45d-f268-4475-a723-751ec7ee0cd1",
              "title": "summary()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/event.ts",
              "file": "/test/event.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Event summary() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\nassert_1.default.strictEqual(e.summary(), '');\ne.summary('Testevent');\nassert_1.default.strictEqual(e.summary(), 'Testevent');",
                  "err": {},
                  "uuid": "6cf4fe63-6939-402e-abab-7eebf6b1c302",
                  "parentUUID": "1bd6c45d-f268-4475-a723-751ec7ee0cd1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Event summary() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\nassert_1.default.deepStrictEqual(e, e.summary(''));\nassert_1.default.deepStrictEqual(e, e.summary('Testevent'));",
                  "err": {},
                  "uuid": "48222bc2-3e1b-41a9-9fd2-dc34e8eafdf3",
                  "parentUUID": "1bd6c45d-f268-4475-a723-751ec7ee0cd1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should update summary",
                  "fullTitle": "ical-generator Event summary() should update summary",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({\n    start: moment_timezone_1.default(),\n    summary: 'Example Event'\n}, new calendar_1.default());\nevent.summary('Example Event II');\nassert_1.default.strictEqual(event.summary(), 'Example Event II');\nevent.summary('');\nassert_1.default.strictEqual(event.summary(), '');",
                  "err": {},
                  "uuid": "9854ee72-39bb-442c-b27c-afb75aeb7a3a",
                  "parentUUID": "1bd6c45d-f268-4475-a723-751ec7ee0cd1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6cf4fe63-6939-402e-abab-7eebf6b1c302",
                "48222bc2-3e1b-41a9-9fd2-dc34e8eafdf3",
                "9854ee72-39bb-442c-b27c-afb75aeb7a3a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "38601f13-b9e1-4686-89fd-d3c18c2d59bf",
              "title": "location()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/event.ts",
              "file": "/test/event.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getter should return value (string)",
                  "fullTitle": "ical-generator Event location() getter should return value (string)",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\nassert_1.default.strictEqual(e.location(), null);\ne.location('Test Location');\nassert_1.default.deepStrictEqual(e.location(), { title: 'Test Location' });\ne.location(null);\nassert_1.default.strictEqual(e.location(), null);",
                  "err": {},
                  "uuid": "2309af3e-1cec-410c-8161-a6f59197d19c",
                  "parentUUID": "38601f13-b9e1-4686-89fd-d3c18c2d59bf",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "getter should return value (obj)",
                  "fullTitle": "ical-generator Event location() getter should return value (obj)",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _a, _b;\nconst e = new event_1.default({}, new calendar_1.default());\nassert_1.default.strictEqual(e.location(), null);\ne.location({\n    title: 'Foo',\n    geo: { lat: 44.5, lon: -3.4 }\n});\nassert_1.default.deepStrictEqual((_a = e.location()) === null || _a === void 0 ? void 0 : _a.title, 'Foo');\nassert_1.default.deepStrictEqual((_b = e.location()) === null || _b === void 0 ? void 0 : _b.geo, { lat: 44.5, lon: -3.4 });\ne.location(null);\nassert_1.default.strictEqual(e.location(), null);",
                  "err": {},
                  "uuid": "09b0b87a-fd96-4fcd-abbe-73bd1e7a7e5d",
                  "parentUUID": "38601f13-b9e1-4686-89fd-d3c18c2d59bf",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Event location() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\nassert_1.default.deepStrictEqual(e, e.location(null));\nassert_1.default.deepStrictEqual(e, e.location('Test Location'));",
                  "err": {},
                  "uuid": "05d2e185-f08e-4fcf-a031-cd7daab77bfb",
                  "parentUUID": "38601f13-b9e1-4686-89fd-d3c18c2d59bf",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should update location",
                  "fullTitle": "ical-generator Event location() should update location",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _a;\nconst event = new event_1.default({\n    start: moment_timezone_1.default(),\n    summary: 'Example Event'\n}, new calendar_1.default());\nevent.location('Europa-Park');\nassert_1.default.strictEqual((_a = event.location()) === null || _a === void 0 ? void 0 : _a.title, 'Europa-Park');",
                  "err": {},
                  "uuid": "f7d76fb8-9670-4f76-8f29-da32466db3f6",
                  "parentUUID": "38601f13-b9e1-4686-89fd-d3c18c2d59bf",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when location is not valid",
                  "fullTitle": "ical-generator Event location() should throw error when location is not valid",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({\n    start: moment_timezone_1.default(),\n    summary: 'Example Event'\n}, new calendar_1.default());\n// @ts-ignore\nassert_1.default.throws(() => event.location({ geo: 3 }), /`location` isn't formatted correctly/i);\n// @ts-ignore\nassert_1.default.throws(() => event.location({}), /`location` isn't formatted correctly/i);",
                  "err": {},
                  "uuid": "86c21c01-2509-4d14-b5c8-2d678dbea73d",
                  "parentUUID": "38601f13-b9e1-4686-89fd-d3c18c2d59bf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2309af3e-1cec-410c-8161-a6f59197d19c",
                "09b0b87a-fd96-4fcd-abbe-73bd1e7a7e5d",
                "05d2e185-f08e-4fcf-a031-cd7daab77bfb",
                "f7d76fb8-9670-4f76-8f29-da32466db3f6",
                "86c21c01-2509-4d14-b5c8-2d678dbea73d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d8b708c7-6e9b-472e-bc81-b783806409b2",
              "title": "description()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/event.ts",
              "file": "/test/event.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Event description() getter should return value",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\nassert_1.default.strictEqual(e.description(), null);\ne.description('I don\\'t need a description. I\\'m far to awesome for descriptions…');\nassert_1.default.deepStrictEqual(e.description(), {\n    plain: 'I don\\'t need a description. I\\'m far to awesome for descriptions…'\n});\ne.description({\n    plain: 'I don\\'t need a description. I\\'m far to awesome for descriptions…',\n    html: 'I don\\'t need a description.<br />I\\'m far to awesome for descriptions…'\n});\nassert_1.default.deepStrictEqual(e.description(), {\n    plain: 'I don\\'t need a description. I\\'m far to awesome for descriptions…',\n    html: 'I don\\'t need a description.<br />I\\'m far to awesome for descriptions…'\n});\ne.description(null);\nassert_1.default.strictEqual(e.description(), null);",
                  "err": {},
                  "uuid": "9753e037-eaa6-4300-b5de-ed6c7add1f8d",
                  "parentUUID": "d8b708c7-6e9b-472e-bc81-b783806409b2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Event description() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\nassert_1.default.deepStrictEqual(e, e.description(null));\nassert_1.default.deepStrictEqual(e, e.description('I don\\'t need a description. I\\'m far to awesome for descriptions…'));",
                  "err": {},
                  "uuid": "ad343529-1c33-4500-8178-2544fd98a9f8",
                  "parentUUID": "d8b708c7-6e9b-472e-bc81-b783806409b2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change something",
                  "fullTitle": "ical-generator Event description() should change something",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({\n    start: moment_timezone_1.default(),\n    summary: 'Example Event'\n}, new calendar_1.default());\nevent.description('Well. But other people need descriptions… :/');\nassert_1.default.deepStrictEqual(event.description(), {\n    plain: 'Well. But other people need descriptions… :/'\n});\nevent.description({\n    plain: 'I am uncool text.',\n    html: '<marquee>I\\'m the best HTML tag in this universe!</marquee>'\n});\nassert_1.default.ok(event.toString().includes('<marquee>I\\'m the best HTML tag in this universe!</marquee>'));",
                  "err": {},
                  "uuid": "692b2457-2d57-422c-9c6d-b280df10e57a",
                  "parentUUID": "d8b708c7-6e9b-472e-bc81-b783806409b2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9753e037-eaa6-4300-b5de-ed6c7add1f8d",
                "ad343529-1c33-4500-8178-2544fd98a9f8",
                "692b2457-2d57-422c-9c6d-b280df10e57a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5845d189-862b-4903-8fb2-d1419c4f7703",
              "title": "organizer()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/event.ts",
              "file": "/test/event.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Event organizer() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _a, _b, _c, _d, _e;\nconst e = new event_1.default({}, new calendar_1.default());\nassert_1.default.strictEqual(e.organizer(), null);\ne.organizer(null);\nassert_1.default.strictEqual(e.organizer(), null);\ne.organizer({ name: 'Sebastian Pekarek', email: 'mail@example.com' });\nassert_1.default.strictEqual('Sebastian Pekarek', (_a = e.organizer()) === null || _a === void 0 ? void 0 : _a.name);\nassert_1.default.strictEqual('mail@example.com', (_b = e.organizer()) === null || _b === void 0 ? void 0 : _b.email);\ne.organizer({ name: 'Sebastian Pekarek', email: 'mail@example.com', mailto: 'mail2@example2.com' });\nassert_1.default.strictEqual('Sebastian Pekarek', (_c = e.organizer()) === null || _c === void 0 ? void 0 : _c.name);\nassert_1.default.strictEqual('mail@example.com', (_d = e.organizer()) === null || _d === void 0 ? void 0 : _d.email);\nassert_1.default.strictEqual('mail2@example2.com', (_e = e.organizer()) === null || _e === void 0 ? void 0 : _e.mailto);",
                  "err": {},
                  "uuid": "9d3aeb36-8a26-43fd-8305-c825db1a05b7",
                  "parentUUID": "5845d189-862b-4903-8fb2-d1419c4f7703",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Event organizer() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\nassert_1.default.deepStrictEqual(e, e.organizer(null));\nassert_1.default.deepStrictEqual(e, e.organizer('Sebastian Pekarek <mail@example.com>'));",
                  "err": {},
                  "uuid": "6ee97c60-ff1f-4e83-9bab-55f2bf019350",
                  "parentUUID": "5845d189-862b-4903-8fb2-d1419c4f7703",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should work with objects",
                  "fullTitle": "ical-generator Event organizer() should work with objects",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({\n    start: moment_timezone_1.default(),\n    summary: 'Example Event'\n}, new calendar_1.default());\nevent.organizer({ name: 'Sebastian Pekarek', email: 'mail@example.com' });\nassert_1.default.deepStrictEqual(event.organizer(), {\n    name: 'Sebastian Pekarek',\n    email: 'mail@example.com',\n    mailto: undefined\n});\nevent.organizer({ name: 'Sebastian Pekarek', email: 'mail@example.com', mailto: 'mail2@example2.com' });\nassert_1.default.deepStrictEqual(event.organizer(), {\n    name: 'Sebastian Pekarek',\n    email: 'mail@example.com',\n    mailto: 'mail2@example2.com'\n});",
                  "err": {},
                  "uuid": "a08b2a4c-0934-4a8a-a818-9e76f79318fb",
                  "parentUUID": "5845d189-862b-4903-8fb2-d1419c4f7703",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should work with valid strings",
                  "fullTitle": "ical-generator Event organizer() should work with valid strings",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({\n    start: moment_timezone_1.default(),\n    summary: 'Example Event'\n}, new calendar_1.default());\nevent.organizer('Sebastian Pekarek <mail@example.com>');\nassert_1.default.deepStrictEqual(event.organizer(), { name: 'Sebastian Pekarek', email: 'mail@example.com' });",
                  "err": {},
                  "uuid": "3ab2720c-0813-4d40-844e-77bce15048da",
                  "parentUUID": "5845d189-862b-4903-8fb2-d1419c4f7703",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when string misformated",
                  "fullTitle": "ical-generator Event organizer() should throw error when string misformated",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\nassert_1.default.throws(function () {\n    e.organizer('foo bar');\n}, /`organizer`/);",
                  "err": {},
                  "uuid": "ff4c2c00-8c17-441a-8775-5f2c138a7986",
                  "parentUUID": "5845d189-862b-4903-8fb2-d1419c4f7703",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when object misses data",
                  "fullTitle": "ical-generator Event organizer() should throw error when object misses data",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\nassert_1.default.throws(function () {\n    // @ts-ignore\n    e.organizer({ email: 'foo' });\n}, /`organizer\\.name`/);",
                  "err": {},
                  "uuid": "a1f826eb-d918-4133-bca2-b47498b2b604",
                  "parentUUID": "5845d189-862b-4903-8fb2-d1419c4f7703",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when unknown format",
                  "fullTitle": "ical-generator Event organizer() should throw error when unknown format",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\nassert_1.default.throws(function () {\n    // @ts-ignore\n    e.organizer(Infinity);\n}, /`organizer`/);\nassert_1.default.throws(function () {\n    // @ts-ignore\n    e.organizer(NaN);\n}, /`organizer`/);",
                  "err": {},
                  "uuid": "553d3e0b-c533-455d-88f7-20460fb4656f",
                  "parentUUID": "5845d189-862b-4903-8fb2-d1419c4f7703",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should work without an email",
                  "fullTitle": "ical-generator Event organizer() should work without an email",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({\n    start: moment_timezone_1.default(),\n    summary: 'Example Event'\n}, new calendar_1.default());\nevent.organizer({ name: 'Sebastian Pekarek' });\nassert_1.default.deepStrictEqual(event.organizer(), {\n    name: 'Sebastian Pekarek',\n    email: undefined,\n    mailto: undefined\n});",
                  "err": {},
                  "uuid": "33c45a36-560e-4917-8cf9-d99e21ab4fcf",
                  "parentUUID": "5845d189-862b-4903-8fb2-d1419c4f7703",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9d3aeb36-8a26-43fd-8305-c825db1a05b7",
                "6ee97c60-ff1f-4e83-9bab-55f2bf019350",
                "a08b2a4c-0934-4a8a-a818-9e76f79318fb",
                "3ab2720c-0813-4d40-844e-77bce15048da",
                "ff4c2c00-8c17-441a-8775-5f2c138a7986",
                "a1f826eb-d918-4133-bca2-b47498b2b604",
                "553d3e0b-c533-455d-88f7-20460fb4656f",
                "33c45a36-560e-4917-8cf9-d99e21ab4fcf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f9a2c80b-3d4d-4a20-83ca-f75073f38015",
              "title": "createAttendee()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/event.ts",
              "file": "/test/event.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "if Attendee passed, it should add and return it",
                  "fullTitle": "ical-generator Event createAttendee() if Attendee passed, it should add and return it",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nconst attendee = new attendee_1.default({}, event);\nassert_1.default.strictEqual(event.createAttendee(attendee), attendee, 'createAttendee returns attendee');\nassert_1.default.deepStrictEqual(event.attendees()[0], attendee, 'attendee pushed');",
                  "err": {},
                  "uuid": "d94cba6b-8e79-4fbe-b0a1-1040340ab5a3",
                  "parentUUID": "f9a2c80b-3d4d-4a20-83ca-f75073f38015",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return a ICalAttendee instance",
                  "fullTitle": "ical-generator Event createAttendee() should return a ICalAttendee instance",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nassert_1.default.ok(event.createAttendee({}) instanceof attendee_1.default);\nassert_1.default.strictEqual(event.attendees.length, 1, 'attendee pushed');",
                  "err": {},
                  "uuid": "5ee58cd5-a886-4a86-a478-9c9e2ff3d952",
                  "parentUUID": "f9a2c80b-3d4d-4a20-83ca-f75073f38015",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should accept string",
                  "fullTitle": "ical-generator Event createAttendee() should accept string",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nconst attendee = event.createAttendee('Zac <zac@example.com>');\nassert_1.default.strictEqual(attendee.name(), 'Zac');\nassert_1.default.strictEqual(attendee.email(), 'zac@example.com');\nassert_1.default.strictEqual(event.attendees().length, 1, 'attendee pushed');",
                  "err": {},
                  "uuid": "25ff45fc-2eaa-432a-a2fc-89571e9abf49",
                  "parentUUID": "f9a2c80b-3d4d-4a20-83ca-f75073f38015",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when string misformated",
                  "fullTitle": "ical-generator Event createAttendee() should throw error when string misformated",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\nassert_1.default.throws(function () {\n    e.createAttendee('foo bar');\n}, /isn't formated correctly/);",
                  "err": {},
                  "uuid": "0e55fa3b-fb5d-4308-9ee0-c3272945b3a8",
                  "parentUUID": "f9a2c80b-3d4d-4a20-83ca-f75073f38015",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should accept object",
                  "fullTitle": "ical-generator Event createAttendee() should accept object",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nconst attendee = event.createAttendee({ name: 'Zac', email: 'zac@example.com' });\nassert_1.default.strictEqual(attendee.name(), 'Zac');\nassert_1.default.strictEqual(attendee.email(), 'zac@example.com');\nassert_1.default.strictEqual(event.attendees().length, 1, 'attendee pushed');",
                  "err": {},
                  "uuid": "6997202f-8244-4f3b-b653-5b9f0e58db44",
                  "parentUUID": "f9a2c80b-3d4d-4a20-83ca-f75073f38015",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d94cba6b-8e79-4fbe-b0a1-1040340ab5a3",
                "5ee58cd5-a886-4a86-a478-9c9e2ff3d952",
                "25ff45fc-2eaa-432a-a2fc-89571e9abf49",
                "0e55fa3b-fb5d-4308-9ee0-c3272945b3a8",
                "6997202f-8244-4f3b-b653-5b9f0e58db44"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "03f99780-d478-4b2f-bba6-5d33899f6fdf",
              "title": "attendees()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/event.ts",
              "file": "/test/event.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getter should return an array of attendees…",
                  "fullTitle": "ical-generator Event attendees() getter should return an array of attendees…",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nassert_1.default.strictEqual(event.attendees().length, 0);\nconst attendee = event.createAttendee();\nassert_1.default.strictEqual(event.attendees().length, 1);\nassert_1.default.deepStrictEqual(event.attendees()[0], attendee);",
                  "err": {},
                  "uuid": "291884ae-e55b-481c-ad96-7a193c5f5933",
                  "parentUUID": "03f99780-d478-4b2f-bba6-5d33899f6fdf",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should add attendees and return this",
                  "fullTitle": "ical-generator Event attendees() setter should add attendees and return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nconst foo = event.attendees([{ name: 'Person A' }, { name: 'Person B' }]);\nassert_1.default.strictEqual(event.attendees().length, 2);\nassert_1.default.deepStrictEqual(foo, event);",
                  "err": {},
                  "uuid": "9d9080e2-e8f7-4ebb-91eb-c3fb3c76c07e",
                  "parentUUID": "03f99780-d478-4b2f-bba6-5d33899f6fdf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "291884ae-e55b-481c-ad96-7a193c5f5933",
                "9d9080e2-e8f7-4ebb-91eb-c3fb3c76c07e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "0be83159-8045-4b57-ae06-15ac3aaa7198",
              "title": "createAlarm()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/event.ts",
              "file": "/test/event.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a ICalAlarm instance",
                  "fullTitle": "ical-generator Event createAlarm() should return a ICalAlarm instance",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nassert_1.default.ok(event.createAlarm() instanceof alarm_1.default);",
                  "err": {},
                  "uuid": "52530752-52ce-48a6-a5b4-4ad28138fa50",
                  "parentUUID": "0be83159-8045-4b57-ae06-15ac3aaa7198",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should pass data to instance",
                  "fullTitle": "ical-generator Event createAlarm() should pass data to instance",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nconst alarm = event.createAlarm({ type: alarm_1.ICalAlarmType.audio });\nassert_1.default.strictEqual(alarm.type(), 'audio');",
                  "err": {},
                  "uuid": "36d2f411-97b2-429c-9f31-a68c905f4d98",
                  "parentUUID": "0be83159-8045-4b57-ae06-15ac3aaa7198",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "52530752-52ce-48a6-a5b4-4ad28138fa50",
                "36d2f411-97b2-429c-9f31-a68c905f4d98"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "6554727d-6825-48ec-a79e-c5841ff722c8",
              "title": "alarms()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/event.ts",
              "file": "/test/event.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getter should return an array of alarms…",
                  "fullTitle": "ical-generator Event alarms() getter should return an array of alarms…",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nassert_1.default.strictEqual(event.alarms().length, 0);\nconst alarm = event.createAlarm();\nassert_1.default.strictEqual(event.alarms().length, 1);\nassert_1.default.deepStrictEqual(event.alarms()[0], alarm);",
                  "err": {},
                  "uuid": "ecef19af-8f70-4e31-8fb5-3ce4c9554608",
                  "parentUUID": "6554727d-6825-48ec-a79e-c5841ff722c8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should add alarms and return this",
                  "fullTitle": "ical-generator Event alarms() setter should add alarms and return this",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nconst foo = event.alarms([\n    { type: alarm_1.ICalAlarmType.audio },\n    { type: alarm_1.ICalAlarmType.display }\n]);\nassert_1.default.strictEqual(event.alarms().length, 2);\nassert_1.default.deepStrictEqual(foo, event);",
                  "err": {},
                  "uuid": "6c6eab81-2e59-41a4-942f-5482a0c95985",
                  "parentUUID": "6554727d-6825-48ec-a79e-c5841ff722c8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ecef19af-8f70-4e31-8fb5-3ce4c9554608",
                "6c6eab81-2e59-41a4-942f-5482a0c95985"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "bfa3ea50-672a-4c87-8e40-e0c0ff7e7604",
              "title": "createCategory()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/event.ts",
              "file": "/test/event.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a ICalCategory instance",
                  "fullTitle": "ical-generator Event createCategory() should return a ICalCategory instance",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nassert_1.default.ok(event.createCategory() instanceof category_1.default);",
                  "err": {},
                  "uuid": "956404d6-d385-4212-80f4-367b6e775345",
                  "parentUUID": "bfa3ea50-672a-4c87-8e40-e0c0ff7e7604",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should pass data to instance",
                  "fullTitle": "ical-generator Event createCategory() should pass data to instance",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nconst category = event.createCategory({ name: 'foo' });\nassert_1.default.strictEqual(category.name(), 'foo');",
                  "err": {},
                  "uuid": "b38d0548-674b-4244-b680-247e29a057e7",
                  "parentUUID": "bfa3ea50-672a-4c87-8e40-e0c0ff7e7604",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "956404d6-d385-4212-80f4-367b6e775345",
                "b38d0548-674b-4244-b680-247e29a057e7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e7a9d994-dcef-4e5c-b820-8f541f42bcaa",
              "title": "categories()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/event.ts",
              "file": "/test/event.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getter should return an array of categories…",
                  "fullTitle": "ical-generator Event categories() getter should return an array of categories…",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nassert_1.default.strictEqual(event.categories().length, 0);\nconst category = event.createCategory();\nassert_1.default.strictEqual(event.categories().length, 1);\nassert_1.default.deepStrictEqual(event.categories()[0], category);",
                  "err": {},
                  "uuid": "c6728c15-aba3-4b37-b64a-07ea6a0fb8d1",
                  "parentUUID": "e7a9d994-dcef-4e5c-b820-8f541f42bcaa",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should add category and return this",
                  "fullTitle": "ical-generator Event categories() setter should add category and return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nconst foo = event.categories([\n    { name: 'foo' },\n    { name: 'bar' }\n]);\nassert_1.default.strictEqual(event.categories().length, 2);\nassert_1.default.deepStrictEqual(foo, event);",
                  "err": {},
                  "uuid": "ef19c7e6-3812-40b1-866f-c2080a55d294",
                  "parentUUID": "e7a9d994-dcef-4e5c-b820-8f541f42bcaa",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c6728c15-aba3-4b37-b64a-07ea6a0fb8d1",
                "ef19c7e6-3812-40b1-866f-c2080a55d294"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ddcf4402-08a9-4149-8443-a1db1a6da6eb",
              "title": "status()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/event.ts",
              "file": "/test/event.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Event status() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nassert_1.default.strictEqual(event.status(), null);\nevent.status(event_1.ICalEventStatus.CONFIRMED);\nassert_1.default.strictEqual(event.status(), 'CONFIRMED');\nevent.status(null);\nassert_1.default.strictEqual(event.status(), null);",
                  "err": {},
                  "uuid": "142cfa58-a2cd-41f6-8f9a-03b9df219ccd",
                  "parentUUID": "ddcf4402-08a9-4149-8443-a1db1a6da6eb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Event status() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\nassert_1.default.deepStrictEqual(e, e.status(null));\nassert_1.default.deepStrictEqual(e, e.status(event_1.ICalEventStatus.CONFIRMED));",
                  "err": {},
                  "uuid": "fe9f834f-c01f-447d-9eef-beda95d94396",
                  "parentUUID": "ddcf4402-08a9-4149-8443-a1db1a6da6eb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should allow setting null",
                  "fullTitle": "ical-generator Event status() setter should allow setting null",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\ne.status(event_1.ICalEventStatus.CONFIRMED);\ne.status(null);\nassert_1.default.strictEqual(e.status(), null);",
                  "err": {},
                  "uuid": "8ab3b9ae-2d46-4eef-8bd4-980cd41ff219",
                  "parentUUID": "ddcf4402-08a9-4149-8443-a1db1a6da6eb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should allow setting valid value",
                  "fullTitle": "ical-generator Event status() setter should allow setting valid value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\ne.status(event_1.ICalEventStatus.CONFIRMED);\nassert_1.default.strictEqual(e.status(), 'CONFIRMED');\nassert_1.default.strictEqual(e.status(), event_1.ICalEventStatus.CONFIRMED);",
                  "err": {},
                  "uuid": "0c7dfd95-48af-451d-b3d8-d0b4869aebff",
                  "parentUUID": "ddcf4402-08a9-4149-8443-a1db1a6da6eb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when method not allowed",
                  "fullTitle": "ical-generator Event status() should throw error when method not allowed",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\nassert_1.default.throws(function () {\n    // @ts-ignore\n    e.status('COOKING');\n}, /Input must be one of the following: CONFIRMED, TENTATIVE, CANCELLED/);\nassert_1.default.throws(function () {\n    // @ts-ignore\n    e.status(Infinity);\n}, /Input must be one of the following: CONFIRMED, TENTATIVE, CANCELLED/);\nassert_1.default.throws(function () {\n    // @ts-ignore\n    e.status(NaN);\n}, /Input must be one of the following: CONFIRMED, TENTATIVE, CANCELLED/);\nassert_1.default.throws(function () {\n    // @ts-ignore\n    e.status(-1);\n}, /Input must be one of the following: CONFIRMED, TENTATIVE, CANCELLED/);",
                  "err": {},
                  "uuid": "ff0f381d-75f1-416e-8ed4-3aa122a6f2cc",
                  "parentUUID": "ddcf4402-08a9-4149-8443-a1db1a6da6eb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "142cfa58-a2cd-41f6-8f9a-03b9df219ccd",
                "fe9f834f-c01f-447d-9eef-beda95d94396",
                "8ab3b9ae-2d46-4eef-8bd4-980cd41ff219",
                "0c7dfd95-48af-451d-b3d8-d0b4869aebff",
                "ff0f381d-75f1-416e-8ed4-3aa122a6f2cc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "810698f6-db0c-4746-9bad-88eb4e5df6f0",
              "title": "busystatus()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/event.ts",
              "file": "/test/event.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Event busystatus() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nassert_1.default.strictEqual(event.busystatus(), null);\nevent.busystatus(event_1.ICalEventBusyStatus.BUSY);\nassert_1.default.strictEqual(event.busystatus(), 'BUSY');\nevent.busystatus(null);\nassert_1.default.strictEqual(event.busystatus(), null);",
                  "err": {},
                  "uuid": "2543d350-d0fb-4612-8e2f-f51ae7891197",
                  "parentUUID": "810698f6-db0c-4746-9bad-88eb4e5df6f0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Event busystatus() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\nassert_1.default.deepStrictEqual(e, e.busystatus(null));\nassert_1.default.deepStrictEqual(e, e.busystatus(event_1.ICalEventBusyStatus.BUSY));",
                  "err": {},
                  "uuid": "c50109a1-e240-4822-94b3-c410867703c1",
                  "parentUUID": "810698f6-db0c-4746-9bad-88eb4e5df6f0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should allow setting null",
                  "fullTitle": "ical-generator Event busystatus() setter should allow setting null",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\ne.busystatus(event_1.ICalEventBusyStatus.BUSY);\ne.busystatus(null);\nassert_1.default.strictEqual(e.busystatus(), null);",
                  "err": {},
                  "uuid": "7fe8377d-3371-4246-87d6-b2adc129e851",
                  "parentUUID": "810698f6-db0c-4746-9bad-88eb4e5df6f0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should allow setting valid value",
                  "fullTitle": "ical-generator Event busystatus() setter should allow setting valid value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\ne.busystatus(event_1.ICalEventBusyStatus.BUSY);\nassert_1.default.strictEqual(e.busystatus(), 'BUSY');",
                  "err": {},
                  "uuid": "4a913722-c7af-4ebc-befe-f33c66b05f76",
                  "parentUUID": "810698f6-db0c-4746-9bad-88eb4e5df6f0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when method not allowed",
                  "fullTitle": "ical-generator Event busystatus() should throw error when method not allowed",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\nassert_1.default.throws(function () {\n    // @ts-ignore\n    e.busystatus('COOKING');\n}, /FREE, TENTATIVE, BUSY, OOF/);\nassert_1.default.throws(function () {\n    // @ts-ignore\n    e.busystatus(Infinity);\n}, /FREE, TENTATIVE, BUSY, OOF/);\nassert_1.default.throws(function () {\n    // @ts-ignore\n    e.busystatus(NaN);\n}, /FREE, TENTATIVE, BUSY, OOF/);\nassert_1.default.throws(function () {\n    // @ts-ignore\n    e.busystatus(-1);\n}, /FREE, TENTATIVE, BUSY, OOF/);",
                  "err": {},
                  "uuid": "db872871-98ab-47af-8d55-ecbd7c26900c",
                  "parentUUID": "810698f6-db0c-4746-9bad-88eb4e5df6f0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2543d350-d0fb-4612-8e2f-f51ae7891197",
                "c50109a1-e240-4822-94b3-c410867703c1",
                "7fe8377d-3371-4246-87d6-b2adc129e851",
                "4a913722-c7af-4ebc-befe-f33c66b05f76",
                "db872871-98ab-47af-8d55-ecbd7c26900c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d205dcd9-c40f-460b-8d41-f823cae3f8c5",
              "title": "priority()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/event.ts",
              "file": "/test/event.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Event priority() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\nassert_1.default.strictEqual(e.priority(), null);\ne.priority(5);\nassert_1.default.strictEqual(e.priority(), 5);",
                  "err": {},
                  "uuid": "659245c0-05f8-4f2e-b8c3-a562dbc3cd0a",
                  "parentUUID": "d205dcd9-c40f-460b-8d41-f823cae3f8c5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Event priority() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\nassert_1.default.deepStrictEqual(e, e.priority(null));\nassert_1.default.deepStrictEqual(e, e.priority(5));",
                  "err": {},
                  "uuid": "65db0e10-7b18-4a18-b653-aeadbf068bd3",
                  "parentUUID": "d205dcd9-c40f-460b-8d41-f823cae3f8c5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should update value",
                  "fullTitle": "ical-generator Event priority() should update value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({\n    start: moment_timezone_1.default(),\n    summary: 'Example Event'\n}, new calendar_1.default());\nevent.priority(5);\nassert_1.default.strictEqual(event.priority(), 5);\nassert_1.default.ok(event.toString().includes('PRIORITY:5'));",
                  "err": {},
                  "uuid": "8b25905d-7162-4953-825e-f0614f0db2e6",
                  "parentUUID": "d205dcd9-c40f-460b-8d41-f823cae3f8c5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "659245c0-05f8-4f2e-b8c3-a562dbc3cd0a",
                "65db0e10-7b18-4a18-b653-aeadbf068bd3",
                "8b25905d-7162-4953-825e-f0614f0db2e6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "afd055a4-a9af-4edb-bca4-367303cf4bab",
              "title": "url()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/event.ts",
              "file": "/test/event.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Event url() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\nassert_1.default.strictEqual(e.url(), null);\ne.url('http://sebbo.net/');\nassert_1.default.strictEqual(e.url(), 'http://sebbo.net/');",
                  "err": {},
                  "uuid": "5ca4b534-7622-483a-a8fe-c9d48f8d72b5",
                  "parentUUID": "afd055a4-a9af-4edb-bca4-367303cf4bab",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Event url() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\nassert_1.default.deepStrictEqual(e, e.url(null));\nassert_1.default.deepStrictEqual(e, e.url('http://sebbo.net/'));",
                  "err": {},
                  "uuid": "7f467031-02ca-4b7f-83a8-da13f682507b",
                  "parentUUID": "afd055a4-a9af-4edb-bca4-367303cf4bab",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should update value",
                  "fullTitle": "ical-generator Event url() should update value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({\n    start: moment_timezone_1.default(),\n    summary: 'Example Event'\n}, new calendar_1.default());\nevent.url('http://github.com/sebbo2002/ical-generator');\nassert_1.default.strictEqual(event.url(), 'http://github.com/sebbo2002/ical-generator');",
                  "err": {},
                  "uuid": "ac908432-1e7d-4294-8cad-59945e88cf01",
                  "parentUUID": "afd055a4-a9af-4edb-bca4-367303cf4bab",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5ca4b534-7622-483a-a8fe-c9d48f8d72b5",
                "7f467031-02ca-4b7f-83a8-da13f682507b",
                "ac908432-1e7d-4294-8cad-59945e88cf01"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "62e5fdf9-4394-436f-9e0d-687d3900618f",
              "title": "created()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/event.ts",
              "file": "/test/event.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Event created() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\nassert_1.default.deepStrictEqual(e, e.created(new Date()));",
                  "err": {},
                  "uuid": "bd1adff3-7289-425e-8739-77c03d7d9e15",
                  "parentUUID": "62e5fdf9-4394-436f-9e0d-687d3900618f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should work with moment",
                  "fullTitle": "ical-generator Event created() setter should work with moment",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\ne.created(moment_timezone_1.default());\nassert_1.default.ok(moment_timezone_1.default.isMoment(e.created()));",
                  "err": {},
                  "uuid": "4161b7e6-7cfe-43d5-a380-a43899b1c346",
                  "parentUUID": "62e5fdf9-4394-436f-9e0d-687d3900618f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should work with Date",
                  "fullTitle": "ical-generator Event created() setter should work with Date",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\ne.created(new Date());\nassert_1.default.ok(e.created() instanceof Date);",
                  "err": {},
                  "uuid": "fab7771f-3fb9-4213-b6a6-1d921faa8360",
                  "parentUUID": "62e5fdf9-4394-436f-9e0d-687d3900618f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should work with String",
                  "fullTitle": "ical-generator Event created() setter should work with String",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\ne.created(moment_timezone_1.default().toJSON());\nassert_1.default.strictEqual(typeof e.created(), 'string');",
                  "err": {},
                  "uuid": "77747176-ef83-4ae5-9c2a-b4dfd93b7de1",
                  "parentUUID": "62e5fdf9-4394-436f-9e0d-687d3900618f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should work with Number",
                  "fullTitle": "ical-generator Event created() setter should work with Number",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\ne.created(new Date());\nassert_1.default.ok(e.created() instanceof Date);",
                  "err": {},
                  "uuid": "d6e34308-1d1d-47fa-837f-cbb4f4da7d1e",
                  "parentUUID": "62e5fdf9-4394-436f-9e0d-687d3900618f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Event created() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _a;\nconst now = new Date();\nconst e = new event_1.default({}, new calendar_1.default()).created(now);\nassert_1.default.deepStrictEqual((_a = e.created()) === null || _a === void 0 ? void 0 : _a.valueOf(), now.getTime());",
                  "err": {},
                  "uuid": "93cc524d-3240-413b-b71f-705f6c1f3d7e",
                  "parentUUID": "62e5fdf9-4394-436f-9e0d-687d3900618f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when created is not a Date",
                  "fullTitle": "ical-generator Event created() should throw error when created is not a Date",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\nassert_1.default.throws(function () {\n    e.created('hallo'); // this will produce a \"Deprecation warning\", sorry 😇\n}, /`created`/);",
                  "err": {},
                  "uuid": "990c1ebf-5be8-4e57-be78-fc4cd3f26d20",
                  "parentUUID": "62e5fdf9-4394-436f-9e0d-687d3900618f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bd1adff3-7289-425e-8739-77c03d7d9e15",
                "4161b7e6-7cfe-43d5-a380-a43899b1c346",
                "fab7771f-3fb9-4213-b6a6-1d921faa8360",
                "77747176-ef83-4ae5-9c2a-b4dfd93b7de1",
                "d6e34308-1d1d-47fa-837f-cbb4f4da7d1e",
                "93cc524d-3240-413b-b71f-705f6c1f3d7e",
                "990c1ebf-5be8-4e57-be78-fc4cd3f26d20"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3a4792ef-1808-4431-8baf-532db11efd70",
              "title": "lastModified()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/event.ts",
              "file": "/test/event.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Event lastModified() setter should return this",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\nassert_1.default.deepStrictEqual(e, e.lastModified(new Date()));",
                  "err": {},
                  "uuid": "2709ab94-9b0f-488a-b47d-2bf7a078322d",
                  "parentUUID": "3a4792ef-1808-4431-8baf-532db11efd70",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should work with moment",
                  "fullTitle": "ical-generator Event lastModified() setter should work with moment",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\ne.lastModified(moment_timezone_1.default());\nassert_1.default.ok(moment_timezone_1.default.isMoment(e.lastModified()));",
                  "err": {},
                  "uuid": "fd2534d8-0114-4e42-b3e3-db97cc4912c7",
                  "parentUUID": "3a4792ef-1808-4431-8baf-532db11efd70",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should work with Date",
                  "fullTitle": "ical-generator Event lastModified() setter should work with Date",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\ne.lastModified(new Date());\nassert_1.default.ok(e.lastModified() instanceof Date);",
                  "err": {},
                  "uuid": "928464b2-d53d-4c33-ae5b-7f1715e588ab",
                  "parentUUID": "3a4792ef-1808-4431-8baf-532db11efd70",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should work with String",
                  "fullTitle": "ical-generator Event lastModified() setter should work with String",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\nconst date = moment_timezone_1.default().toJSON();\ne.lastModified(date);\nassert_1.default.strictEqual(e.lastModified(), date);",
                  "err": {},
                  "uuid": "e8e23776-b7ac-4034-9a26-a9d026d461b5",
                  "parentUUID": "3a4792ef-1808-4431-8baf-532db11efd70",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should work with Number",
                  "fullTitle": "ical-generator Event lastModified() setter should work with Number",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\ne.lastModified(new Date());\nassert_1.default.ok(e.lastModified() instanceof Date);",
                  "err": {},
                  "uuid": "0c888b98-7705-487a-b3b2-efba73c53988",
                  "parentUUID": "3a4792ef-1808-4431-8baf-532db11efd70",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Event lastModified() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _a;\nconst now = new Date();\nconst e = new event_1.default({}, new calendar_1.default()).lastModified(now);\nassert_1.default.deepStrictEqual((_a = e.lastModified()) === null || _a === void 0 ? void 0 : _a.valueOf(), now.getTime());",
                  "err": {},
                  "uuid": "3b400222-b8b6-449a-8d46-b2e4d468b62c",
                  "parentUUID": "3a4792ef-1808-4431-8baf-532db11efd70",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when lastModified is not a Date",
                  "fullTitle": "ical-generator Event lastModified() should throw error when lastModified is not a Date",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\nassert_1.default.throws(function () {\n    e.lastModified('hallo');\n}, /`lastModified`/);",
                  "err": {},
                  "uuid": "f84acf0e-3445-46e4-8f3d-bc6545f1fec0",
                  "parentUUID": "3a4792ef-1808-4431-8baf-532db11efd70",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2709ab94-9b0f-488a-b47d-2bf7a078322d",
                "fd2534d8-0114-4e42-b3e3-db97cc4912c7",
                "928464b2-d53d-4c33-ae5b-7f1715e588ab",
                "e8e23776-b7ac-4034-9a26-a9d026d461b5",
                "0c888b98-7705-487a-b3b2-efba73c53988",
                "3b400222-b8b6-449a-8d46-b2e4d468b62c",
                "f84acf0e-3445-46e4-8f3d-bc6545f1fec0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "16573ead-b6b3-4767-b006-9506195744ce",
              "title": "x()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/event.ts",
              "file": "/test/event.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is there",
                  "fullTitle": "ical-generator Event x() is there",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\nassert_1.default.deepStrictEqual(e, e.x('X-FOO', 'bar'));",
                  "err": {},
                  "uuid": "5dca5342-bb1b-4329-8619-48a1f094a5af",
                  "parentUUID": "16573ead-b6b3-4767-b006-9506195744ce",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5dca5342-bb1b-4329-8619-48a1f094a5af"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b7825256-8156-432b-b353-23bb4fce443b",
              "title": "toJSON()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/event.ts",
              "file": "/test/event.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should maybe work",
                  "fullTitle": "ical-generator Event toJSON() should maybe work",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const date = moment_timezone_1.default().add(1, 'month');\nconst event = new event_1.default({}, new calendar_1.default()).summary('foo').start(date);\nassert_1.default.strictEqual(event.toJSON().summary, 'foo', 'summary is okay');\nassert_1.default.deepStrictEqual(event.toJSON().start, date.toJSON(), 'start is okay');\nassert_1.default.strictEqual(typeof event.toJSON().start, 'string', 'start is string');",
                  "err": {},
                  "uuid": "c5197e6d-c88e-4b5d-b3ef-08bb4f862cfc",
                  "parentUUID": "b7825256-8156-432b-b353-23bb4fce443b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should stringify RRule objects",
                  "fullTitle": "ical-generator Event toJSON() should stringify RRule objects",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const date = new Date();\nconst rule = new rrule_1.RRule({\n    freq: rrule_1.RRule.WEEKLY,\n    interval: 5,\n    byweekday: [rrule_1.RRule.MO, rrule_1.RRule.FR],\n    dtstart: date,\n    until: new Date(Date.UTC(2012, 12, 31))\n});\nconst event = new event_1.default({}, new calendar_1.default()).summary('foo').start(date).repeating(rule);\nconst json = event.toJSON();\nconst before = event.toString();\nassert_1.default.ok(typeof json.repeating === 'string');\nconst event2 = new event_1.default(event.toJSON(), new calendar_1.default());\nconst after = event2.toString();\nassert_1.default.strictEqual(after, before);",
                  "err": {},
                  "uuid": "afe6d277-f60e-40e8-a49a-314536a8fbfc",
                  "parentUUID": "b7825256-8156-432b-b353-23bb4fce443b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should be compatible with constructor (type check)",
                  "fullTitle": "ical-generator Event toJSON() should be compatible with constructor (type check)",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = new event_1.default({}, new calendar_1.default());\nnew event_1.default(a.toJSON(), new calendar_1.default());",
                  "err": {},
                  "uuid": "2f3af52a-5c53-4e2d-901b-e5f6a2b01da6",
                  "parentUUID": "b7825256-8156-432b-b353-23bb4fce443b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c5197e6d-c88e-4b5d-b3ef-08bb4f862cfc",
                "afe6d277-f60e-40e8-a49a-314536a8fbfc",
                "2f3af52a-5c53-4e2d-901b-e5f6a2b01da6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "11087205-9b02-46c2-88c9-c16ad97de17a",
              "title": "transparency()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/event.ts",
              "file": "/test/event.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "getter should return value",
                  "fullTitle": "ical-generator Event transparency() getter should return value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const event = new event_1.default({}, new calendar_1.default());\nassert_1.default.strictEqual(event.transparency(), null);\nevent.transparency(event_1.ICalEventTransparency.OPAQUE);\nassert_1.default.strictEqual(event.transparency(), 'OPAQUE');\nevent.transparency(null);\nassert_1.default.strictEqual(event.transparency(), null);",
                  "err": {},
                  "uuid": "0b3514d2-5002-455d-a313-5576845ba5cf",
                  "parentUUID": "11087205-9b02-46c2-88c9-c16ad97de17a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should return this",
                  "fullTitle": "ical-generator Event transparency() setter should return this",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\nassert_1.default.deepStrictEqual(e, e.transparency(null));\nassert_1.default.deepStrictEqual(e, e.transparency(event_1.ICalEventTransparency.TRANSPARENT));",
                  "err": {},
                  "uuid": "55ccc7f4-7487-42f9-bf4b-4234eaa89381",
                  "parentUUID": "11087205-9b02-46c2-88c9-c16ad97de17a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should allow setting null",
                  "fullTitle": "ical-generator Event transparency() setter should allow setting null",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\ne.transparency(event_1.ICalEventTransparency.OPAQUE);\ne.transparency(null);\nassert_1.default.strictEqual(e.transparency(), null);",
                  "err": {},
                  "uuid": "6029bb47-dacf-44e4-94bc-d3bfbbcd1d47",
                  "parentUUID": "11087205-9b02-46c2-88c9-c16ad97de17a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "setter should allow setting valid value",
                  "fullTitle": "ical-generator Event transparency() setter should allow setting valid value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\ne.transparency(event_1.ICalEventTransparency.OPAQUE);\nassert_1.default.strictEqual(e.transparency(), 'OPAQUE');",
                  "err": {},
                  "uuid": "9dc81f06-799b-46d1-9e10-96e657b8d2f0",
                  "parentUUID": "11087205-9b02-46c2-88c9-c16ad97de17a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error when method not allowed",
                  "fullTitle": "ical-generator Event transparency() should throw error when method not allowed",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({}, new calendar_1.default());\nassert_1.default.throws(function () {\n    // @ts-ignore\n    e.transparency('COOKING');\n}, /TRANSPARENT, OPAQUE/);\nassert_1.default.throws(function () {\n    // @ts-ignore\n    e.transparency(Infinity);\n}, /TRANSPARENT, OPAQUE/);\nassert_1.default.throws(function () {\n    // @ts-ignore\n    e.transparency(-1);\n}, /TRANSPARENT, OPAQUE/);",
                  "err": {},
                  "uuid": "de6bc8cd-55a4-4420-883e-3d94b7430300",
                  "parentUUID": "11087205-9b02-46c2-88c9-c16ad97de17a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0b3514d2-5002-455d-a313-5576845ba5cf",
                "55ccc7f4-7487-42f9-bf4b-4234eaa89381",
                "6029bb47-dacf-44e4-94bc-d3bfbbcd1d47",
                "9dc81f06-799b-46d1-9e10-96e657b8d2f0",
                "de6bc8cd-55a4-4420-883e-3d94b7430300"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b185955c-ff27-465d-9ff5-b2d75c455941",
              "title": "toString()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/event.ts",
              "file": "/test/event.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "shoult throw an error without start",
                  "fullTitle": "ical-generator Event toString() shoult throw an error without start",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({\n    summary: 'Example Event'\n}, new calendar_1.default());\nassert_1.default.throws(function () {\n    e.toString();\n}, /`start`/);",
                  "err": {},
                  "uuid": "d066b5e9-7250-4faa-8587-7e082eba3b01",
                  "parentUUID": "b185955c-ff27-465d-9ff5-b2d75c455941",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should make use of escaping",
                  "fullTitle": "ical-generator Event toString() should make use of escaping",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const e = new event_1.default({\n    start: new Date(),\n    end: new Date(new Date().getTime() + 3600000),\n    summary: 'Hel\\\\\\\\lo\\nW;orl,d'\n}, new calendar_1.default());\nassert_1.default.ok(e.toString().indexOf('Hel\\\\\\\\\\\\\\\\lo\\\\nW\\\\;orl\\\\,d') > -1);",
                  "err": {},
                  "uuid": "91c7b190-64ef-42c4-a14b-81ea5363948a",
                  "parentUUID": "b185955c-ff27-465d-9ff5-b2d75c455941",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should render correct UIDs",
                  "fullTitle": "ical-generator Event toString() should render correct UIDs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\nconst event = new event_1.default({\n    id: 42,\n    start: moment_timezone_1.default(),\n    summary: ':)'\n}, cal);\nassert_1.default.ok(event.toString().indexOf('UID:42\\r') > -1);",
                  "err": {},
                  "uuid": "24b0b30a-7653-4083-99eb-fb208e8a32d7",
                  "parentUUID": "b185955c-ff27-465d-9ff5-b2d75c455941",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should include wkst only if provided",
                  "fullTitle": "ical-generator Event toString() should include wkst only if provided",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const cal = new calendar_1.default();\nlet event = new event_1.default({\n    start: moment_timezone_1.default(),\n    end: moment_timezone_1.default(),\n    repeating: {\n        freq: types_1.ICalEventRepeatingFreq.WEEKLY\n    }\n}, cal);\nassert_1.default.ok(!event.toString().includes('WKST'), 'without WKST');\nevent = new event_1.default({\n    start: moment_timezone_1.default(),\n    end: moment_timezone_1.default(),\n    repeating: {\n        freq: types_1.ICalEventRepeatingFreq.WEEKLY,\n        startOfWeek: types_1.ICalWeekday.SU\n    }\n}, cal);\nassert_1.default.ok(event.toString().includes('WKST'), 'with WKST');",
                  "err": {},
                  "uuid": "4ceb53a7-f035-4275-9f95-7e6cb621f78f",
                  "parentUUID": "b185955c-ff27-465d-9ff5-b2d75c455941",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d066b5e9-7250-4faa-8587-7e082eba3b01",
                "91c7b190-64ef-42c4-a14b-81ea5363948a",
                "24b0b30a-7653-4083-99eb-fb208e8a32d7",
                "4ceb53a7-f035-4275-9f95-7e6cb621f78f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4364a709-4a48-41e5-abc7-8a12aa24322e",
          "title": "ical-generator Index",
          "fullFile": "/home/runner/work/ical-generator/ical-generator/test/index.ts",
          "file": "/test/index.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "abcf4529-08e3-4888-ba3f-229368d4ddfa",
              "title": "default",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/index.ts",
              "file": "/test/index.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should be a function",
                  "fullTitle": "ical-generator Index default should be a function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.strictEqual(typeof src_1.default, 'function');",
                  "err": {},
                  "uuid": "2022e2b6-e663-442a-a6ce-9d34e6d083c3",
                  "parentUUID": "abcf4529-08e3-4888-ba3f-229368d4ddfa",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return a ICalCalendar",
                  "fullTitle": "ical-generator Index default should return a ICalCalendar",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.ok(src_1.default() instanceof src_1.ICalCalendar);",
                  "err": {},
                  "uuid": "653b3332-0b14-40dc-a741-ea2697cd6345",
                  "parentUUID": "abcf4529-08e3-4888-ba3f-229368d4ddfa",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2022e2b6-e663-442a-a6ce-9d34e6d083c3",
                "653b3332-0b14-40dc-a741-ea2697cd6345"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "2f59b3be-0607-4091-9ca7-a1b3750dba9b",
              "title": "Alarm",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/index.ts",
              "file": "/test/index.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should export ICalAlarm",
                  "fullTitle": "ical-generator Index Alarm should export ICalAlarm",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.ok(src_1.ICalAlarm);",
                  "err": {},
                  "uuid": "a363fc53-43e2-4cb0-ac11-586addd166a8",
                  "parentUUID": "2f59b3be-0607-4091-9ca7-a1b3750dba9b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should export ICalAlarmType",
                  "fullTitle": "ical-generator Index Alarm should export ICalAlarmType",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.ok(src_1.ICalAlarmType);",
                  "err": {},
                  "uuid": "c27a4425-06e3-49fa-adc1-f0db8e5ef00f",
                  "parentUUID": "2f59b3be-0607-4091-9ca7-a1b3750dba9b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a363fc53-43e2-4cb0-ac11-586addd166a8",
                "c27a4425-06e3-49fa-adc1-f0db8e5ef00f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "fcd2bccd-676c-4790-8ce2-87b13879fecb",
              "title": "Attendee",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/index.ts",
              "file": "/test/index.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should export ICalAttendee",
                  "fullTitle": "ical-generator Index Attendee should export ICalAttendee",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.ok(src_1.ICalAttendee);",
                  "err": {},
                  "uuid": "ef514d1b-9f7d-4574-ac41-ac9a3ad63fef",
                  "parentUUID": "fcd2bccd-676c-4790-8ce2-87b13879fecb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should export ICalAttendeeType",
                  "fullTitle": "ical-generator Index Attendee should export ICalAttendeeType",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.ok(src_1.ICalAttendeeType);",
                  "err": {},
                  "uuid": "86796ef0-9b8b-45ba-b61d-aa2bb617c44c",
                  "parentUUID": "fcd2bccd-676c-4790-8ce2-87b13879fecb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should export ICalAttendeeRole",
                  "fullTitle": "ical-generator Index Attendee should export ICalAttendeeRole",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.ok(src_1.ICalAttendeeRole);",
                  "err": {},
                  "uuid": "2b657993-9760-410c-9c63-47020c24cf3e",
                  "parentUUID": "fcd2bccd-676c-4790-8ce2-87b13879fecb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should export ICalAttendeeStatus",
                  "fullTitle": "ical-generator Index Attendee should export ICalAttendeeStatus",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.ok(src_1.ICalAttendeeStatus);",
                  "err": {},
                  "uuid": "5389b49d-fe18-44dc-8475-8e173a21a451",
                  "parentUUID": "fcd2bccd-676c-4790-8ce2-87b13879fecb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ef514d1b-9f7d-4574-ac41-ac9a3ad63fef",
                "86796ef0-9b8b-45ba-b61d-aa2bb617c44c",
                "2b657993-9760-410c-9c63-47020c24cf3e",
                "5389b49d-fe18-44dc-8475-8e173a21a451"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "48190e9c-5671-4012-98bb-5ea489c3e798",
              "title": "Calendar",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/index.ts",
              "file": "/test/index.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should export ICalCalendar",
                  "fullTitle": "ical-generator Index Calendar should export ICalCalendar",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.ok(src_1.ICalCalendar);",
                  "err": {},
                  "uuid": "51ae9340-df6f-4f78-923b-b41b59e7f47f",
                  "parentUUID": "48190e9c-5671-4012-98bb-5ea489c3e798",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should export ICalCalendarMethod",
                  "fullTitle": "ical-generator Index Calendar should export ICalCalendarMethod",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.ok(src_1.ICalCalendarMethod);",
                  "err": {},
                  "uuid": "eb1230ad-2ed9-45ef-b0f1-f07815ecb3d1",
                  "parentUUID": "48190e9c-5671-4012-98bb-5ea489c3e798",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "51ae9340-df6f-4f78-923b-b41b59e7f47f",
                "eb1230ad-2ed9-45ef-b0f1-f07815ecb3d1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e24f9aea-dd56-4378-bced-1bc93ff02cad",
              "title": "Category",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/index.ts",
              "file": "/test/index.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should export ICalCategory",
                  "fullTitle": "ical-generator Index Category should export ICalCategory",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.ok(src_1.ICalCategory);",
                  "err": {},
                  "uuid": "869e46ce-0101-4412-bd33-a68dad793f41",
                  "parentUUID": "e24f9aea-dd56-4378-bced-1bc93ff02cad",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "869e46ce-0101-4412-bd33-a68dad793f41"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d4336416-eb39-4fc0-8079-5b11697a0438",
              "title": "Event",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/index.ts",
              "file": "/test/index.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should export ICalEvent",
                  "fullTitle": "ical-generator Index Event should export ICalEvent",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.ok(src_1.ICalEvent);",
                  "err": {},
                  "uuid": "317bc9f1-e2c9-4b39-a205-6be160898cfc",
                  "parentUUID": "d4336416-eb39-4fc0-8079-5b11697a0438",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should export ICalEventStatus",
                  "fullTitle": "ical-generator Index Event should export ICalEventStatus",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.ok(src_1.ICalEventStatus);",
                  "err": {},
                  "uuid": "13400a4f-f252-4a9a-9b7e-31dff213e8ff",
                  "parentUUID": "d4336416-eb39-4fc0-8079-5b11697a0438",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should export ICalEventBusyStatus",
                  "fullTitle": "ical-generator Index Event should export ICalEventBusyStatus",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.ok(src_1.ICalEventBusyStatus);",
                  "err": {},
                  "uuid": "af5614ce-b4b2-4dbc-8886-aef8b3cbee77",
                  "parentUUID": "d4336416-eb39-4fc0-8079-5b11697a0438",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should export ICalEventTransparency",
                  "fullTitle": "ical-generator Index Event should export ICalEventTransparency",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.ok(src_1.ICalEventTransparency);",
                  "err": {},
                  "uuid": "511cabcd-b642-426e-b34a-225720e9dd34",
                  "parentUUID": "d4336416-eb39-4fc0-8079-5b11697a0438",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "317bc9f1-e2c9-4b39-a205-6be160898cfc",
                "13400a4f-f252-4a9a-9b7e-31dff213e8ff",
                "af5614ce-b4b2-4dbc-8886-aef8b3cbee77",
                "511cabcd-b642-426e-b34a-225720e9dd34"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "eeb89bf1-db86-4bf3-8a15-b9e145dcd564",
              "title": "Type",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/index.ts",
              "file": "/test/index.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should export ICalEventRepeatingFreq",
                  "fullTitle": "ical-generator Index Type should export ICalEventRepeatingFreq",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.ok(src_1.ICalEventRepeatingFreq);",
                  "err": {},
                  "uuid": "677dfd91-00ca-4851-8cff-a2e536ecb74c",
                  "parentUUID": "eeb89bf1-db86-4bf3-8a15-b9e145dcd564",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should export ICalWeekday",
                  "fullTitle": "ical-generator Index Type should export ICalWeekday",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.ok(src_1.ICalWeekday);",
                  "err": {},
                  "uuid": "774dbf18-6bf3-4cb1-98f2-dbd07e0b3181",
                  "parentUUID": "eeb89bf1-db86-4bf3-8a15-b9e145dcd564",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "677dfd91-00ca-4851-8cff-a2e536ecb74c",
                "774dbf18-6bf3-4cb1-98f2-dbd07e0b3181"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e6671c24-1b0f-4efd-8983-12c93fa97dcf",
          "title": "Issues",
          "fullFile": "/home/runner/work/ical-generator/ical-generator/test/issues.ts",
          "file": "/test/issues.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "ed2955fe-2f88-4a1b-bf7b-ddb891ce0853",
              "title": "Issue #38",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/issues.ts",
              "file": "/test/issues.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work with Europe/Berlin",
                  "fullTitle": "Issues Issue #38 should work with Europe/Berlin",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const calendar = src_1.default({\n    prodId: '//superman-industries.com//ical-generator//EN',\n    timezone: 'Europe/Berlin',\n    events: [{\n            start: moment_timezone_1.default('2016-04-30T22:00:00.000Z'),\n            summary: 'Example Event',\n            allDay: true\n        }]\n});\nconst str = calendar.toString();\nassert_1.default.ok(str.indexOf('DTSTART;VALUE=DATE:20160501') > -1);",
                  "err": {},
                  "uuid": "f96434bb-8b98-441f-b9f7-29ba6600d421",
                  "parentUUID": "ed2955fe-2f88-4a1b-bf7b-ddb891ce0853",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should work with Brazil/East",
                  "fullTitle": "Issues Issue #38 should work with Brazil/East",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const calendar = src_1.default({\n    prodId: '//superman-industries.com//ical-generator//EN',\n    timezone: 'Brazil/East',\n    events: [{\n            start: moment_timezone_1.default('Sun May 01 2016 00:00:00 GMT-3'),\n            summary: 'Example Event',\n            allDay: true\n        }]\n});\nconst str = calendar.toString();\nassert_1.default.ok(str.indexOf('DTSTART;VALUE=DATE:20160501') > -1);",
                  "err": {},
                  "uuid": "4f4f15ea-4356-4734-8133-a590fddc5dea",
                  "parentUUID": "ed2955fe-2f88-4a1b-bf7b-ddb891ce0853",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f96434bb-8b98-441f-b9f7-29ba6600d421",
                "4f4f15ea-4356-4734-8133-a590fddc5dea"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 13,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e65cd384-0415-4885-9bfd-3033470950b1",
              "title": "Issue #123",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/issues.ts",
              "file": "/test/issues.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work with repeating bySetPos",
                  "fullTitle": "Issues Issue #123 should work with repeating bySetPos",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const calendar = src_1.default({\n    prodId: '//superman-industries.com//ical-generator//EN',\n    events: [{\n            start: moment_timezone_1.default('Sun May 01 2016 00:00:00 GMT+0200 (CEST)'),\n            end: moment_timezone_1.default('Sun May 01 2016 02:00:00 GMT+0200 (CEST)'),\n            summary: 'Example Event',\n            allDay: true,\n            repeating: {\n                freq: types_1.ICalEventRepeatingFreq.MONTHLY,\n                count: 3,\n                interval: 1,\n                byDay: [types_1.ICalWeekday.SU],\n                bySetPos: 3\n            }\n        }]\n});\nconst str = calendar.toString();\nassert_1.default.ok(str.indexOf('RRULE:FREQ=MONTHLY;COUNT=3;INTERVAL=1;BYDAY=SU;BYSETPOS=3') > -1);",
                  "err": {},
                  "uuid": "973b7248-3cf2-4997-8540-6956baa6da2c",
                  "parentUUID": "e65cd384-0415-4885-9bfd-3033470950b1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should work with repeating bySetPos by taking the first elemnt of the byDay array",
                  "fullTitle": "Issues Issue #123 should work with repeating bySetPos by taking the first elemnt of the byDay array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const calendar = src_1.default({\n    prodId: '//superman-industries.com//ical-generator//EN',\n    events: [{\n            start: moment_timezone_1.default('Sun May 01 2016 00:00:00 GMT+0200 (CEST)'),\n            end: moment_timezone_1.default('Sun May 01 2016 02:00:00 GMT+0200 (CEST)'),\n            summary: 'Example Event',\n            allDay: true,\n            repeating: {\n                freq: types_1.ICalEventRepeatingFreq.MONTHLY,\n                count: 3,\n                interval: 1,\n                byDay: [types_1.ICalWeekday.MO, types_1.ICalWeekday.FR],\n                bySetPos: 3\n            }\n        }]\n});\nconst str = calendar.toString();\nassert_1.default.ok(str.indexOf('RRULE:FREQ=MONTHLY;COUNT=3;INTERVAL=1;BYDAY=MO;BYSETPOS=3') > -1);",
                  "err": {},
                  "uuid": "7308d218-3048-418d-8338-1bec26857572",
                  "parentUUID": "e65cd384-0415-4885-9bfd-3033470950b1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "973b7248-3cf2-4997-8540-6956baa6da2c",
                "7308d218-3048-418d-8338-1bec26857572"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c71e5f0b-c089-4b58-822c-29f5bd464013",
              "title": "Issue #154",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/issues.ts",
              "file": "/test/issues.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should correctly set DTSTART when using different timezone in calendar and event",
                  "fullTitle": "Issues Issue #154 it should correctly set DTSTART when using different timezone in calendar and event",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const calendar = src_1.default({\n    timezone: 'America/Buenos_Aires',\n    events: [\n        {\n            start: moment_timezone_1.default(1553219772000),\n            end: moment_timezone_1.default(1553219772000),\n            recurrenceId: moment_timezone_1.default(1553219772000),\n            timezone: 'America/La_Paz'\n        }\n    ]\n});\nconst str = calendar.toString();\nassert_1.default.ok(str.indexOf(`${prop};TZID=America/La_Paz:20190321T215612`) > -1, str);",
                  "err": {},
                  "uuid": "f188f1d6-712e-46d4-bb4f-30c2cad4bd46",
                  "parentUUID": "c71e5f0b-c089-4b58-822c-29f5bd464013",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should correctly set DTEND when using different timezone in calendar and event",
                  "fullTitle": "Issues Issue #154 it should correctly set DTEND when using different timezone in calendar and event",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const calendar = src_1.default({\n    timezone: 'America/Buenos_Aires',\n    events: [\n        {\n            start: moment_timezone_1.default(1553219772000),\n            end: moment_timezone_1.default(1553219772000),\n            recurrenceId: moment_timezone_1.default(1553219772000),\n            timezone: 'America/La_Paz'\n        }\n    ]\n});\nconst str = calendar.toString();\nassert_1.default.ok(str.indexOf(`${prop};TZID=America/La_Paz:20190321T215612`) > -1, str);",
                  "err": {},
                  "uuid": "c1168686-6510-4b27-8c7a-ffd1557187af",
                  "parentUUID": "c71e5f0b-c089-4b58-822c-29f5bd464013",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should correctly set RECURRENCE-ID when using different timezone in calendar and event",
                  "fullTitle": "Issues Issue #154 it should correctly set RECURRENCE-ID when using different timezone in calendar and event",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const calendar = src_1.default({\n    timezone: 'America/Buenos_Aires',\n    events: [\n        {\n            start: moment_timezone_1.default(1553219772000),\n            end: moment_timezone_1.default(1553219772000),\n            recurrenceId: moment_timezone_1.default(1553219772000),\n            timezone: 'America/La_Paz'\n        }\n    ]\n});\nconst str = calendar.toString();\nassert_1.default.ok(str.indexOf(`${prop};TZID=America/La_Paz:20190321T215612`) > -1, str);",
                  "err": {},
                  "uuid": "a53ee712-5767-4450-bbd8-6111cf09adfd",
                  "parentUUID": "c71e5f0b-c089-4b58-822c-29f5bd464013",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f188f1d6-712e-46d4-bb4f-30c2cad4bd46",
                "c1168686-6510-4b27-8c7a-ffd1557187af",
                "a53ee712-5767-4450-bbd8-6111cf09adfd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "785ac945-9d33-49a0-abe2-cb4e0a6314d5",
              "title": "Issue #210",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/issues.ts",
              "file": "/test/issues.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should repeat/exclude with Europe/Berlin",
                  "fullTitle": "Issues Issue #210 should repeat/exclude with Europe/Berlin",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const calendar = src_1.default({\n    prodId: '//superman-industries.com//ical-generator//EN',\n    timezone: 'Europe/Berlin',\n    events: [{\n            start: moment_timezone_1.default('2020-08-13T00:00:00+01:00'),\n            summary: 'Example Event',\n            repeating: {\n                freq: types_1.ICalEventRepeatingFreq.MONTHLY,\n                count: 12,\n                exclude: moment_timezone_1.default('2020-12-13T00:00:00+01:00')\n            }\n        }]\n});\nconst str = calendar.toString();\nassert_1.default.ok(str.indexOf('EXDATE;TZID=Europe/Berlin:20201213T000000') > -1);",
                  "err": {},
                  "uuid": "856f9205-c5aa-43f0-9f38-0b9824d02507",
                  "parentUUID": "785ac945-9d33-49a0-abe2-cb4e0a6314d5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should repeat/exclude with America/New_York",
                  "fullTitle": "Issues Issue #210 should repeat/exclude with America/New_York",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const calendar = src_1.default({\n    prodId: '//superman-industries.com//ical-generator//EN',\n    timezone: 'America/New_York',\n    events: [{\n            start: moment_timezone_1.default('2020-08-13T00:00:00-05:00'),\n            summary: 'Example Event',\n            repeating: {\n                freq: types_1.ICalEventRepeatingFreq.MONTHLY,\n                count: 12,\n                exclude: moment_timezone_1.default('2020-12-13T00:00:00-05:00')\n            }\n        }]\n});\nconst str = calendar.toString();\nassert_1.default.ok(str.indexOf('EXDATE;TZID=America/New_York:20201213T000000') > -1);",
                  "err": {},
                  "uuid": "0a8bfea0-16c6-4631-8b8e-43644f36a20c",
                  "parentUUID": "785ac945-9d33-49a0-abe2-cb4e0a6314d5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "856f9205-c5aa-43f0-9f38-0b9824d02507",
                "0a8bfea0-16c6-4631-8b8e-43644f36a20c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2df35b18-80e9-47f0-a318-361b3abdef18",
          "title": "ICalTools",
          "fullFile": "/home/runner/work/ical-generator/ical-generator/test/tools.ts",
          "file": "/test/tools.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "d19c4982-13b5-45e9-842d-10786b216886",
              "title": "formatDate()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/tools.ts",
              "file": "/test/tools.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "bd1f24de-2dd3-47ab-9a9d-0679759fe704",
                  "title": "Date / String",
                  "fullFile": "/home/runner/work/ical-generator/ical-generator/test/tools.ts",
                  "file": "/test/tools.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "timezone=0 dateonly=0 floating=0",
                      "fullTitle": "ICalTools formatDate() Date / String timezone=0 dateonly=0 floating=0",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "assert_1.default.strictEqual(tools_1.formatDate(null, '2018-07-05T18:24:00.052Z', false, false), '20180705T182400Z');",
                      "err": {},
                      "uuid": "e1662e6d-41e8-4a0a-b13f-e4f862deedc3",
                      "parentUUID": "bd1f24de-2dd3-47ab-9a9d-0679759fe704",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "timezone=0 dateonly=0 floating=1",
                      "fullTitle": "ICalTools formatDate() Date / String timezone=0 dateonly=0 floating=1",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "assert_1.default.strictEqual(tools_1.formatDate(null, '2018-07-05T18:24:00.052Z', false, true), '20180705T182400');",
                      "err": {},
                      "uuid": "edc12667-4517-41d3-80b9-f194270d03ea",
                      "parentUUID": "bd1f24de-2dd3-47ab-9a9d-0679759fe704",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "timezone=0 dateonly=1 floating=0",
                      "fullTitle": "ICalTools formatDate() Date / String timezone=0 dateonly=1 floating=0",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "assert_1.default.strictEqual(tools_1.formatDate(null, '2018-07-05T18:24:00.052Z', true, false), '20180705');",
                      "err": {},
                      "uuid": "f282dd3a-56a1-40a0-8926-af6b6f0ba3ef",
                      "parentUUID": "bd1f24de-2dd3-47ab-9a9d-0679759fe704",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "timezone=0 dateonly=1 floating=1",
                      "fullTitle": "ICalTools formatDate() Date / String timezone=0 dateonly=1 floating=1",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "assert_1.default.strictEqual(tools_1.formatDate(null, '2018-07-05T18:24:00.052Z', true, true), '20180705');",
                      "err": {},
                      "uuid": "4cb3afb4-0fe9-4fb7-a34a-8d58f7ad8817",
                      "parentUUID": "bd1f24de-2dd3-47ab-9a9d-0679759fe704",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "timezone=1 dateonly=0 floating=0",
                      "fullTitle": "ICalTools formatDate() Date / String timezone=1 dateonly=0 floating=0",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "assert_1.default.strictEqual(tools_1.formatDate('Europe/Berlin', '2018-07-05T18:24:00.052', false, false), '20180705T182400');",
                      "err": {},
                      "uuid": "8c55a2e3-ae01-4fb7-93d2-89cf6a85235a",
                      "parentUUID": "bd1f24de-2dd3-47ab-9a9d-0679759fe704",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "timezone=1 dateonly=0 floating=1",
                      "fullTitle": "ICalTools formatDate() Date / String timezone=1 dateonly=0 floating=1",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "assert_1.default.strictEqual(tools_1.formatDate('Europe/Berlin', '2018-07-05T18:24:00.052', false, true), '20180705T182400');",
                      "err": {},
                      "uuid": "4b578159-a9fa-4e66-923a-b6c482ca622a",
                      "parentUUID": "bd1f24de-2dd3-47ab-9a9d-0679759fe704",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "timezone=1 dateonly=1 floating=0",
                      "fullTitle": "ICalTools formatDate() Date / String timezone=1 dateonly=1 floating=0",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "assert_1.default.strictEqual(tools_1.formatDate('Europe/Berlin', '2018-07-05T18:24:00.052', true, false), '20180705');",
                      "err": {},
                      "uuid": "1c044cd3-c433-4cb0-a3bc-002385b3a45e",
                      "parentUUID": "bd1f24de-2dd3-47ab-9a9d-0679759fe704",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "timezone=1 dateonly=1 floating=1",
                      "fullTitle": "ICalTools formatDate() Date / String timezone=1 dateonly=1 floating=1",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "assert_1.default.strictEqual(tools_1.formatDate('Europe/Berlin', '2018-07-05T18:24:00.052', true, true), '20180705');",
                      "err": {},
                      "uuid": "2f404be5-9ced-47c7-967a-c46312fb3e68",
                      "parentUUID": "bd1f24de-2dd3-47ab-9a9d-0679759fe704",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e1662e6d-41e8-4a0a-b13f-e4f862deedc3",
                    "edc12667-4517-41d3-80b9-f194270d03ea",
                    "f282dd3a-56a1-40a0-8926-af6b6f0ba3ef",
                    "4cb3afb4-0fe9-4fb7-a34a-8d58f7ad8817",
                    "8c55a2e3-ae01-4fb7-93d2-89cf6a85235a",
                    "4b578159-a9fa-4e66-923a-b6c482ca622a",
                    "1c044cd3-c433-4cb0-a3bc-002385b3a45e",
                    "2f404be5-9ced-47c7-967a-c46312fb3e68"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "a0f90424-f206-43bd-b64e-4f12a8491f0c",
                  "title": "moment.js",
                  "fullFile": "/home/runner/work/ical-generator/ical-generator/test/tools.ts",
                  "file": "/test/tools.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should work without setting a timezone",
                      "fullTitle": "ICalTools formatDate() moment.js should work without setting a timezone",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "assert_1.default.strictEqual(tools_1.formatDate(null, moment_timezone_1.default('2018-07-05T18:24:00.052Z'), false, false), '20180705T182400Z');",
                      "err": {},
                      "uuid": "9b745d3e-69d8-462a-890d-894ee9252530",
                      "parentUUID": "a0f90424-f206-43bd-b64e-4f12a8491f0c",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should work with timezone in event / calendar (with moment-timezone)",
                      "fullTitle": "ICalTools formatDate() moment.js should work with timezone in event / calendar (with moment-timezone)",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "assert_1.default.strictEqual(tools_1.formatDate('Canada/Saskatchewan', moment_timezone_1.default('2018-07-05T18:24:00.052Z'), false, false), '20180705T122400');",
                      "err": {},
                      "uuid": "bba7b168-33a5-4743-a909-d3f4536b4d2f",
                      "parentUUID": "a0f90424-f206-43bd-b64e-4f12a8491f0c",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should work with floating flag",
                      "fullTitle": "ICalTools formatDate() moment.js should work with floating flag",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "assert_1.default.strictEqual(tools_1.formatDate(null, moment_timezone_1.default('2018-07-05T18:24:00.052'), false, true), '20180705T182400');",
                      "err": {},
                      "uuid": "b6bf3690-c259-48f2-b94e-7b8848552aab",
                      "parentUUID": "a0f90424-f206-43bd-b64e-4f12a8491f0c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9b745d3e-69d8-462a-890d-894ee9252530",
                    "bba7b168-33a5-4743-a909-d3f4536b4d2f",
                    "b6bf3690-c259-48f2-b94e-7b8848552aab"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "d115a784-c694-4f62-ab43-4c817292dd00",
                  "title": "Luxon",
                  "fullFile": "/home/runner/work/ical-generator/ical-generator/test/tools.ts",
                  "file": "/test/tools.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should work without setting a timezone",
                      "fullTitle": "ICalTools formatDate() Luxon should work without setting a timezone",
                      "timedOut": false,
                      "duration": 15,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "assert_1.default.strictEqual(tools_1.formatDate(null, luxon_1.DateTime.fromISO('2018-07-05T18:24:00.052Z'), false, false), '20180705T182400Z');",
                      "err": {},
                      "uuid": "4ce5dd8f-95c8-4547-a969-f1420aa6e99d",
                      "parentUUID": "d115a784-c694-4f62-ab43-4c817292dd00",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should work with timezone in event / calendar (with moment-timezone)",
                      "fullTitle": "ICalTools formatDate() Luxon should work with timezone in event / calendar (with moment-timezone)",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "assert_1.default.strictEqual(tools_1.formatDate('Canada/Saskatchewan', luxon_1.DateTime.fromISO('2018-07-05T18:24:00.052Z'), false, false), '20180705T122400');",
                      "err": {},
                      "uuid": "d2d7be97-3186-45bb-a1f4-df57d8e5ea0b",
                      "parentUUID": "d115a784-c694-4f62-ab43-4c817292dd00",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should work with floating flag",
                      "fullTitle": "ICalTools formatDate() Luxon should work with floating flag",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "assert_1.default.strictEqual(tools_1.formatDate(null, luxon_1.DateTime.fromISO('2018-07-05T18:24:00.052'), false, true), '20180705T182400');",
                      "err": {},
                      "uuid": "1c5cb683-c00f-46d9-894a-7c0fe2fbca6f",
                      "parentUUID": "d115a784-c694-4f62-ab43-4c817292dd00",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "4ce5dd8f-95c8-4547-a969-f1420aa6e99d",
                    "d2d7be97-3186-45bb-a1f4-df57d8e5ea0b",
                    "1c5cb683-c00f-46d9-894a-7c0fe2fbca6f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 17,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "d7b27490-4c2a-4061-85e8-918b3235f161",
                  "title": "Day.js",
                  "fullFile": "/home/runner/work/ical-generator/ical-generator/test/tools.ts",
                  "file": "/test/tools.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should work without setting a timezone",
                      "fullTitle": "ICalTools formatDate() Day.js should work without setting a timezone",
                      "timedOut": false,
                      "duration": 3,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "assert_1.default.strictEqual(tools_1.formatDate(null, dayjs_1.default('2018-07-05T18:24:00.052Z'), false, false), '20180705T182400Z');",
                      "err": {},
                      "uuid": "9dcfa4eb-54fc-47e1-99ee-984cd941a4f7",
                      "parentUUID": "d7b27490-4c2a-4061-85e8-918b3235f161",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should work with timezone in event / calendar (with moment-timezone)",
                      "fullTitle": "ICalTools formatDate() Day.js should work with timezone in event / calendar (with moment-timezone)",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "assert_1.default.strictEqual(tools_1.formatDate('Canada/Saskatchewan', dayjs_1.default('2018-07-05T18:24:00.052Z'), false, false), '20180705T122400');",
                      "err": {},
                      "uuid": "73424659-f616-4c41-804e-0bd0dffff73f",
                      "parentUUID": "d7b27490-4c2a-4061-85e8-918b3235f161",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should work with floating flag",
                      "fullTitle": "ICalTools formatDate() Day.js should work with floating flag",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "assert_1.default.strictEqual(tools_1.formatDate(null, dayjs_1.default('2018-07-05T18:24:00.052'), false, true), '20180705T182400');",
                      "err": {},
                      "uuid": "54eebee5-b95d-431b-bd5f-2aab21e1607d",
                      "parentUUID": "d7b27490-4c2a-4061-85e8-918b3235f161",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9dcfa4eb-54fc-47e1-99ee-984cd941a4f7",
                    "73424659-f616-4c41-804e-0bd0dffff73f",
                    "54eebee5-b95d-431b-bd5f-2aab21e1607d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "2d436980-ddeb-4802-abc3-6c16f36d18bf",
              "title": "formatDateTZ()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/tools.ts",
              "file": "/test/tools.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work with timezone",
                  "fullTitle": "ICalTools formatDateTZ() should work with timezone",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const ed = { timezone: 'Europe/Berlin' };\nassert_1.default.strictEqual(tools_1.formatDateTZ('Europe/Berlin', 'DSTART', moment_timezone_1.default('2018-07-02T15:48:05.000Z'), ed), 'DSTART;TZID=Europe/Berlin:20180702T174805');",
                  "err": {},
                  "uuid": "68def7cf-c5f0-4e9b-b0b1-51d0558f409f",
                  "parentUUID": "2d436980-ddeb-4802-abc3-6c16f36d18bf",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should work without timezone",
                  "fullTitle": "ICalTools formatDateTZ() should work without timezone",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.strictEqual(tools_1.formatDateTZ(null, 'DSTART', '2018-07-02T15:48:05.000Z', {}), 'DSTART:20180702T154805Z');",
                  "err": {},
                  "uuid": "0ab18e60-22ed-41a9-9e2b-7533bb54a112",
                  "parentUUID": "2d436980-ddeb-4802-abc3-6c16f36d18bf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "68def7cf-c5f0-4e9b-b0b1-51d0558f409f",
                "0ab18e60-22ed-41a9-9e2b-7533bb54a112"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "9f917b8b-bc01-4726-9774-c181a3b18f70",
              "title": "escape()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/tools.ts",
              "file": "/test/tools.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should escape \\",
                  "fullTitle": "ICalTools escape() should escape \\",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.strictEqual(tools_1.escape('Lorem \\\\ipsum'), 'Lorem \\\\\\\\ipsum');",
                  "err": {},
                  "uuid": "1c63faaf-8297-46b4-b8d1-d685a2e00151",
                  "parentUUID": "9f917b8b-bc01-4726-9774-c181a3b18f70",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should escape ;",
                  "fullTitle": "ICalTools escape() should escape ;",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.strictEqual(tools_1.escape('Lorem ;ipsum'), 'Lorem \\\\;ipsum');",
                  "err": {},
                  "uuid": "e33b25ee-f8fd-4f6d-931f-65f420534aa3",
                  "parentUUID": "9f917b8b-bc01-4726-9774-c181a3b18f70",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should escape ,",
                  "fullTitle": "ICalTools escape() should escape ,",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.strictEqual(tools_1.escape('Lorem, ipsum'), 'Lorem\\\\, ipsum');",
                  "err": {},
                  "uuid": "8fe3c5f2-0ba3-4618-93e1-80ae6243773f",
                  "parentUUID": "9f917b8b-bc01-4726-9774-c181a3b18f70",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should escape \\r",
                  "fullTitle": "ICalTools escape() should escape \\r",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.strictEqual(tools_1.escape('Lorem \\ripsum'), 'Lorem \\\\nipsum');",
                  "err": {},
                  "uuid": "69ba232b-f2c8-4915-b76c-949244353d51",
                  "parentUUID": "9f917b8b-bc01-4726-9774-c181a3b18f70",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should escape \\n",
                  "fullTitle": "ICalTools escape() should escape \\n",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.strictEqual(tools_1.escape('Lorem \\nipsum'), 'Lorem \\\\nipsum');",
                  "err": {},
                  "uuid": "51248768-f088-4e04-bdb1-17aad657bed4",
                  "parentUUID": "9f917b8b-bc01-4726-9774-c181a3b18f70",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should escape \\r\\n",
                  "fullTitle": "ICalTools escape() should escape \\r\\n",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.strictEqual(tools_1.escape('Lorem \\r\\nipsum'), 'Lorem \\\\nipsum');",
                  "err": {},
                  "uuid": "b4cb0a5a-d40b-49f6-a652-4098c817781d",
                  "parentUUID": "9f917b8b-bc01-4726-9774-c181a3b18f70",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1c63faaf-8297-46b4-b8d1-d685a2e00151",
                "e33b25ee-f8fd-4f6d-931f-65f420534aa3",
                "8fe3c5f2-0ba3-4618-93e1-80ae6243773f",
                "69ba232b-f2c8-4915-b76c-949244353d51",
                "51248768-f088-4e04-bdb1-17aad657bed4",
                "b4cb0a5a-d40b-49f6-a652-4098c817781d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "71355a6d-3f3e-485d-97f2-5aa97f9257ff",
              "title": "foldLines()",
              "fullFile": "/home/runner/work/ical-generator/ical-generator/test/tools.ts",
              "file": "/test/tools.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should basically work correctly",
                  "fullTitle": "ICalTools foldLines() should basically work correctly",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.strictEqual(tools_1.foldLines('12345678ikjhgztrde546rf7g8hjiomkjnhgqfcdxerdftgzuinjhgcfvtzvzvuwcbiweciujzvguhbghbbqwxowidoi21e8981'), '12345678ikjhgztrde546rf7g8hjiomkjnhgqfcdxerdftgzuinjhgcfvtzvzvuwcbiweciujz\\r\\n vguhbghbbqwxowidoi21e8981');",
                  "err": {},
                  "uuid": "8a5fdf1b-84d6-4f56-81a3-10ca24eb5189",
                  "parentUUID": "71355a6d-3f3e-485d-97f2-5aa97f9257ff",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not split surrogate pairs",
                  "fullTitle": "ICalTools foldLines() should not split surrogate pairs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert_1.default.strictEqual(tools_1.foldLines('👋🏼12345678ikjhgztrde546rf7g8hjiomkjnhgqfcdxerdftgzuinjhgcfvtzvzvuwcbiweciujvguhbghbbqwxowidoi21e8981'), '👋🏼12345678ikjhgztrde546rf7g8hjiomkjnhgqfcdxerdftgzuinjhgcfvtzvzvuwcb\\r\\n iweciujvguhbghbbqwxowidoi21e8981');",
                  "err": {},
                  "uuid": "2daa4584-7b61-4063-bda2-2e2e45530e62",
                  "parentUUID": "71355a6d-3f3e-485d-97f2-5aa97f9257ff",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8a5fdf1b-84d6-4f56-81a3-10ca24eb5189",
                "2daa4584-7b61-4063-bda2-2e2e45530e62"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.3.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}